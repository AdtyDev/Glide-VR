{"ast":null,"code":"/*!\n* Photo Sphere Viewer 4.8.1\n* @copyright 2014-2015 Jérémy Heleine\n* @copyright 2015-2022 Damien \"Mistic\" Sorel\n* @licence MIT (https://opensource.org/licenses/MIT)\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('three'), require('uevent')) : typeof define === 'function' && define.amd ? define(['exports', 'three', 'uevent'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.PhotoSphereViewer = {}, global.THREE, global.uEvent));\n})(this, function (exports, three, uevent) {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    _setPrototypeOf(subClass, superClass);\n  }\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n\n  /**\n   * @summary Custom error used in the lib\n   * @param {string} message\n   * @constructor\n   * @memberOf PSV\n   */\n  function PSVError(message) {\n    this.message = message; // Use V8's native method if available, otherwise fallback\n\n    if ('captureStackTrace' in Error) {\n      Error.captureStackTrace(this, PSVError);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n  PSVError.prototype = Object.create(Error.prototype);\n  PSVError.prototype.name = 'PSVError';\n  PSVError.prototype.constructor = PSVError;\n\n  /**\n   * @namespace PSV.adapters\n   */\n\n  /**\n   * @summary Base adapters class\n   * @memberof PSV.adapters\n   * @abstract\n   */\n\n  var AbstractAdapter = /*#__PURE__*/function () {\n    /**\n     * @summary Unique identifier of the adapter\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @summary Indicates if the adapter supports panorama download natively\n     * @type {boolean}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @summary Indicated if the adapter can display an additional transparent image above the panorama\n     * @type {boolean}\n     */\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function AbstractAdapter(psv) {\n      /**\n       * @summary Reference to main controller\n       * @type {PSV.Viewer}\n       * @readonly\n       */\n      this.psv = psv;\n    }\n    /**\n     * @summary Destroys the adapter\n     */\n\n    var _proto = AbstractAdapter.prototype;\n    _proto.destroy = function destroy() {\n      delete this.psv;\n    }\n    /**\n     * @summary Indicates if the adapter supports transitions between panoramas\n     * @param {*} panorama\n     * @return {boolean}\n     */;\n    _proto.supportsTransition = function supportsTransition(panorama) {\n      // eslint-disable-line no-unused-vars\n      return false;\n    }\n    /**\n     * @summary Indicates if the adapter supports preload of a panorama\n     * @param {*} panorama\n     * @return {boolean}\n     */;\n    _proto.supportsPreload = function supportsPreload(panorama) {\n      // eslint-disable-line no-unused-vars\n      return false;\n    }\n    /**\n     * @abstract\n     * @summary Loads the panorama texture(s)\n     * @param {*} panorama\n     * @param {PSV.PanoData | PSV.PanoDataProvider} [newPanoData]\n     * @param {boolean} [useXmpPanoData]\n     * @returns {Promise.<PSV.TextureData>}\n     */;\n    _proto.loadTexture = function loadTexture(panorama, newPanoData, useXmpPanoData) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('loadTexture not implemented');\n    }\n    /**\n     * @abstract\n     * @summary Creates the cube mesh\n     * @param {number} [scale=1]\n     * @returns {external:THREE.Mesh}\n     */;\n    _proto.createMesh = function createMesh(scale) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('createMesh not implemented');\n    }\n    /**\n     * @abstract\n     * @summary Applies the texture to the mesh\n     * @param {external:THREE.Mesh} mesh\n     * @param {PSV.TextureData} textureData\n     * @param {boolean} [transition=false]\n     */;\n    _proto.setTexture = function setTexture(mesh, textureData, transition) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('setTexture not implemented');\n    }\n    /**\n     * @abstract\n     * @summary Changes the opacity of the mesh\n     * @param {external:THREE.Mesh} mesh\n     * @param {number} opacity\n     */;\n    _proto.setTextureOpacity = function setTextureOpacity(mesh, opacity) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('setTextureOpacity not implemented');\n    }\n    /**\n     * @abstract\n     * @summary Clear a loaded texture from memory\n     * @param {PSV.TextureData} textureData\n     */;\n    _proto.disposeTexture = function disposeTexture(textureData) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('disposeTexture not implemented');\n    }\n    /**\n     * @abstract\n     * @summary Applies the overlay to the mesh\n     * @param {external:THREE.Mesh} mesh\n     * @param {PSV.TextureData} textureData\n     * @param {number} opacity\n     */;\n    _proto.setOverlay = function setOverlay(mesh, textureData, opacity) {\n      // eslint-disable-line no-unused-vars\n      throw new PSVError('setOverlay not implemented');\n    }\n    /**\n     * @internal\n     */;\n\n    /**\n     * @internal\n     */\n    AbstractAdapter.createOverlayMaterial = function createOverlayMaterial(_temp) {\n      var _extends2;\n      var _ref = _temp === void 0 ? {} : _temp,\n        additionalUniforms = _ref.additionalUniforms,\n        overrideVertexShader = _ref.overrideVertexShader;\n      return new three.ShaderMaterial({\n        uniforms: _extends({}, additionalUniforms, (_extends2 = {}, _extends2[AbstractAdapter.OVERLAY_UNIFORMS.panorama] = {\n          value: new three.Texture()\n        }, _extends2[AbstractAdapter.OVERLAY_UNIFORMS.overlay] = {\n          value: new three.Texture()\n        }, _extends2[AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity] = {\n          value: 1.0\n        }, _extends2[AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity] = {\n          value: 1.0\n        }, _extends2)),\n        vertexShader: overrideVertexShader || \"\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix *  modelViewMatrix * vec4( position, 1.0 );\\n}\",\n        fragmentShader: \"\\nuniform sampler2D \" + AbstractAdapter.OVERLAY_UNIFORMS.panorama + \";\\nuniform sampler2D \" + AbstractAdapter.OVERLAY_UNIFORMS.overlay + \";\\nuniform float \" + AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity + \";\\nuniform float \" + AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity + \";\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 tColor1 = texture2D( \" + AbstractAdapter.OVERLAY_UNIFORMS.panorama + \", vUv );\\n  vec4 tColor2 = texture2D( \" + AbstractAdapter.OVERLAY_UNIFORMS.overlay + \", vUv );\\n  gl_FragColor = vec4(\\n    mix( tColor1.rgb, tColor2.rgb, tColor2.a * \" + AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity + \" ),\\n    \" + AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity + \"\\n  );\\n}\"\n      });\n    };\n    return AbstractAdapter;\n  }();\n  AbstractAdapter.id = null;\n  AbstractAdapter.supportsDownload = false;\n  AbstractAdapter.supportsOverlay = false;\n  AbstractAdapter.OVERLAY_UNIFORMS = {\n    panorama: 'panorama',\n    overlay: 'overlay',\n    globalOpacity: 'globalOpacity',\n    overlayOpacity: 'overlayOpacity'\n  };\n\n  /**\n   * @namespace PSV.constants\n   */\n\n  /**\n   * @summary Default duration of the transition between panoramas\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n  var DEFAULT_TRANSITION = 1500;\n  /**\n   * @summary Minimum duration of the animations created with {@link Viewer#animate}\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var ANIMATION_MIN_DURATION = 500;\n  /**\n   * @summary Number of pixels bellow which a mouse move will be considered as a click\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var MOVE_THRESHOLD = 4;\n  /**\n   * @summary Delay in milliseconds between two clicks to consider a double click\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var DBLCLICK_DELAY = 300;\n  /**\n   * @summary Delay in milliseconds to emulate a long touch\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var LONGTOUCH_DELAY = 500;\n  /**\n   * @summary Delay in milliseconds to for the two fingers overlay to appear\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var TWOFINGERSOVERLAY_DELAY = 100;\n  /**\n   * @summary Duration in milliseconds of the \"ctrl zoom\" overlay\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var CTRLZOOM_TIMEOUT = 2000;\n  /**\n   * @summary Time size of the mouse position history used to compute inertia\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var INERTIA_WINDOW = 300;\n  /**\n   * @summary Radius of the THREE.SphereGeometry, Half-length of the THREE.BoxGeometry\n   * @memberOf PSV.constants\n   * @type {number}\n   * @constant\n   */\n\n  var SPHERE_RADIUS = 10;\n  /**\n   * @summary Property name added to viewer element\n   * @memberOf PSV.constants\n   * @type {string}\n   * @constant\n   */\n\n  var VIEWER_DATA = 'photoSphereViewer';\n  /**\n   * @summary Property added the the main Mesh object\n   * @memberOf PSV.constants\n   * @type {string}\n   * @constant\n   */\n\n  var MESH_USER_DATA = 'psvSphere';\n  /**\n   * @summary Available actions\n   * @memberOf PSV.constants\n   * @enum {string}\n   * @constant\n   */\n\n  var ACTIONS = {\n    ROTATE_LAT_UP: 'rotateLatitudeUp',\n    ROTATE_LAT_DOWN: 'rotateLatitudeDown',\n    ROTATE_LONG_RIGHT: 'rotateLongitudeRight',\n    ROTATE_LONG_LEFT: 'rotateLongitudeLeft',\n    ZOOM_IN: 'zoomIn',\n    ZOOM_OUT: 'zoomOut',\n    TOGGLE_AUTOROTATE: 'toggleAutorotate'\n  };\n  /**\n   * @summary Available events names\n   * @memberOf PSV.constants\n   * @enum {string}\n   * @constant\n   */\n\n  var EVENTS = {\n    /**\n     * @event autorotate\n     * @memberof PSV\n     * @summary Triggered when the automatic rotation is enabled/disabled\n     * @param {boolean} enabled\n     */\n    AUTOROTATE: 'autorotate',\n    /**\n     * @event before-render\n     * @memberof PSV\n     * @summary Triggered before a render, used to modify the view\n     * @param {number} timestamp - time provided by requestAnimationFrame\n     * @param {number} elapsed - time elapsed from the previous frame\n     */\n    BEFORE_RENDER: 'before-render',\n    /**\n     * @event before-rotate\n     * @memberOf PSV\n     * @summary Triggered before a rotate operation, can be cancelled\n     * @param {PSV.ExtendedPosition}\n     */\n    BEFORE_ROTATE: 'before-rotate',\n    /**\n     * @event click\n     * @memberof PSV\n     * @summary Triggered when the user clicks on the viewer (everywhere excluding the navbar and the side panel)\n     * @param {PSV.ClickData} data\n     */\n    CLICK: 'click',\n    /**\n     * @event close-panel\n     * @memberof PSV\n     * @summary Triggered when the panel is closed\n     * @param {string} [id]\n     */\n    CLOSE_PANEL: 'close-panel',\n    /**\n     * @event config-changed\n     * @memberOf PSV\n     * @summary Triggered after a call to setOption/setOptions\n     * @param {string[]} name of changed options\n     */\n    CONFIG_CHANGED: 'config-changed',\n    /**\n     * @event dblclick\n     * @memberof PSV\n     * @summary Triggered when the user double clicks on the viewer. The simple `click` event is always fired before `dblclick`\n     * @param {PSV.ClickData} data\n     */\n    DOUBLE_CLICK: 'dblclick',\n    /**\n     * @event fullscreen-updated\n     * @memberof PSV\n     * @summary Triggered when the fullscreen mode is enabled/disabled\n     * @param {boolean} enabled\n     */\n    FULLSCREEN_UPDATED: 'fullscreen-updated',\n    /**\n     * @event hide-notification\n     * @memberof PSV\n     * @summary Triggered when the notification is hidden\n     * @param {string} [id]\n     */\n    HIDE_NOTIFICATION: 'hide-notification',\n    /**\n     * @event hide-overlay\n     * @memberof PSV\n     * @summary Triggered when the overlay is hidden\n     * @param {string} [id]\n     */\n    HIDE_OVERLAY: 'hide-overlay',\n    /**\n     * @event hide-tooltip\n     * @memberof PSV\n     * @summary Triggered when the tooltip is hidden\n     * @param {*} Data associated to this tooltip\n     */\n    HIDE_TOOLTIP: 'hide-tooltip',\n    /**\n     * @event key-press\n     * @memberof PSV\n     * @summary Triggered when a key is pressed, can be cancelled\n     * @param {string} key\n     */\n    KEY_PRESS: 'key-press',\n    /**\n     * @event load-progress\n     * @memberof PSV\n     * @summary Triggered when the loader value changes\n     * @param {number} value from 0 to 100\n     */\n    LOAD_PROGRESS: 'load-progress',\n    /**\n     * @event open-panel\n     * @memberof PSV\n     * @summary Triggered when the panel is opened\n     * @param {string} [id]\n     */\n    OPEN_PANEL: 'open-panel',\n    /**\n     * @event panorama-loaded\n     * @memberof PSV\n     * @summary Triggered when a panorama image has been loaded\n     * @param {PSV.TextureData} textureData\n     */\n    PANORAMA_LOADED: 'panorama-loaded',\n    /**\n     * @event position-updated\n     * @memberof PSV\n     * @summary Triggered when the view longitude and/or latitude changes\n     * @param {PSV.Position} position\n     */\n    POSITION_UPDATED: 'position-updated',\n    /**\n     * @event ready\n     * @memberof PSV\n     * @summary Triggered when the panorama image has been loaded and the viewer is ready to perform the first render\n     */\n    READY: 'ready',\n    /**\n     * @event render\n     * @memberof PSV\n     * @summary Triggered on each viewer render, **this event is triggered very often**\n     */\n    RENDER: 'render',\n    /**\n     * @event show-notification\n     * @memberof PSV\n     * @summary Triggered when the notification is shown\n     * @param {string} [id]\n     */\n    SHOW_NOTIFICATION: 'show-notification',\n    /**\n     * @event show-overlay\n     * @memberof PSV\n     * @summary Triggered when the overlay is shown\n     * @param {string} [id]\n     */\n    SHOW_OVERLAY: 'show-overlay',\n    /**\n     * @event show-tooltip\n     * @memberof PSV\n     * @summary Triggered when the tooltip is shown\n     * @param {*} Data associated to this tooltip\n     * @param {PSV.components.Tooltip} Instance of the tooltip\n     */\n    SHOW_TOOLTIP: 'show-tooltip',\n    /**\n     * @event size-updated\n     * @memberof PSV\n     * @summary Triggered when the viewer size changes\n     * @param {PSV.Size} size\n     */\n    SIZE_UPDATED: 'size-updated',\n    /**\n     * @event stop-all\n     * @memberof PSV\n     * @summary Triggered when all current animations are stopped\n     */\n    STOP_ALL: 'stop-all',\n    /**\n     * @event zoom-updated\n     * @memberof PSV\n     * @summary Triggered when the zoom level changes\n     * @param {number} zoomLevel\n     */\n    ZOOM_UPDATED: 'zoom-updated'\n  };\n  /**\n   * @summary Available change events names\n   * @memberOf PSV.constants\n   * @enum {string}\n   * @constant\n   */\n\n  var CHANGE_EVENTS = {\n    /**\n     * @event get-animate-position\n     * @memberof PSV\n     * @param {Position} position\n     * @returns {Position}\n     * @summary Called to alter the target position of an animation\n     */\n    GET_ANIMATE_POSITION: 'get-animate-position',\n    /**\n     * @event get-rotate-position\n     * @memberof PSV\n     * @param {Position} position\n     * @returns {Position}\n     * @summary Called to alter the target position of a rotation\n     */\n    GET_ROTATE_POSITION: 'get-rotate-position'\n  };\n  /**\n   * @summary Special events emitted to listener using {@link Viewer#observeObjects}\n   * @memberOf PSV.constants\n   * @constant\n   * @package\n   */\n\n  var OBJECT_EVENTS = {\n    ENTER_OBJECT: 'enter-object',\n    HOVER_OBJECT: 'hover-object',\n    LEAVE_OBJECT: 'leave-object'\n  };\n  /**\n   * @summary Internal identifiers for various stuff\n   * @memberOf PSV.constants\n   * @enum {string}\n   * @constant\n   */\n\n  var IDS = {\n    MENU: 'menu',\n    TWO_FINGERS: 'twoFingers',\n    CTRL_ZOOM: 'ctrlZoom',\n    ERROR: 'error',\n    DESCRIPTION: 'description'\n  };\n  /* eslint-disable */\n  // @formatter:off\n\n  /**\n   * @summary Collection of easing functions\n   * @memberOf PSV.constants\n   * @see {@link https://gist.github.com/frederickk/6165768}\n   * @type {Object<string, Function>}\n   * @constant\n   */\n\n  var EASINGS = {\n    linear: function linear(t) {\n      return t;\n    },\n    inQuad: function inQuad(t) {\n      return t * t;\n    },\n    outQuad: function outQuad(t) {\n      return t * (2 - t);\n    },\n    inOutQuad: function inOutQuad(t) {\n      return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    inCubic: function inCubic(t) {\n      return t * t * t;\n    },\n    outCubic: function outCubic(t) {\n      return --t * t * t + 1;\n    },\n    inOutCubic: function inOutCubic(t) {\n      return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    inQuart: function inQuart(t) {\n      return t * t * t * t;\n    },\n    outQuart: function outQuart(t) {\n      return 1 - --t * t * t * t;\n    },\n    inOutQuart: function inOutQuart(t) {\n      return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    inQuint: function inQuint(t) {\n      return t * t * t * t * t;\n    },\n    outQuint: function outQuint(t) {\n      return 1 + --t * t * t * t * t;\n    },\n    inOutQuint: function inOutQuint(t) {\n      return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n    inSine: function inSine(t) {\n      return 1 - Math.cos(t * (Math.PI / 2));\n    },\n    outSine: function outSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    inOutSine: function inOutSine(t) {\n      return .5 - .5 * Math.cos(Math.PI * t);\n    },\n    inExpo: function inExpo(t) {\n      return Math.pow(2, 10 * (t - 1));\n    },\n    outExpo: function outExpo(t) {\n      return 1 - Math.pow(2, -10 * t);\n    },\n    inOutExpo: function inOutExpo(t) {\n      return (t = t * 2 - 1) < 0 ? .5 * Math.pow(2, 10 * t) : 1 - .5 * Math.pow(2, -10 * t);\n    },\n    inCirc: function inCirc(t) {\n      return 1 - Math.sqrt(1 - t * t);\n    },\n    outCirc: function outCirc(t) {\n      return Math.sqrt(1 - (t - 1) * (t - 1));\n    },\n    inOutCirc: function inOutCirc(t) {\n      return (t *= 2) < 1 ? .5 - .5 * Math.sqrt(1 - t * t) : .5 + .5 * Math.sqrt(1 - (t -= 2) * t);\n    }\n  }; // @formatter:on\n\n  /* eslint-enable */\n\n  /**\n   * @summary Subset of key codes\n   * @memberOf PSV.constants\n   * @type {Object<string, string>}\n   * @constant\n   */\n\n  var KEY_CODES = {\n    Enter: 'Enter',\n    Control: 'Control',\n    Escape: 'Escape',\n    Space: ' ',\n    PageUp: 'PageUp',\n    PageDown: 'PageDown',\n    ArrowLeft: 'ArrowLeft',\n    ArrowUp: 'ArrowUp',\n    ArrowRight: 'ArrowRight',\n    ArrowDown: 'ArrowDown',\n    Delete: 'Delete',\n    Plus: '+',\n    Minus: '-'\n  };\n  var constants = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    DEFAULT_TRANSITION: DEFAULT_TRANSITION,\n    ANIMATION_MIN_DURATION: ANIMATION_MIN_DURATION,\n    MOVE_THRESHOLD: MOVE_THRESHOLD,\n    DBLCLICK_DELAY: DBLCLICK_DELAY,\n    LONGTOUCH_DELAY: LONGTOUCH_DELAY,\n    TWOFINGERSOVERLAY_DELAY: TWOFINGERSOVERLAY_DELAY,\n    CTRLZOOM_TIMEOUT: CTRLZOOM_TIMEOUT,\n    INERTIA_WINDOW: INERTIA_WINDOW,\n    SPHERE_RADIUS: SPHERE_RADIUS,\n    VIEWER_DATA: VIEWER_DATA,\n    MESH_USER_DATA: MESH_USER_DATA,\n    ACTIONS: ACTIONS,\n    EVENTS: EVENTS,\n    CHANGE_EVENTS: CHANGE_EVENTS,\n    OBJECT_EVENTS: OBJECT_EVENTS,\n    IDS: IDS,\n    EASINGS: EASINGS,\n    KEY_CODES: KEY_CODES\n  });\n  var LOCALSTORAGE_TOUCH_SUPPORT = VIEWER_DATA + \"_touchSupport\";\n  /**\n   * @summary General information about the system\n   * @constant\n   * @memberOf PSV\n   * @property {boolean} loaded - Indicates if the system data has been loaded\n   * @property {Function} load - Loads the system if not already loaded\n   * @property {number} pixelRatio\n   * @property {boolean} isWebGLSupported\n   * @property {number} maxCanvasWidth\n   * @property {string} mouseWheelEvent\n   * @property {string} fullscreenEvent\n   * @property {Function} getMaxCanvasWidth - Returns the max width of a canvas allowed by the browser\n   * @property {{initial: boolean, promise: Promise<boolean>}} isTouchEnabled\n   */\n\n  var SYSTEM = {\n    loaded: false,\n    pixelRatio: 1,\n    isWebGLSupported: false,\n    isTouchEnabled: null,\n    maxTextureWidth: 0,\n    mouseWheelEvent: null,\n    fullscreenEvent: null\n  };\n  /**\n   * @summary Loads the system if not already loaded\n   */\n\n  SYSTEM.load = function () {\n    if (!SYSTEM.loaded) {\n      var ctx = getWebGLCtx();\n      SYSTEM.loaded = true;\n      SYSTEM.pixelRatio = window.devicePixelRatio || 1;\n      SYSTEM.isWebGLSupported = ctx != null;\n      SYSTEM.isTouchEnabled = isTouchEnabled();\n      SYSTEM.maxTextureWidth = getMaxTextureWidth(ctx);\n      SYSTEM.mouseWheelEvent = getMouseWheelEvent();\n      SYSTEM.fullscreenEvent = getFullscreenEvent();\n    }\n  };\n  var maxCanvasWidth = null;\n  SYSTEM.getMaxCanvasWidth = function () {\n    if (maxCanvasWidth === null) {\n      maxCanvasWidth = getMaxCanvasWidth(SYSTEM.maxTextureWidth);\n    }\n    return maxCanvasWidth;\n  };\n  /**\n   * @summary Tries to return a canvas webgl context\n   * @returns {WebGLRenderingContext}\n   * @private\n   */\n\n  function getWebGLCtx() {\n    var canvas = document.createElement('canvas');\n    var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n    var context = null;\n    if (!canvas.getContext) {\n      return null;\n    }\n    if (names.some(function (name) {\n      try {\n        context = canvas.getContext(name);\n        return context !== null;\n      } catch (e) {\n        return false;\n      }\n    })) {\n      return context;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @summary Detects if the user is using a touch screen\n   * @returns {{initial: boolean, promise: Promise<boolean>}}\n   * @private\n   */\n\n  function isTouchEnabled() {\n    var initial = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    if (LOCALSTORAGE_TOUCH_SUPPORT in localStorage) {\n      initial = localStorage[LOCALSTORAGE_TOUCH_SUPPORT] === 'true';\n    }\n    var promise = new Promise(function (resolve) {\n      var clear;\n      var listenerMouse = function listenerMouse() {\n        clear();\n        localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = false;\n        resolve(false);\n      };\n      var listenerTouch = function listenerTouch() {\n        clear();\n        localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = true;\n        resolve(true);\n      };\n      var listenerTimeout = function listenerTimeout() {\n        clear();\n        localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = initial;\n        resolve(initial);\n      };\n      window.addEventListener('mousedown', listenerMouse, false);\n      window.addEventListener('touchstart', listenerTouch, false);\n      var listenerTimeoutId = setTimeout(listenerTimeout, 10000);\n      clear = function clear() {\n        window.removeEventListener('mousedown', listenerMouse);\n        window.removeEventListener('touchstart', listenerTouch);\n        clearTimeout(listenerTimeoutId);\n      };\n    });\n    return {\n      initial: initial,\n      promise: promise\n    };\n  }\n  /**\n   * @summary Gets max texture width in WebGL context\n   * @returns {number}\n   * @private\n   */\n\n  function getMaxTextureWidth(ctx) {\n    if (ctx !== null) {\n      return ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n    } else {\n      return 0;\n    }\n  }\n  /**\n   * @summary Gets max canvas width supported by the browser.\n   * We only test powers of 2 and height = width / 2 because that's what we need to generate WebGL textures\n   * @param maxWidth\n   * @return {number}\n   * @private\n   */\n\n  function getMaxCanvasWidth(maxWidth) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    canvas.width = maxWidth;\n    canvas.height = maxWidth / 2;\n    while (canvas.width > 1024) {\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, 1, 1);\n      try {\n        if (ctx.getImageData(0, 0, 1, 1).data[0] > 0) {\n          return canvas.width;\n        }\n      } catch (e) {// continue\n      }\n      canvas.width /= 2;\n      canvas.height /= 2;\n    }\n    throw new PSVError('Unable to detect system capabilities');\n  }\n  /**\n   * @summary Gets the event name for mouse wheel\n   * @returns {string}\n   * @private\n   */\n\n  function getMouseWheelEvent() {\n    if ('onwheel' in document.createElement('div')) {\n      // Modern browsers support \"wheel\"\n      return 'wheel';\n    } else if (document.onmousewheel !== undefined) {\n      // Webkit and IE support at least \"mousewheel\"\n      return 'mousewheel';\n    } else {\n      // let's assume that remaining browsers are older Firefox\n      return 'DOMMouseScroll';\n    }\n  }\n  /**\n   * @summary Map between fullsceen method and fullscreen event name\n   * @type {Object<string, string>}\n   * @readonly\n   * @private\n   */\n\n  var FULLSCREEN_EVT_MAP = {\n    exitFullscreen: 'fullscreenchange',\n    webkitExitFullscreen: 'webkitfullscreenchange',\n    mozCancelFullScreen: 'mozfullscreenchange',\n    msExitFullscreen: 'MSFullscreenChange'\n  };\n  /**\n   * @summary  Gets the event name for fullscreen\n   * @returns {string}\n   * @private\n   */\n\n  function getFullscreenEvent() {\n    var validExits = Object.keys(FULLSCREEN_EVT_MAP).filter(function (exit) {\n      return exit in document;\n    });\n    if (validExits.length) {\n      return FULLSCREEN_EVT_MAP[validExits[0]];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @summary Toggles a CSS class\n   * @memberOf PSV.utils\n   * @param {HTMLElement|SVGElement} element\n   * @param {string} className\n   * @param {boolean} [active] - forced state\n   */\n  function toggleClass(element, className, active) {\n    if (active === undefined) {\n      element.classList.toggle(className);\n    } else if (active) {\n      element.classList.add(className);\n    } else if (!active) {\n      element.classList.remove(className);\n    }\n  }\n  /**\n   * @summary Adds one or several CSS classes to an element\n   * @memberOf PSV.utils\n   * @param {HTMLElement} element\n   * @param {string} className\n   */\n\n  function addClasses(element, className) {\n    var _element$classList;\n    (_element$classList = element.classList).add.apply(_element$classList, className.split(' '));\n  }\n  /**\n   * @summary Removes one or several CSS classes to an element\n   * @memberOf PSV.utils\n   * @param {HTMLElement} element\n   * @param {string} className\n   */\n\n  function removeClasses(element, className) {\n    var _element$classList2;\n    (_element$classList2 = element.classList).remove.apply(_element$classList2, className.split(' '));\n  }\n  /**\n   * @summary Searches if an element has a particular parent at any level including itself\n   * @memberOf PSV.utils\n   * @param {HTMLElement} el\n   * @param {HTMLElement} parent\n   * @returns {boolean}\n   */\n\n  function hasParent(el, parent) {\n    var test = el;\n    do {\n      if (test === parent) {\n        return true;\n      }\n      test = test.parentNode;\n    } while (test);\n    return false;\n  }\n  /**\n   * @summary Gets the closest parent (can by itself)\n   * @memberOf PSV.utils\n   * @param {HTMLElement|SVGElement} el\n   * @param {string} selector\n   * @returns {HTMLElement}\n   */\n\n  function getClosest(el, selector) {\n    // When el is document or window, the matches does not exist\n    if (!(el != null && el.matches)) {\n      return null;\n    }\n    var test = el;\n    do {\n      if (test.matches(selector)) {\n        return test;\n      }\n      test = test instanceof SVGElement ? test.parentNode : test.parentElement;\n    } while (test);\n    return null;\n  }\n  /**\n   * @summary Gets the position of an element in the viewer without reflow\n   * @description Will gives the same result as getBoundingClientRect() as soon as there are no CSS transforms\n   * @memberOf PSV.utils\n   * @param {HTMLElement} el\n   * @return {{left: number, top: number}}\n   */\n\n  function getPosition(el) {\n    var left = 0;\n    var top = 0;\n    var test = el;\n    while (test) {\n      left += test.offsetLeft - test.scrollLeft + test.clientLeft;\n      top += test.offsetTop - test.scrollTop + test.clientTop;\n      test = test.offsetParent;\n    }\n    return {\n      left: left,\n      top: top\n    };\n  }\n  /**\n   * @summary Detects if fullscreen is enabled\n   * @memberOf PSV.utils\n   * @param {HTMLElement} elt\n   * @returns {boolean}\n   */\n\n  function isFullscreenEnabled(elt) {\n    return (document.fullscreenElement || document.webkitFullscreenElement) === elt;\n  }\n  /**\n   * @summary Enters fullscreen mode\n   * @memberOf PSV.utils\n   * @param {HTMLElement} elt\n   */\n\n  function requestFullscreen(elt) {\n    (elt.requestFullscreen || elt.webkitRequestFullscreen).call(elt);\n  }\n  /**\n   * @summary Exits fullscreen mode\n   * @memberOf PSV.utils\n   */\n\n  function exitFullscreen() {\n    (document.exitFullscreen || document.webkitExitFullscreen).call(document);\n  }\n  /**\n   * @summary Gets an element style\n   * @memberOf PSV.utils\n   * @param {HTMLElement} elt\n   * @param {string} prop\n   * @returns {*}\n   */\n\n  function getStyle(elt, prop) {\n    return window.getComputedStyle(elt, null)[prop];\n  }\n  /**\n   * @summary Normalize mousewheel values accross browsers\n   * @memberOf PSV.utils\n   * @description From Facebook's Fixed Data Table\n   * {@link https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js}\n   * @copyright Facebook\n   * @param {WheelEvent} event\n   * @returns {{spinX: number, spinY: number, pixelX: number, pixelY: number}}\n   */\n\n  function normalizeWheel(event) {\n    var PIXEL_STEP = 10;\n    var LINE_HEIGHT = 40;\n    var PAGE_HEIGHT = 800;\n    var spinX = 0;\n    var spinY = 0;\n    var pixelX = 0;\n    var pixelY = 0; // Legacy\n\n    if ('detail' in event) {\n      spinY = event.detail;\n    }\n    if ('wheelDelta' in event) {\n      spinY = -event.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in event) {\n      spinY = -event.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in event) {\n      spinX = -event.wheelDeltaX / 120;\n    } // side scrolling on FF with DOMMouseScroll\n\n    if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n      spinX = spinY;\n      spinY = 0;\n    }\n    pixelX = spinX * PIXEL_STEP;\n    pixelY = spinY * PIXEL_STEP;\n    if ('deltaY' in event) {\n      pixelY = event.deltaY;\n    }\n    if ('deltaX' in event) {\n      pixelX = event.deltaX;\n    }\n    if ((pixelX || pixelY) && event.deltaMode) {\n      // delta in LINE units\n      if (event.deltaMode === 1) {\n        pixelX *= LINE_HEIGHT;\n        pixelY *= LINE_HEIGHT;\n      } // delta in PAGE units\n      else {\n        pixelX *= PAGE_HEIGHT;\n        pixelY *= PAGE_HEIGHT;\n      }\n    } // Fall-back if spin cannot be determined\n\n    if (pixelX && !spinX) {\n      spinX = pixelX < 1 ? -1 : 1;\n    }\n    if (pixelY && !spinY) {\n      spinY = pixelY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: spinX,\n      spinY: spinY,\n      pixelX: pixelX,\n      pixelY: pixelY\n    };\n  }\n\n  /**\n   * @deprecated use THREE.MathUtils.clamp\n   */\n\n  function bound(x, min, max) {\n    return three.MathUtils.clamp(x, min, max);\n  }\n  /**\n   * @summary Ensure a value is within 0 and `max`\n   * @param {number} value\n   * @param {number} max\n   * @return {number}\n   */\n\n  function loop(value, max) {\n    var result = value % max;\n    if (result < 0) {\n      result += max;\n    }\n    return result;\n  }\n  /**\n   * @deprecated Use THREE.MathUtils.isPowerOfTwo\n   */\n\n  function isPowerOfTwo(x) {\n    return three.MathUtils.isPowerOfTwo(x);\n  }\n  /**\n   * @summary Computes the sum of an array\n   * @memberOf PSV.utils\n   * @param {number[]} array\n   * @returns {number}\n   */\n\n  function sum(array) {\n    return array.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  }\n  /**\n   * @summary Computes the distance between two points\n   * @memberOf PSV.utils\n   * @param {PSV.Point} p1\n   * @param {PSV.Point} p2\n   * @returns {number}\n   */\n\n  function distance(p1, p2) {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n  }\n  /**\n   * @summary Compute the shortest offset between two longitudes\n   * @memberOf PSV.utils\n   * @param {number} from\n   * @param {number} to\n   * @returns {number}\n   */\n\n  function getShortestArc(from, to) {\n    var tCandidates = [0,\n    // direct\n    Math.PI * 2,\n    // clock-wise cross zero\n    -Math.PI * 2 // counter-clock-wise cross zero\n    ];\n    return tCandidates.reduce(function (value, candidate) {\n      var newCandidate = to - from + candidate;\n      return Math.abs(newCandidate) < Math.abs(value) ? newCandidate : value;\n    }, Infinity);\n  }\n  /**\n   * @summary Computes the angle between the current position and a target position\n   * @memberOf PSV.utils\n   * @param {PSV.Position} position1\n   * @param {PSV.Position} position2\n   * @returns {number}\n   */\n\n  function getAngle(position1, position2) {\n    return Math.acos(Math.cos(position1.latitude) * Math.cos(position2.latitude) * Math.cos(position1.longitude - position2.longitude) + Math.sin(position1.latitude) * Math.sin(position2.latitude));\n  }\n  /**\n   * @summary Returns the distance between two points on a sphere of radius one\n   * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n   * @memberOf PSV.utils\n   * @param {number[]} p1\n   * @param {number[]} p2\n   * @returns {number}\n   */\n\n  function greatArcDistance(p1, p2) {\n    var λ1 = p1[0],\n      φ1 = p1[1];\n    var λ2 = p2[0],\n      φ2 = p2[1];\n    var x = (λ2 - λ1) * Math.cos((φ1 + φ2) / 2);\n    var y = φ2 - φ1;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  /**\n   * @summary Transforms a string to dash-case {@link https://github.com/shahata/dasherize}\n   * @memberOf PSV.utils\n   * @param {string} str\n   * @returns {string}\n   */\n  function dasherize(str) {\n    return str.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g, function (s, i) {\n      return (i > 0 ? '-' : '') + s.toLowerCase();\n    });\n  }\n  /**\n   * @summary Returns a function, that, when invoked, will only be triggered at most once during a given window of time.\n   * @memberOf PSV.utils\n   * @copyright underscore.js - modified by Clément Prévost {@link http://stackoverflow.com/a/27078401}\n   * @param {Function} func\n   * @param {number} wait\n   * @returns {Function}\n   */\n\n  function throttle(func, wait) {\n    /* eslint-disable */\n    var self, args, result;\n    var timeout;\n    var previous = 0;\n    var later = function later() {\n      previous = Date.now();\n      timeout = undefined;\n      result = func.apply(self, args);\n      if (!timeout) {\n        self = args = null;\n      }\n    };\n    return function () {\n      var now = Date.now();\n      if (!previous) {\n        previous = now;\n      }\n      var remaining = wait - (now - previous);\n      self = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = undefined;\n        }\n        previous = now;\n        result = func.apply(self, args);\n        if (!timeout) {\n          self = args = null;\n        }\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n    /* eslint-enable */\n  }\n  /**\n   * @summary Test if an object is a plain object\n   * @memberOf PSV.utils\n   * @description Test if an object is a plain object, i.e. is constructed\n   * by the built-in Object constructor and inherits directly from Object.prototype\n   * or null. Some built-in objects pass the test, e.g. Math which is a plain object\n   * and some host or exotic objects may pass also.\n   * {@link http://stackoverflow.com/a/5878101/1207670}\n   * @param {*} obj\n   * @returns {boolean}\n   */\n\n  function isPlainObject(obj) {\n    // Basic check for Type object that's not null\n    if (typeof obj === 'object' && obj !== null) {\n      // If Object.getPrototypeOf supported, use it\n      if (typeof Object.getPrototypeOf === 'function') {\n        var proto = Object.getPrototypeOf(obj);\n        return proto === Object.prototype || proto === null;\n      } // Otherwise, use internal class\n      // This should be reliable as if getPrototypeOf not supported, is pre-ES5\n\n      return Object.prototype.toString.call(obj) === '[object Object]';\n    } // Not an object\n\n    return false;\n  }\n  /**\n   * @summary Merges the enumerable attributes of two objects\n   * @memberOf PSV.utils\n   * @description Replaces arrays and alters the target object.\n   * @copyright Nicholas Fisher <nfisher110@gmail.com>\n   * @param {Object} target\n   * @param {Object} src\n   * @returns {Object} target\n   */\n\n  function deepmerge(target, src) {\n    /* eslint-disable */\n    var first = src;\n    return function merge(target, src) {\n      if (Array.isArray(src)) {\n        if (!target || !Array.isArray(target)) {\n          target = [];\n        } else {\n          target.length = 0;\n        }\n        src.forEach(function (e, i) {\n          target[i] = merge(null, e);\n        });\n      } else if (typeof src === 'object') {\n        if (!target || Array.isArray(target)) {\n          target = {};\n        }\n        Object.keys(src).forEach(function (key) {\n          if (typeof src[key] !== 'object' || !src[key] || !isPlainObject(src[key])) {\n            target[key] = src[key];\n          } else if (src[key] != first) {\n            if (!target[key]) {\n              target[key] = merge(null, src[key]);\n            } else {\n              merge(target[key], src[key]);\n            }\n          }\n        });\n      } else {\n        target = src;\n      }\n      return target;\n    }(target, src);\n    /* eslint-enable */\n  }\n  /**\n   * @summary Deeply clones an object\n   * @memberOf PSV.utils\n   * @param {Object} src\n   * @returns {Object}\n   */\n\n  function clone(src) {\n    return deepmerge(null, src);\n  }\n  /**\n   * @summery Test of an object is empty\n   * @memberOf PSV.utils\n   * @param {object} obj\n   * @returns {boolean}\n   */\n\n  function isEmpty(obj) {\n    return !obj || Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n  /**\n   * @summary Loops over enumerable properties of an object\n   * @memberOf PSV.utils\n   * @param {Object} object\n   * @param {Function} callback\n   */\n\n  function each(object, callback) {\n    Object.keys(object).forEach(function (key) {\n      callback(object[key], key);\n    });\n  }\n  /**\n   * @summary Returns if a valu is null or undefined\n   * @memberOf PSV.utils\n   * @param {*} val\n   * @return {boolean}\n   */\n\n  function isNil(val) {\n    return val === null || val === undefined;\n  }\n  /**\n   * @summary Returns the first non null non undefined parameter\n   * @memberOf PSV.utils\n   * @param {*} values\n   * @return {*}\n   */\n\n  function firstNonNull() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    for (var _i = 0, _values = values; _i < _values.length; _i++) {\n      var val = _values[_i];\n      if (!isNil(val)) {\n        return val;\n      }\n    }\n    return undefined;\n  }\n  /**\n   * @summary Returns deep equality between objects\n   * {@link https://gist.github.com/egardner/efd34f270cc33db67c0246e837689cb9}\n   * @param obj1\n   * @param obj2\n   * @return {boolean}\n   * @private\n   */\n\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    } else if (isObject(obj1) && isObject(obj2)) {\n      if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n        return false;\n      }\n      for (var _i2 = 0, _Object$keys = Object.keys(obj1); _i2 < _Object$keys.length; _i2++) {\n        var prop = _Object$keys[_i2];\n        if (!deepEqual(obj1[prop], obj2[prop])) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function isObject(obj) {\n    return typeof obj === 'object' && obj != null;\n  }\n\n  /**\n   * @summary Returns the plugin constructor from the imported object\n   * For retrocompatibility with previous default exports\n   * @memberOf PSV.utils\n   * @package\n   */\n\n  function pluginInterop(plugin, target) {\n    if (plugin) {\n      for (var _i = 0, _arr = [['_', plugin]].concat(Object.entries(plugin)); _i < _arr.length; _i++) {\n        var _arr$_i = _arr[_i],\n          p = _arr$_i[1];\n        if (p.prototype instanceof target) {\n          return p;\n        }\n      }\n    }\n    return null;\n  }\n  /**\n   * @summary Builds an Error with name 'AbortError'\n   * @memberOf PSV.utils\n   * @return {Error}\n   */\n\n  function getAbortError() {\n    var error = new Error('Loading was aborted.');\n    error.name = 'AbortError';\n    return error;\n  }\n  /**\n   * @summary Tests if an Error has name 'AbortError'\n   * @memberOf PSV.utils\n   * @param {Error} err\n   * @return {boolean}\n   */\n\n  function isAbortError(err) {\n    return (err == null ? void 0 : err.name) === 'AbortError';\n  }\n  /**\n   * @summary Displays a warning in the console\n   * @memberOf PSV.utils\n   * @param {string} message\n   */\n\n  function logWarn(message) {\n    console.warn(\"PhotoSphereViewer: \" + message);\n  }\n  /**\n   * @summary Checks if an object is a {PSV.ExtendedPosition}, ie has x/y or longitude/latitude\n   * @memberOf PSV.utils\n   * @param {object} object\n   * @returns {boolean}\n   */\n\n  function isExtendedPosition(object) {\n    return [['x', 'y'], ['longitude', 'latitude']].some(function (_ref) {\n      var key1 = _ref[0],\n        key2 = _ref[1];\n      return object[key1] !== undefined && object[key2] !== undefined;\n    });\n  }\n  /**\n   * @summary Returns the value of a given attribute in the panorama metadata\n   * @memberOf PSV.utils\n   * @param {string} data\n   * @param {string} attr\n   * @returns (number)\n   */\n\n  function getXMPValue(data, attr) {\n    // XMP data are stored in children\n    var result = data.match('<GPano:' + attr + '>(.*)</GPano:' + attr + '>');\n    if (result !== null) {\n      var val = parseInt(result[1], 10);\n      return isNaN(val) ? null : val;\n    } // XMP data are stored in attributes\n\n    result = data.match('GPano:' + attr + '=\"(.*?)\"');\n    if (result !== null) {\n      var _val = parseInt(result[1], 10);\n      return isNaN(_val) ? null : _val;\n    }\n    return null;\n  }\n  /**\n   * @readonly\n   * @private\n   * @type {{top: string, left: string, bottom: string, center: string, right: string}}\n   */\n\n  var CSS_POSITIONS = {\n    top: '0%',\n    bottom: '100%',\n    left: '0%',\n    right: '100%',\n    center: '50%'\n  };\n  /**\n   * @summary Translate CSS values like \"top center\" or \"10% 50%\" as top and left positions\n   * @memberOf PSV.utils\n   * @description The implementation is as close as possible to the \"background-position\" specification\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n   * @param {string|PSV.Point} value\n   * @returns {PSV.Point}\n   */\n\n  function parsePosition(value) {\n    if (!value) {\n      return {\n        x: 0.5,\n        y: 0.5\n      };\n    }\n    if (typeof value === 'object') {\n      return value;\n    }\n    var tokens = value.toLocaleLowerCase().split(' ').slice(0, 2);\n    if (tokens.length === 1) {\n      if (CSS_POSITIONS[tokens[0]] !== undefined) {\n        tokens = [tokens[0], 'center'];\n      } else {\n        tokens = [tokens[0], tokens[0]];\n      }\n    }\n    var xFirst = tokens[1] !== 'left' && tokens[1] !== 'right' && tokens[0] !== 'top' && tokens[0] !== 'bottom';\n    tokens = tokens.map(function (token) {\n      return CSS_POSITIONS[token] || token;\n    });\n    if (!xFirst) {\n      tokens.reverse();\n    }\n    var parsed = tokens.join(' ').match(/^([0-9.]+)% ([0-9.]+)%$/);\n    if (parsed) {\n      return {\n        x: parseFloat(parsed[1]) / 100,\n        y: parseFloat(parsed[2]) / 100\n      };\n    } else {\n      return {\n        x: 0.5,\n        y: 0.5\n      };\n    }\n  }\n  /**\n   * @readonly\n   * @private\n   */\n\n  var X_VALUES = ['left', 'center', 'right'];\n  /**\n   * @readonly\n   * @private\n   */\n\n  var Y_VALUES = ['top', 'center', 'bottom'];\n  /**\n   * @readonly\n   * @private\n   */\n\n  var POS_VALUES = [].concat(X_VALUES, Y_VALUES);\n  /**\n   * @readonly\n   * @private\n   */\n\n  var CENTER = 'center';\n  /**\n   * @summary Parse a CSS-like position into an array of position keywords among top, bottom, left, right and center\n   * @memberOf PSV.utils\n   * @param {string | string[]} value\n   * @param {object} [options]\n   * @param {boolean} [options.allowCenter=true] allow \"center center\"\n   * @param {boolean} [options.cssOrder=true] force CSS order (y axis then x axis)\n   * @return {string[]}\n   */\n\n  function cleanPosition(value, _temp) {\n    var _ref2 = _temp === void 0 ? {\n        allowCenter: true,\n        cssOrder: true\n      } : _temp,\n      allowCenter = _ref2.allowCenter,\n      cssOrder = _ref2.cssOrder;\n    if (!value) {\n      return null;\n    }\n    if (typeof value === 'string') {\n      value = value.split(' ');\n    }\n    if (value.length === 1) {\n      if (value[0] === CENTER) {\n        value = [CENTER, CENTER];\n      } else if (X_VALUES.indexOf(value[0]) !== -1) {\n        value = [CENTER, value[0]];\n      } else if (Y_VALUES.indexOf(value[0]) !== -1) {\n        value = [value[0], CENTER];\n      }\n    }\n    if (value.length !== 2 || POS_VALUES.indexOf(value[0]) === -1 || POS_VALUES.indexOf(value[1]) === -1) {\n      logWarn(\"Unparsable position \" + value);\n      return null;\n    }\n    if (!allowCenter && value[0] === CENTER && value[1] === CENTER) {\n      logWarn(\"Invalid position center center\");\n      return null;\n    }\n    if (cssOrder && !positionIsOrdered(value)) {\n      value = [value[1], value[0]];\n    }\n    if (value[1] === CENTER && X_VALUES.indexOf(value[0]) !== -1) {\n      value = [CENTER, value[0]];\n    }\n    if (value[0] === CENTER && Y_VALUES.indexOf(value[1]) !== -1) {\n      value = [value[1], CENTER];\n    }\n    return value;\n  }\n  /**\n   * @summary Checks if an array of two positions is ordered (y axis then x axis)\n   * @param {string[]} value\n   * @return {boolean}\n   */\n\n  function positionIsOrdered(value) {\n    return Y_VALUES.indexOf(value[0]) !== -1 && X_VALUES.indexOf(value[1]) !== -1;\n  }\n  /**\n   * @summary Parses an speed\n   * @memberOf PSV.utils\n   * @param {string|number} speed - The speed, in radians/degrees/revolutions per second/minute\n   * @returns {number} radians per second\n   * @throws {PSV.PSVError} when the speed cannot be parsed\n   */\n\n  function parseSpeed(speed) {\n    var parsed;\n    if (typeof speed === 'string') {\n      var speedStr = speed.toString().trim(); // Speed extraction\n\n      var speedValue = parseFloat(speedStr.replace(/^(-?[0-9]+(?:\\.[0-9]*)?).*$/, '$1'));\n      var speedUnit = speedStr.replace(/^-?[0-9]+(?:\\.[0-9]*)?(.*)$/, '$1').trim(); // \"per minute\" -> \"per second\"\n\n      if (speedUnit.match(/(pm|per minute)$/)) {\n        speedValue /= 60;\n      } // Which unit?\n\n      switch (speedUnit) {\n        // Degrees per minute / second\n        case 'dpm':\n        case 'degrees per minute':\n        case 'dps':\n        case 'degrees per second':\n          parsed = three.MathUtils.degToRad(speedValue);\n          break;\n        // Radians per minute / second\n\n        case 'rdpm':\n        case 'radians per minute':\n        case 'rdps':\n        case 'radians per second':\n          parsed = speedValue;\n          break;\n        // Revolutions per minute / second\n\n        case 'rpm':\n        case 'revolutions per minute':\n        case 'rps':\n        case 'revolutions per second':\n          parsed = speedValue * Math.PI * 2;\n          break;\n        // Unknown unit\n\n        default:\n          throw new PSVError('Unknown speed unit \"' + speedUnit + '\"');\n      }\n    } else {\n      parsed = speed;\n    }\n    return parsed;\n  }\n  /**\n   * @summary Parses an angle value in radians or degrees and returns a normalized value in radians\n   * @memberOf PSV.utils\n   * @param {string|number} angle - eg: 3.14, 3.14rad, 180deg\n   * @param {boolean} [zeroCenter=false] - normalize between -Pi - Pi instead of 0 - 2*Pi\n   * @param {boolean} [halfCircle=zeroCenter] - normalize between -Pi/2 - Pi/2 instead of -Pi - Pi\n   * @returns {number}\n   * @throws {PSV.PSVError} when the angle cannot be parsed\n   */\n\n  function parseAngle(angle, zeroCenter, halfCircle) {\n    if (zeroCenter === void 0) {\n      zeroCenter = false;\n    }\n    if (halfCircle === void 0) {\n      halfCircle = zeroCenter;\n    }\n    var parsed;\n    if (typeof angle === 'string') {\n      var match = angle.toLowerCase().trim().match(/^(-?[0-9]+(?:\\.[0-9]*)?)(.*)$/);\n      if (!match) {\n        throw new PSVError('Unknown angle \"' + angle + '\"');\n      }\n      var value = parseFloat(match[1]);\n      var unit = match[2];\n      if (unit) {\n        switch (unit) {\n          case 'deg':\n          case 'degs':\n            parsed = three.MathUtils.degToRad(value);\n            break;\n          case 'rad':\n          case 'rads':\n            parsed = value;\n            break;\n          default:\n            throw new PSVError('Unknown angle unit \"' + unit + '\"');\n        }\n      } else {\n        parsed = value;\n      }\n    } else if (typeof angle === 'number' && !isNaN(angle)) {\n      parsed = angle;\n    } else {\n      throw new PSVError('Unknown angle \"' + angle + '\"');\n    }\n    parsed = loop(zeroCenter ? parsed + Math.PI : parsed, Math.PI * 2);\n    return zeroCenter ? three.MathUtils.clamp(parsed - Math.PI, -Math.PI / (halfCircle ? 2 : 1), Math.PI / (halfCircle ? 2 : 1)) : parsed;\n  }\n  /**\n   * @summary Creates a THREE texture from an image\n   * @memberOf PSV.utils\n   * @param {HTMLImageElement | HTMLCanvasElement} img\n   * @return {external:THREE.Texture}\n   */\n\n  function createTexture(img) {\n    var texture = new three.Texture(img);\n    texture.needsUpdate = true;\n    texture.minFilter = three.LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n  var quaternion = new three.Quaternion();\n  /**\n   * @summary Applies the inverse of Euler angles to a vector\n   * @memberOf PSV.utils\n   * @param {external:THREE.Vector3} vector\n   * @param {external:THREE.Euler} euler\n   */\n\n  function applyEulerInverse(vector, euler) {\n    quaternion.setFromEuler(euler).invert();\n    vector.applyQuaternion(quaternion);\n  }\n\n  /**\n   * @callback OnTick\n   * @summary Function called for each animation frame with computed properties\n   * @memberOf PSV.utils.Animation\n   * @param {Object.<string, number>} properties - current values\n   * @param {float} progress - 0 to 1\n   */\n\n  /**\n   * @summary Interpolation helper for animations\n   * @memberOf PSV.utils\n   * @description\n   * Implements the Promise API with an additional \"cancel\" method.\n   * The promise is resolved with `true` when the animation is completed and `false` if the animation is cancelled.\n   * @example\n   * const anim = new Animation({\n   *     properties: {\n   *         width: {start: 100, end: 200}\n   *     },\n   *     duration: 5000,\n   *     onTick: (properties) => element.style.width = `${properties.width}px`;\n   * });\n   *\n   * anim.then((completed) => ...);\n   *\n   * anim.cancel()\n   */\n\n  var Animation = /*#__PURE__*/function () {\n    /**\n     * @param {Object} options\n     * @param {Object.<string, Object>} options.properties\n     * @param {number} options.properties[].start\n     * @param {number} options.properties[].end\n     * @param {number} options.duration\n     * @param {number} [options.delay=0]\n     * @param {string} [options.easing='linear']\n     * @param {PSV.utils.Animation.OnTick} options.onTick - called on each frame\n     */\n    function Animation(options) {\n      var _this = this;\n      this.__callbacks = [];\n      if (options) {\n        if (!options.easing || typeof options.easing === 'string') {\n          options.easing = EASINGS[options.easing || 'linear'];\n        }\n        this.__start = null;\n        this.options = options;\n        if (options.delay) {\n          this.__delayTimeout = setTimeout(function () {\n            _this.__delayTimeout = null;\n            _this.__animationFrame = window.requestAnimationFrame(function (t) {\n              return _this.__run(t);\n            });\n          }, options.delay);\n        } else {\n          this.__animationFrame = window.requestAnimationFrame(function (t) {\n            return _this.__run(t);\n          });\n        }\n      } else {\n        this.__resolved = true;\n      }\n    }\n    /**\n     * @summary Main loop for the animation\n     * @param {number} timestamp\n     * @private\n     */\n\n    var _proto = Animation.prototype;\n    _proto.__run = function __run(timestamp) {\n      var _this2 = this;\n      if (this.__cancelled) {\n        return;\n      } // first iteration\n\n      if (this.__start === null) {\n        this.__start = timestamp;\n      } // compute progress\n\n      var progress = (timestamp - this.__start) / this.options.duration;\n      var current = {};\n      if (progress < 1.0) {\n        // interpolate properties\n        each(this.options.properties, function (prop, name) {\n          if (prop) {\n            current[name] = prop.start + (prop.end - prop.start) * _this2.options.easing(progress);\n          }\n        });\n        this.options.onTick(current, progress);\n        this.__animationFrame = window.requestAnimationFrame(function (t) {\n          return _this2.__run(t);\n        });\n      } else {\n        // call onTick one last time with final values\n        each(this.options.properties, function (prop, name) {\n          if (prop) {\n            current[name] = prop.end;\n          }\n        });\n        this.options.onTick(current, 1.0);\n        this.__animationFrame = window.requestAnimationFrame(function () {\n          _this2.__resolved = true;\n          _this2.__resolve(true);\n        });\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__resolve = function __resolve(value) {\n      this.__callbacks.forEach(function (cb) {\n        return cb(value);\n      });\n      this.__callbacks.length = 0;\n    }\n    /**\n     * @summary Promise chaining\n     * @param {Function} [onFulfilled] - Called when the animation is complete (true) or cancelled (false)\n     * @returns {Promise}\n     */;\n    _proto.then = function then(onFulfilled) {\n      var _this3 = this;\n      if (this.__resolved || this.__cancelled) {\n        return Promise.resolve(this.__resolved).then(onFulfilled);\n      }\n      return new Promise(function (resolve) {\n        _this3.__callbacks.push(resolve);\n      }).then(onFulfilled);\n    }\n    /**\n     * @summary Cancels the animation\n     */;\n    _proto.cancel = function cancel() {\n      if (!this.__cancelled && !this.__resolved) {\n        this.__cancelled = true;\n        this.__resolve(false);\n        if (this.__delayTimeout) {\n          window.clearTimeout(this.__delayTimeout);\n          this.__delayTimeout = null;\n        }\n        if (this.__animationFrame) {\n          window.cancelAnimationFrame(this.__animationFrame);\n          this.__animationFrame = null;\n        }\n      }\n    };\n    return Animation;\n  }();\n\n  /**\n   * @summary Represents a variable that can dynamically change with time (using requestAnimationFrame)\n   * @memberOf PSV.utils\n   */\n\n  var Dynamic = /*#__PURE__*/function () {\n    /**\n     * @param {Function} [fn] Callback function\n     * @param {number} [defaultValue] Default position\n     * @param {number} [min] Minimum position\n     * @param {number} [max] Maximum position\n     * @param {boolean} [loopValue] Loop value between min and max\n     */\n    function Dynamic(fn, defaultValue, min, max, loopValue) {\n      if (defaultValue === void 0) {\n        defaultValue = 0;\n      }\n      if (min === void 0) {\n        min = -Infinity;\n      }\n      if (max === void 0) {\n        max = Infinity;\n      }\n      if (loopValue === void 0) {\n        loopValue = false;\n      }\n\n      /**\n       * @type {Function}\n       * @private\n       * @readonly\n       */\n      this.fn = fn;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.mode = Dynamic.STOP;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.speed = 0;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.speedMult = 1;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.currentSpeed = 0;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.target = 0;\n      /**\n       * @type {number}\n       * @readonly\n       */\n\n      this.current = defaultValue;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.min = min;\n      /**\n       * @type {number}\n       * @private\n       */\n\n      this.max = max;\n      /**\n       * @type {boolean}\n       * @private\n       */\n\n      this.loopValue = loopValue;\n      if (loopValue && min !== 0) {\n        throw new PSVError('invalid config');\n      }\n      if (this.fn) {\n        this.fn(defaultValue);\n      }\n    }\n    /**\n     * Changes base speed\n     * @param {number} speed\n     */\n\n    var _proto = Dynamic.prototype;\n    _proto.setSpeed = function setSpeed(speed) {\n      this.speed = speed;\n    }\n    /**\n     * Defines the target position\n     * @param {number} position\n     * @param {number} [speedMult=1]\n     */;\n    _proto.goto = function goto(position, speedMult) {\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      this.mode = Dynamic.POSITION;\n      this.target = this.loopValue ? loop(position, this.max) : three.MathUtils.clamp(position, this.min, this.max);\n      this.speedMult = speedMult;\n    }\n    /**\n     * Increase/decrease the target position\n     * @param {number} step\n     * @param {number} [speedMult=1]\n     */;\n    _proto.step = function step(_step, speedMult) {\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      if (this.mode !== Dynamic.POSITION) {\n        this.target = this.current;\n      }\n      this.goto(this.target + _step, speedMult);\n    }\n    /**\n     * Starts infinite movement\n     * @param {boolean} [invert=false]\n     * @param {number} [speedMult=1]\n     */;\n    _proto.roll = function roll(invert, speedMult) {\n      if (invert === void 0) {\n        invert = false;\n      }\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      this.mode = Dynamic.INFINITE;\n      this.target = invert ? -Infinity : Infinity;\n      this.speedMult = speedMult;\n    }\n    /**\n     * Stops movement\n     */;\n    _proto.stop = function stop() {\n      this.mode = Dynamic.STOP;\n    }\n    /**\n     * Defines the current position and immediately stops movement\n     * @param {number} value\n     */;\n    _proto.setValue = function setValue(value) {\n      this.target = this.loopValue ? loop(value, this.max) : three.MathUtils.clamp(value, this.min, this.max);\n      this.mode = Dynamic.STOP;\n      if (this.target !== this.current) {\n        this.current = this.target;\n        if (this.fn) {\n          this.fn(this.current);\n        }\n        return true;\n      }\n      return false;\n    }\n    /**\n     * @package\n     */;\n    _proto.update = function update(elapsed) {\n      // in position mode switch to stop mode when in the decceleration window\n      if (this.mode === Dynamic.POSITION) {\n        // in loop mode, alter \"current\" to avoid crossing the origin\n        if (this.loopValue && Math.abs(this.target - this.current) > this.max / 2) {\n          this.current = this.current < this.target ? this.current + this.max : this.current - this.max;\n        }\n        var dstStop = this.currentSpeed * this.currentSpeed / (this.speed * this.speedMult * 4);\n        if (Math.abs(this.target - this.current) <= dstStop) {\n          this.mode = Dynamic.STOP;\n        }\n      } // compute speed\n\n      var targetSpeed = this.mode === Dynamic.STOP ? 0 : this.speed * this.speedMult;\n      if (this.target < this.current) {\n        targetSpeed = -targetSpeed;\n      }\n      if (this.currentSpeed < targetSpeed) {\n        this.currentSpeed = Math.min(targetSpeed, this.currentSpeed + elapsed / 1000 * this.speed * this.speedMult * 2);\n      } else if (this.currentSpeed > targetSpeed) {\n        this.currentSpeed = Math.max(targetSpeed, this.currentSpeed - elapsed / 1000 * this.speed * this.speedMult * 2);\n      } // compute new position\n\n      var next = null;\n      if (this.current > this.target && this.currentSpeed) {\n        next = Math.max(this.target, this.current + this.currentSpeed * elapsed / 1000);\n      } else if (this.current < this.target && this.currentSpeed) {\n        next = Math.min(this.target, this.current + this.currentSpeed * elapsed / 1000);\n      } // apply value\n\n      if (next !== null) {\n        next = this.loopValue ? loop(next, this.max) : three.MathUtils.clamp(next, this.min, this.max);\n        if (next !== this.current) {\n          this.current = next;\n          if (this.fn) {\n            this.fn(this.current);\n          }\n          return true;\n        }\n      }\n      return false;\n    };\n    return Dynamic;\n  }();\n  Dynamic.STOP = 0;\n  Dynamic.INFINITE = 1;\n  Dynamic.POSITION = 2;\n\n  /**\n   * @summary Wrapper for multiple {@link PSV.utils.Dynamic} evolving together\n   * @memberOf PSV.utils\n   */\n\n  var MultiDynamic = /*#__PURE__*/function () {\n    /**\n     * @param {Record<string, PSV.utils.Dynamic>} dynamics\n     * @param {Function} [fn] Callback function\n     */\n    function MultiDynamic(dynamics, fn) {\n      /**\n       * @type {Function}\n       * @private\n       * @readonly\n       */\n      this.fn = fn;\n      /**\n       * @type {Record<string, PSV.utils.Dynamic>}\n       * @private\n       * @readonly\n       */\n\n      this.dynamics = dynamics;\n      if (this.fn) {\n        this.fn(this.current);\n      }\n    }\n    /**\n     * Changes base speed\n     * @param {number} speed\n     */\n\n    var _proto = MultiDynamic.prototype;\n    _proto.setSpeed = function setSpeed(speed) {\n      each(this.dynamics, function (d) {\n        d.setSpeed(speed);\n      });\n    }\n    /**\n     * Defines the target positions\n     * @param {Record<string, number>} positions\n     * @param {number} [speedMult=1]\n     */;\n    _proto.goto = function goto(positions, speedMult) {\n      var _this = this;\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      each(positions, function (position, name) {\n        _this.dynamics[name].goto(position, speedMult);\n      });\n    }\n    /**\n     * Increase/decrease the target positions\n     * @param {Record<string, number>} steps\n     * @param {number} [speedMult=1]\n     */;\n    _proto.step = function step(steps, speedMult) {\n      var _this2 = this;\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      each(steps, function (step, name) {\n        _this2.dynamics[name].step(step, speedMult);\n      });\n    }\n    /**\n     * Starts infinite movements\n     * @param {Record<string, boolean>} rolls\n     * @param {number} [speedMult=1]\n     */;\n    _proto.roll = function roll(rolls, speedMult) {\n      var _this3 = this;\n      if (speedMult === void 0) {\n        speedMult = 1;\n      }\n      each(rolls, function (roll, name) {\n        _this3.dynamics[name].roll(roll, speedMult);\n      });\n    }\n    /**\n     * Stops movements\n     */;\n    _proto.stop = function stop() {\n      each(this.dynamics, function (d) {\n        return d.stop();\n      });\n    }\n    /**\n     * Defines the current positions and immediately stops movements\n     * @param {Record<string, number>} values\n     */;\n    _proto.setValue = function setValue(values) {\n      var _this4 = this;\n      var hasUpdates = false;\n      each(values, function (value, name) {\n        hasUpdates |= _this4.dynamics[name].setValue(value);\n      });\n      if (hasUpdates && this.fn) {\n        this.fn(this.current);\n      }\n      return hasUpdates;\n    }\n    /**\n     * @package\n     */;\n    _proto.update = function update(elapsed) {\n      var hasUpdates = false;\n      each(this.dynamics, function (dynamic) {\n        hasUpdates |= dynamic.update(elapsed);\n      });\n      if (hasUpdates && this.fn) {\n        this.fn(this.current);\n      }\n      return hasUpdates;\n    };\n    _createClass(MultiDynamic, [{\n      key: \"current\",\n      get:\n      /**\n       * @type {Object<string, number>}\n       * @readonly\n       */\n      function get() {\n        var values = {};\n        each(this.dynamics, function (dynamic, name) {\n          values[name] = dynamic.current;\n        });\n        return values;\n      }\n    }]);\n    return MultiDynamic;\n  }();\n\n  /**\n   * @summary Helper to make sliders elements\n   * @memberOf PSV.utils\n   */\n\n  var Slider = /*#__PURE__*/function (_EventEmitter) {\n    _inheritsLoose(Slider, _EventEmitter);\n    function Slider(_ref) {\n      var _this;\n      var psv = _ref.psv,\n        container = _ref.container,\n        direction = _ref.direction,\n        onUpdate = _ref.onUpdate;\n      _this = _EventEmitter.call(this) || this;\n      /**\n       * @summary Reference to main controller\n       * @type {PSV.Viewer}\n       * @readonly\n       */\n\n      _this.psv = psv;\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       */\n\n      _this.container = container;\n      /**\n       * @summary Internal properties\n       * @member {Object}\n       * @protected\n       * @property {boolean} mousedown\n       * @property {number} mediaMinWidth\n       */\n\n      _this.prop = {\n        onUpdate: onUpdate,\n        direction: direction,\n        mousedown: false,\n        mouseover: false\n      };\n      _this.container.addEventListener('click', _assertThisInitialized(_this));\n      _this.container.addEventListener('mousedown', _assertThisInitialized(_this));\n      _this.container.addEventListener('mouseenter', _assertThisInitialized(_this));\n      _this.container.addEventListener('mouseleave', _assertThisInitialized(_this));\n      _this.container.addEventListener('touchstart', _assertThisInitialized(_this));\n      _this.container.addEventListener('mousemove', _assertThisInitialized(_this), true);\n      _this.container.addEventListener('touchmove', _assertThisInitialized(_this), true);\n      window.addEventListener('mouseup', _assertThisInitialized(_this));\n      window.addEventListener('touchend', _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @protected\n     */\n\n    var _proto = Slider.prototype;\n    _proto.destroy = function destroy() {\n      window.removeEventListener('mouseup', this);\n      window.removeEventListener('touchend', this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case 'click':\n          e.stopPropagation();\n          break;\n        case 'mousedown':\n          this.__onMouseDown(e);\n          break;\n        case 'mouseenter':\n          this.__onMouseEnter(e);\n          break;\n        case 'mouseleave':\n          this.__onMouseLeave(e);\n          break;\n        case 'touchstart':\n          this.__onTouchStart(e);\n          break;\n        case 'mousemove':\n          this.__onMouseMove(e);\n          break;\n        case 'touchmove':\n          this.__onTouchMove(e);\n          break;\n        case 'mouseup':\n          this.__onMouseUp(e);\n          break;\n        case 'touchend':\n          this.__onTouchEnd(e);\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseDown = function __onMouseDown(evt) {\n      this.prop.mousedown = true;\n      this.__update(evt, true);\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseEnter = function __onMouseEnter(evt) {\n      this.prop.mouseover = true;\n      this.__update(evt, true);\n    }\n    /**\n     * @private\n     */;\n    _proto.__onTouchStart = function __onTouchStart(evt) {\n      this.prop.mouseover = true;\n      this.prop.mousedown = true;\n      this.__update(evt.changedTouches[0], true);\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseMove = function __onMouseMove(evt) {\n      if (this.prop.mousedown || this.prop.mouseover) {\n        evt.stopPropagation();\n        this.__update(evt, true);\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__onTouchMove = function __onTouchMove(evt) {\n      if (this.prop.mousedown || this.prop.mouseover) {\n        evt.stopPropagation();\n        this.__update(evt.changedTouches[0], true);\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseUp = function __onMouseUp(evt) {\n      if (this.prop.mousedown) {\n        this.prop.mousedown = false;\n        this.__update(evt, false);\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseLeave = function __onMouseLeave(evt) {\n      if (this.prop.mouseover) {\n        this.prop.mouseover = false;\n        this.__update(evt, true);\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__onTouchEnd = function __onTouchEnd(evt) {\n      if (this.prop.mousedown) {\n        this.prop.mouseover = false;\n        this.prop.mousedown = false;\n        this.__update(evt.changedTouches[0], false);\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__update = function __update(evt, moving) {\n      var boundingClientRect = this.container.getBoundingClientRect();\n      var cursor = evt[this.vertical ? 'clientY' : 'clientX'];\n      var pos = boundingClientRect[this.vertical ? 'bottom' : 'left'];\n      var size = boundingClientRect[this.vertical ? 'height' : 'width'];\n      var val = Math.abs((pos - cursor) / size);\n      this.prop.onUpdate({\n        value: val,\n        click: !moving,\n        mousedown: this.prop.mousedown,\n        mouseover: this.prop.mouseover,\n        cursor: evt\n      });\n    };\n    _createClass(Slider, [{\n      key: \"vertical\",\n      get:\n      /**\n       * @type {boolean}\n       * @readonly\n       */\n      function get() {\n        return this.prop.direction === Slider.VERTICAL;\n      }\n    }]);\n    return Slider;\n  }(uevent.EventEmitter);\n  Slider.VERTICAL = 1;\n  Slider.HORIZONTAL = 2;\n\n  /**\n   * @namespace PSV.utils\n   */\n\n  var index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    toggleClass: toggleClass,\n    addClasses: addClasses,\n    removeClasses: removeClasses,\n    hasParent: hasParent,\n    getClosest: getClosest,\n    getPosition: getPosition,\n    isFullscreenEnabled: isFullscreenEnabled,\n    requestFullscreen: requestFullscreen,\n    exitFullscreen: exitFullscreen,\n    getStyle: getStyle,\n    normalizeWheel: normalizeWheel,\n    bound: bound,\n    loop: loop,\n    isPowerOfTwo: isPowerOfTwo,\n    sum: sum,\n    distance: distance,\n    getShortestArc: getShortestArc,\n    getAngle: getAngle,\n    greatArcDistance: greatArcDistance,\n    dasherize: dasherize,\n    throttle: throttle,\n    isPlainObject: isPlainObject,\n    deepmerge: deepmerge,\n    clone: clone,\n    isEmpty: isEmpty,\n    each: each,\n    isNil: isNil,\n    firstNonNull: firstNonNull,\n    deepEqual: deepEqual,\n    pluginInterop: pluginInterop,\n    getAbortError: getAbortError,\n    isAbortError: isAbortError,\n    logWarn: logWarn,\n    isExtendedPosition: isExtendedPosition,\n    getXMPValue: getXMPValue,\n    parsePosition: parsePosition,\n    cleanPosition: cleanPosition,\n    positionIsOrdered: positionIsOrdered,\n    parseSpeed: parseSpeed,\n    parseAngle: parseAngle,\n    createTexture: createTexture,\n    applyEulerInverse: applyEulerInverse,\n    Animation: Animation,\n    Dynamic: Dynamic,\n    MultiDynamic: MultiDynamic,\n    Slider: Slider\n  });\n\n  /**\n   * @typedef {Object} PSV.adapters.EquirectangularAdapter.Options\n   * @property {number} [resolution=64] - number of faces of the sphere geometry, higher values may decrease performances\n   */\n\n  /**\n   * @summary Adapter for equirectangular panoramas\n   * @memberof PSV.adapters\n   * @extends PSV.adapters.AbstractAdapter\n   */\n\n  var EquirectangularAdapter = /*#__PURE__*/function (_AbstractAdapter) {\n    _inheritsLoose(EquirectangularAdapter, _AbstractAdapter);\n\n    /**\n     * @param {PSV.Viewer} psv\n     * @param {PSV.adapters.EquirectangularAdapter.Options} options\n     */\n    function EquirectangularAdapter(psv, options) {\n      var _this;\n      _this = _AbstractAdapter.call(this, psv) || this;\n      /**\n       * @member {PSV.adapters.EquirectangularAdapter.Options}\n       * @private\n       */\n\n      _this.config = _extends({\n        resolution: 64\n      }, options);\n      if (!three.MathUtils.isPowerOfTwo(_this.config.resolution)) {\n        throw new PSVError('EquirectangularAdapter resolution must be power of two');\n      }\n      _this.SPHERE_SEGMENTS = _this.config.resolution;\n      _this.SPHERE_HORIZONTAL_SEGMENTS = _this.SPHERE_SEGMENTS / 2;\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = EquirectangularAdapter.prototype;\n    _proto.supportsTransition = function supportsTransition() {\n      return true;\n    }\n    /**\n     * @override\n     */;\n    _proto.supportsPreload = function supportsPreload() {\n      return true;\n    }\n    /**\n     * @override\n     * @param {string} panorama\n     * @param {PSV.PanoData | PSV.PanoDataProvider} [newPanoData]\n     * @param {boolean} [useXmpPanoData]\n     * @returns {Promise.<PSV.TextureData>}\n     */;\n    _proto.loadTexture = function loadTexture(panorama, newPanoData, useXmpPanoData) {\n      var _this2 = this;\n      if (useXmpPanoData === void 0) {\n        useXmpPanoData = this.psv.config.useXmpData;\n      }\n      if (typeof panorama !== 'string') {\n        if (Array.isArray(panorama) || typeof panorama === 'object' && !!panorama.left) {\n          logWarn('Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters');\n        }\n        return Promise.reject(new PSVError('Invalid panorama url, are you using the right adapter?'));\n      }\n      return (useXmpPanoData ? this.__loadXMP(panorama, function (p) {\n        return _this2.psv.loader.setProgress(p);\n      }).then(function (xmpPanoData) {\n        return _this2.psv.textureLoader.loadImage(panorama).then(function (img) {\n          return {\n            img: img,\n            xmpPanoData: xmpPanoData\n          };\n        });\n      }) : this.psv.textureLoader.loadImage(panorama, function (p) {\n        return _this2.psv.loader.setProgress(p);\n      }).then(function (img) {\n        return {\n          img: img,\n          xmpPanoData: null\n        };\n      })).then(function (_ref) {\n        var _newPanoData, _newPanoData2, _newPanoData3, _newPanoData4, _newPanoData5, _newPanoData6, _newPanoData7, _newPanoData8, _newPanoData9;\n        var img = _ref.img,\n          xmpPanoData = _ref.xmpPanoData;\n        if (typeof newPanoData === 'function') {\n          newPanoData = newPanoData(img);\n        }\n        var panoData = {\n          fullWidth: firstNonNull((_newPanoData = newPanoData) == null ? void 0 : _newPanoData.fullWidth, xmpPanoData == null ? void 0 : xmpPanoData.fullWidth, img.width),\n          fullHeight: firstNonNull((_newPanoData2 = newPanoData) == null ? void 0 : _newPanoData2.fullHeight, xmpPanoData == null ? void 0 : xmpPanoData.fullHeight, img.height),\n          croppedWidth: firstNonNull((_newPanoData3 = newPanoData) == null ? void 0 : _newPanoData3.croppedWidth, xmpPanoData == null ? void 0 : xmpPanoData.croppedWidth, img.width),\n          croppedHeight: firstNonNull((_newPanoData4 = newPanoData) == null ? void 0 : _newPanoData4.croppedHeight, xmpPanoData == null ? void 0 : xmpPanoData.croppedHeight, img.height),\n          croppedX: firstNonNull((_newPanoData5 = newPanoData) == null ? void 0 : _newPanoData5.croppedX, xmpPanoData == null ? void 0 : xmpPanoData.croppedX, 0),\n          croppedY: firstNonNull((_newPanoData6 = newPanoData) == null ? void 0 : _newPanoData6.croppedY, xmpPanoData == null ? void 0 : xmpPanoData.croppedY, 0),\n          poseHeading: firstNonNull((_newPanoData7 = newPanoData) == null ? void 0 : _newPanoData7.poseHeading, xmpPanoData == null ? void 0 : xmpPanoData.poseHeading, 0),\n          posePitch: firstNonNull((_newPanoData8 = newPanoData) == null ? void 0 : _newPanoData8.posePitch, xmpPanoData == null ? void 0 : xmpPanoData.posePitch, 0),\n          poseRoll: firstNonNull((_newPanoData9 = newPanoData) == null ? void 0 : _newPanoData9.poseRoll, xmpPanoData == null ? void 0 : xmpPanoData.poseRoll, 0)\n        };\n        if (panoData.croppedWidth !== img.width || panoData.croppedHeight !== img.height) {\n          logWarn(\"Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.\\n    panoData: \" + panoData.croppedWidth + \"x\" + panoData.croppedHeight + \", image: \" + img.width + \"x\" + img.height);\n        }\n        if ((newPanoData || xmpPanoData) && panoData.fullWidth !== panoData.fullHeight * 2) {\n          logWarn('Invalid panoData, fullWidth should be twice fullHeight');\n        }\n        var texture = _this2.__createEquirectangularTexture(img, panoData);\n        return {\n          panorama: panorama,\n          texture: texture,\n          panoData: panoData\n        };\n      });\n    }\n    /**\n     * @summary Loads the XMP data of an image\n     * @param {string} panorama\n     * @param {function(number)} [onProgress]\n     * @returns {Promise<PSV.PanoData>}\n     * @throws {PSV.PSVError} when the image cannot be loaded\n     * @private\n     */;\n    _proto.__loadXMP = function __loadXMP(panorama, onProgress) {\n      var _this3 = this;\n      return this.psv.textureLoader.loadFile(panorama, onProgress).then(function (blob) {\n        return _this3.__loadBlobAsString(blob);\n      }).then(function (binary) {\n        var a = binary.indexOf('<x:xmpmeta');\n        var b = binary.indexOf('</x:xmpmeta>');\n        var data = binary.substring(a, b);\n        if (a !== -1 && b !== -1 && data.includes('GPano:')) {\n          return {\n            fullWidth: getXMPValue(data, 'FullPanoWidthPixels'),\n            fullHeight: getXMPValue(data, 'FullPanoHeightPixels'),\n            croppedWidth: getXMPValue(data, 'CroppedAreaImageWidthPixels'),\n            croppedHeight: getXMPValue(data, 'CroppedAreaImageHeightPixels'),\n            croppedX: getXMPValue(data, 'CroppedAreaLeftPixels'),\n            croppedY: getXMPValue(data, 'CroppedAreaTopPixels'),\n            poseHeading: getXMPValue(data, 'PoseHeadingDegrees'),\n            posePitch: getXMPValue(data, 'PosePitchDegrees'),\n            poseRoll: getXMPValue(data, 'PoseRollDegrees')\n          };\n        }\n        return null;\n      });\n    }\n    /**\n     * @summmary read a Blob as string\n     * @param {Blob} blob\n     * @returns {Promise<string>}\n     * @private\n     */;\n    _proto.__loadBlobAsString = function __loadBlobAsString(blob) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onload = function () {\n          return resolve(reader.result);\n        };\n        reader.onerror = reject;\n        reader.readAsText(blob);\n      });\n    }\n    /**\n     * @summary Creates the final texture from image and panorama data\n     * @param {Image} img\n     * @param {PSV.PanoData} panoData\n     * @returns {external:THREE.Texture}\n     * @private\n     */;\n    _proto.__createEquirectangularTexture = function __createEquirectangularTexture(img, panoData) {\n      // resize image / fill cropped parts with black\n      if (panoData.fullWidth > SYSTEM.maxTextureWidth || panoData.croppedWidth !== panoData.fullWidth || panoData.croppedHeight !== panoData.fullHeight) {\n        var ratio = SYSTEM.getMaxCanvasWidth() / panoData.fullWidth;\n        var resizedPanoData = _extends({}, panoData);\n        if (ratio < 1) {\n          resizedPanoData.fullWidth *= ratio;\n          resizedPanoData.fullHeight *= ratio;\n          resizedPanoData.croppedWidth *= ratio;\n          resizedPanoData.croppedHeight *= ratio;\n          resizedPanoData.croppedX *= ratio;\n          resizedPanoData.croppedY *= ratio;\n        }\n        var buffer = document.createElement('canvas');\n        buffer.width = resizedPanoData.fullWidth;\n        buffer.height = resizedPanoData.fullHeight;\n        var ctx = buffer.getContext('2d');\n        ctx.drawImage(img, resizedPanoData.croppedX, resizedPanoData.croppedY, resizedPanoData.croppedWidth, resizedPanoData.croppedHeight);\n        return createTexture(buffer);\n      }\n      return createTexture(img);\n    }\n    /**\n     * @override\n     */;\n    _proto.createMesh = function createMesh(scale) {\n      if (scale === void 0) {\n        scale = 1;\n      }\n\n      // The middle of the panorama is placed at longitude=0\n      var geometry = new three.SphereGeometry(SPHERE_RADIUS * scale, this.SPHERE_SEGMENTS, this.SPHERE_HORIZONTAL_SEGMENTS, -Math.PI / 2).scale(-1, 1, 1);\n      var material = AbstractAdapter.createOverlayMaterial();\n      return new three.Mesh(geometry, material);\n    }\n    /**\n     * @override\n     */;\n    _proto.setTexture = function setTexture(mesh, textureData) {\n      this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.panorama, textureData.texture);\n      this.setOverlay(mesh, null);\n    }\n    /**\n     * @override\n     */;\n    _proto.setOverlay = function setOverlay(mesh, textureData, opacity) {\n      this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity, opacity);\n      if (!textureData) {\n        this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlay, new three.Texture());\n      } else {\n        this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlay, textureData.texture);\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.setTextureOpacity = function setTextureOpacity(mesh, opacity) {\n      this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity, opacity);\n      mesh.material.transparent = opacity < 1;\n    }\n    /**\n     * @override\n     */;\n    _proto.disposeTexture = function disposeTexture(textureData) {\n      var _textureData$texture;\n      (_textureData$texture = textureData.texture) == null ? void 0 : _textureData$texture.dispose();\n    }\n    /**\n     * @param {external:THREE.Mesh} mesh\n     * @param {string} uniform\n     * @param {*} value\n     * @private\n     */;\n    _proto.__setUniform = function __setUniform(mesh, uniform, value) {\n      if (mesh.material.uniforms[uniform].value instanceof three.Texture) {\n        mesh.material.uniforms[uniform].value.dispose();\n      }\n      mesh.material.uniforms[uniform].value = value;\n    };\n    return EquirectangularAdapter;\n  }(AbstractAdapter);\n  EquirectangularAdapter.id = 'equirectangular';\n  EquirectangularAdapter.supportsDownload = true;\n  EquirectangularAdapter.supportsOverlay = true;\n\n  /**\n   * @namespace PSV.components\n   */\n\n  /**\n   * @summary Base component class\n   * @memberof PSV.components\n   * @abstract\n   */\n  var AbstractComponent = /*#__PURE__*/function () {\n    /**\n     * @param {PSV.Viewer | PSV.components.AbstractComponent} parent\n     * @param {string} className - CSS class added to the component's container\n     */\n    function AbstractComponent(parent, className) {\n      /**\n       * @summary Reference to main controller\n       * @type {PSV.Viewer}\n       * @readonly\n       */\n      this.psv = parent.psv || parent;\n      /**\n       * @member {PSV.Viewer|PSV.components.AbstractComponent}\n       * @readonly\n       */\n\n      this.parent = parent;\n      this.parent.children.push(this);\n      /**\n       * @summary All child components\n       * @type {PSV.components.AbstractComponent[]}\n       * @readonly\n       * @package\n       */\n\n      this.children = [];\n      /**\n       * @summary Internal properties\n       * @member {Object}\n       * @protected\n       * @property {boolean} visible - Visibility of the component\n       */\n\n      this.prop = {\n        visible: true\n      };\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       */\n\n      this.container = document.createElement('div');\n      this.container.className = className;\n      this.parent.container.appendChild(this.container);\n    }\n    /**\n     * @summary Destroys the component\n     * @protected\n     */\n\n    var _proto = AbstractComponent.prototype;\n    _proto.destroy = function destroy() {\n      this.parent.container.removeChild(this.container);\n      var childIdx = this.parent.children.indexOf(this);\n      if (childIdx !== -1) {\n        this.parent.children.splice(childIdx, 1);\n      }\n      this.children.slice().forEach(function (child) {\n        return child.destroy();\n      });\n      this.children.length = 0;\n      delete this.container;\n      delete this.parent;\n      delete this.psv;\n      delete this.prop;\n    }\n    /**\n     * @summary Refresh UI\n     * @description Must be be a very lightweight operation\n     * @package\n     */;\n    _proto.refreshUi = function refreshUi() {\n      var _this = this;\n      this.children.every(function (child) {\n        child.refreshUi();\n        return _this.psv.prop.uiRefresh === true;\n      });\n    }\n    /**\n     * @summary Displays or hides the component\n     * @param {boolean} [visible] - forced state\n     */;\n    _proto.toggle = function toggle(visible) {\n      if (visible === false || visible === undefined && this.isVisible()) {\n        this.hide();\n      } else if (visible === true || visible === undefined && !this.isVisible()) {\n        this.show();\n      }\n    }\n    /**\n     * @summary Hides the component\n     */;\n    _proto.hide = function hide() {\n      this.container.style.display = 'none';\n      this.prop.visible = false;\n    }\n    /**\n     * @summary Displays the component\n     */;\n    _proto.show = function show() {\n      this.container.style.display = '';\n      this.prop.visible = true;\n    }\n    /**\n     * @summary Checks if the component is visible\n     * @returns {boolean}\n     */;\n    _proto.isVisible = function isVisible() {\n      return this.prop.visible;\n    };\n    return AbstractComponent;\n  }();\n\n  /**\n   * @namespace PSV.buttons\n   */\n\n  /**\n   * @summary Base navbar button class\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.buttons\n   * @abstract\n   */\n\n  var AbstractButton = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(AbstractButton, _AbstractComponent);\n\n    /**\n     * @summary Unique identifier of the button\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @summary Identifier to declare a group of buttons\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @summary SVG icon name injected in the button\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @summary SVG icon name injected in the button when it is active\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     * @param {string} [className] - Additional CSS classes\n     * @param {boolean} [collapsable=false] - `true` if the button can be moved to menu when the navbar is too small\n     * @param {boolean} [tabbable=true] - `true` if the button is accessible with the keyboard\n     */\n    function AbstractButton(navbar, className, collapsable, tabbable) {\n      var _this;\n      if (className === void 0) {\n        className = '';\n      }\n      if (collapsable === void 0) {\n        collapsable = false;\n      }\n      if (tabbable === void 0) {\n        tabbable = true;\n      }\n      _this = _AbstractComponent.call(this, navbar, 'psv-button ' + className) || this;\n      /**\n       * @override\n       * @property {string} id - Unique identifier of the button\n       * @property {boolean} enabled\n       * @property {boolean} supported\n       * @property {boolean} collapsed\n       * @property {boolean} active\n       * @property {number} width\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        id: _this.constructor.id,\n        collapsable: collapsable,\n        enabled: true,\n        supported: true,\n        collapsed: false,\n        active: false,\n        width: _this.container.offsetWidth\n      });\n      if (_this.constructor.icon) {\n        _this.__setIcon(_this.constructor.icon);\n      }\n      if (_this.prop.id && _this.psv.config.lang[_this.prop.id]) {\n        _this.container.title = _this.psv.config.lang[_this.prop.id];\n      }\n      if (tabbable) {\n        _this.container.tabIndex = 0;\n      }\n      _this.container.addEventListener('click', function (e) {\n        if (_this.prop.enabled) {\n          _this.onClick();\n        }\n        e.stopPropagation();\n      });\n      _this.container.addEventListener('keydown', function (e) {\n        if (e.key === KEY_CODES.Enter && _this.prop.enabled) {\n          _this.onClick();\n          e.stopPropagation();\n        }\n      });\n      return _this;\n    }\n    /**\n     * @package\n     */\n\n    var _proto = AbstractButton.prototype;\n    _proto.checkSupported = function checkSupported() {\n      var _this2 = this;\n      var supportedOrObject = this.isSupported();\n      if (isPlainObject(supportedOrObject)) {\n        if (supportedOrObject.initial === false) {\n          this.hide();\n          this.prop.supported = false;\n        }\n        supportedOrObject.promise.then(function (supported) {\n          if (!_this2.prop) {\n            return; // the component has been destroyed\n          }\n          _this2.prop.supported = supported;\n          _this2.toggle(supported);\n        });\n      } else {\n        this.prop.supported = supportedOrObject;\n        if (!supportedOrObject) {\n          this.hide();\n        }\n      }\n    }\n    /**\n     * @summary Checks if the button can be displayed\n     * @returns {boolean|{initial: boolean, promise: Promise<boolean>}}\n     */;\n    _proto.isSupported = function isSupported() {\n      return true;\n    }\n    /**\n     * @summary Changes the active state of the button\n     * @param {boolean} [active] - forced state\n     */;\n    _proto.toggleActive = function toggleActive(active) {\n      this.prop.active = active !== undefined ? active : !this.prop.active;\n      toggleClass(this.container, 'psv-button--active', this.prop.active);\n      if (this.constructor.iconActive) {\n        this.__setIcon(this.prop.active ? this.constructor.iconActive : this.constructor.icon);\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.show = function show(refresh) {\n      if (refresh === void 0) {\n        refresh = true;\n      }\n      if (!this.isVisible()) {\n        this.prop.visible = true;\n        if (!this.prop.collapsed) {\n          this.container.style.display = '';\n        }\n        if (refresh) {\n          this.psv.refreshUi(\"show button \" + this.prop.id);\n        }\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.hide = function hide(refresh) {\n      if (refresh === void 0) {\n        refresh = true;\n      }\n      if (this.isVisible()) {\n        this.prop.visible = false;\n        this.container.style.display = 'none';\n        if (refresh) {\n          this.psv.refreshUi(\"hide button \" + this.prop.id);\n        }\n      }\n    }\n    /**\n     * @summary Disables the button\n     */;\n    _proto.disable = function disable() {\n      this.container.classList.add('psv-button--disabled');\n      this.prop.enabled = false;\n    }\n    /**\n     * @summary Enables the button\n     */;\n    _proto.enable = function enable() {\n      this.container.classList.remove('psv-button--disabled');\n      this.prop.enabled = true;\n    }\n    /**\n     * @summary Collapses the button in the navbar menu\n     */;\n    _proto.collapse = function collapse() {\n      this.prop.collapsed = true;\n      this.container.style.display = 'none';\n    }\n    /**\n     * @summary Uncollapses the button from the navbar menu\n     */;\n    _proto.uncollapse = function uncollapse() {\n      this.prop.collapsed = false;\n      if (this.prop.visible) {\n        this.container.style.display = '';\n      }\n    }\n    /**\n     * @summary Set the button icon\n     * @param {string} icon SVG\n     * @param {HTMLElement} [container] - default is the main button container\n     * @private\n     */;\n    _proto.__setIcon = function __setIcon(icon, container) {\n      if (container === void 0) {\n        container = this.container;\n      }\n      if (icon) {\n        container.innerHTML = icon; // className is read-only on SVGElement\n\n        container.querySelector('svg').classList.add('psv-button-svg');\n      } else {\n        container.innerHTML = '';\n      }\n    }\n    /**\n     * @summary Action when the button is clicked\n     * @private\n     * @abstract\n     */;\n    _proto.onClick = function onClick() {\n      throw new PSVError(\"onClick not implemented for button \\\"\" + this.prop.id + \"\\\".\");\n    };\n    return AbstractButton;\n  }(AbstractComponent);\n  AbstractButton.id = null;\n  AbstractButton.groupId = null;\n  AbstractButton.icon = null;\n  AbstractButton.iconActive = null;\n  var playActive = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 41 41\\\"><path fill=\\\"currentColor\\\" d=\\\"M40.5 14.1c-.1-.1-1.2-.5-2.898-1-.102 0-.202-.1-.202-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.399 2.7.899.1 0 .2.101.2.199C6.3 34.4 12.9 39 20.5 39c7.602 0 14.102-4.6 16.9-11.1 0-.102.1-.102.199-.2 1.699-.601 2.699-1 2.801-1l.6-.3V14.3l-.5-.2zM6.701 11.5C9.7 7 14.8 4 20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.799-1-8.799-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5zM25.1 20.3L18.7 24c-.3.2-.7 0-.7-.5v-7.4c0-.4.4-.6.7-.4l6.399 3.8c.301.1.301.6.001.8zm9.4 8.901A16.421 16.421 0 0 1 20.5 37c-5.9 0-11.1-3.1-14-7.898-.2-.302.1-.602.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.602-2 .298-.1.5.198.398.499z\\\"/><!--Created by Nick Bluth from the Noun Project--></svg>\\n\";\n  var play = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 41 41\\\"><path fill=\\\"currentColor\\\" d=\\\"M40.5 14.1c-.1-.1-1.2-.5-2.899-1-.101 0-.2-.1-.2-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.4 2.7.9.1 0 .2.1.2.199C6.3 34.4 12.9 39 20.5 39c7.601 0 14.101-4.6 16.9-11.1 0-.101.1-.101.2-.2 1.699-.6 2.699-1 2.8-1l.6-.3V14.3l-.5-.2zM20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.8-1-8.8-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5C9.7 7 14.8 4 20.5 4zm0 33c-5.9 0-11.1-3.1-14-7.899-.2-.301.1-.601.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.601-2 .3-.1.5.2.399.5A16.422 16.422 0 0 1 20.5 37zm18.601-12.1c0 .1-.101.3-.2.3-2.5.9-10.4 3.6-18.4 3.6-7.1 0-15.6-2.699-18.3-3.6C2.1 25.2 2 25 2 24.9V16c0-.1.1-.3.2-.3 2.6-.9 10.6-3.6 18.2-3.6 7.5 0 15.899 2.7 18.5 3.6.1 0 .2.2.2.3v8.9z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M18.7 24l6.4-3.7c.3-.2.3-.7 0-.8l-6.4-3.8c-.3-.2-.7 0-.7.4v7.4c0 .5.4.7.7.5z\\\"/><!--Created by Nick Bluth from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar autorotate button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var AutorotateButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(AutorotateButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function AutorotateButton(navbar) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-autorotate-button', true) || this;\n      _this.psv.on(EVENTS.AUTOROTATE, _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = AutorotateButton.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.AUTOROTATE, this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case EVENTS.AUTOROTATE:\n          this.toggleActive(e.args[0]);\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     * @description Toggles autorotate\n     */;\n    _proto.onClick = function onClick() {\n      if (this.psv.isAutorotateEnabled()) {\n        this.psv.config.autorotateIdle = false;\n        this.psv.resetIdleTimer();\n      }\n      this.psv.toggleAutorotate();\n    };\n    return AutorotateButton;\n  }(AbstractButton);\n  AutorotateButton.id = 'autorotate';\n  AutorotateButton.icon = play;\n  AutorotateButton.iconActive = playActive;\n\n  /**\n   * @summary Navigation bar custom button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var CustomButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(CustomButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     * @param {PSV.NavbarCustomButton} config\n     */\n    function CustomButton(navbar, config) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-custom-button', config.collapsable !== false, config.tabbable !== false) || this;\n      /**\n       * @member {Object}\n       * @readonly\n       * @private\n       */\n\n      _this.config = config;\n      if (_this.config.id) {\n        _this.prop.id = _this.config.id;\n      } else {\n        _this.prop.id = 'psvButton-' + Math.random().toString(36).substr(2, 9);\n      }\n      if (_this.config.className) {\n        addClasses(_this.container, _this.config.className);\n      }\n      if (_this.config.title) {\n        _this.container.title = _this.config.title;\n      }\n      if (_this.config.content) {\n        _this.container.innerHTML = _this.config.content;\n      }\n      _this.prop.width = _this.container.offsetWidth;\n      if (_this.config.enabled === false) {\n        _this.disable();\n      }\n      if (_this.config.visible === false) {\n        _this.hide();\n      }\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = CustomButton.prototype;\n    _proto.destroy = function destroy() {\n      delete this.config;\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @override\n     * @description Calls user method\n     */;\n    _proto.onClick = function onClick() {\n      if (this.config.onClick) {\n        this.config.onClick.call(this.psv, this.psv);\n      }\n    };\n    return CustomButton;\n  }(AbstractButton);\n  var info = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 64 64\\\"><path fill=\\\"currentColor\\\" d=\\\"M28.3 26.1c-1 2.6-1.9 4.8-2.6 7-2.5 7.4-5 14.7-7.2 22-1.3 4.4.5 7.2 4.3 7.8 1.3.2 2.8.2 4.2-.1 8.2-2 11.9-8.6 15.7-15.2l-2.2 2a18.8 18.8 0 0 1-7.4 5.2 2 2 0 0 1-1.6-.2c-.2-.1 0-1 0-1.4l.8-1.8L41.9 28c.5-1.4.9-3 .7-4.4-.2-2.6-3-4.4-6.3-4.4-8.8.2-15 4.5-19.5 11.8-.2.3-.2.6-.3 1.3 3.7-2.8 6.8-6.1 11.8-6.2z\\\"/><circle fill=\\\"currentColor\\\" cx=\\\"39.3\\\" cy=\\\"9.2\\\" r=\\\"8.2\\\"/><!--Created by Arafat Uddin from the Noun Project--></svg>\\n\";\n  var MODE_NOTIF = 1;\n  var MODE_PANEL = 2;\n  /**\n   * @summary Navigation bar description button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var DescriptionButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(DescriptionButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function DescriptionButton(navbar) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-description-button') || this;\n      /**\n       * @override\n       * @property {string} mode - notification or panel\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        mode: null\n      });\n      _this.psv.on(EVENTS.HIDE_NOTIFICATION, _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.SHOW_NOTIFICATION, _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.CLOSE_PANEL, _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.OPEN_PANEL, _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = DescriptionButton.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.HIDE_NOTIFICATION, this);\n      this.psv.off(EVENTS.SHOW_NOTIFICATION, this);\n      this.psv.off(EVENTS.CLOSE_PANEL, this);\n      this.psv.off(EVENTS.OPEN_PANEL, this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      if (!this.prop.mode) {\n        return;\n      }\n      var closed = false;\n      switch (e.type) {\n        case EVENTS.HIDE_NOTIFICATION:\n          closed = this.prop.mode === MODE_NOTIF;\n          break;\n        case EVENTS.SHOW_NOTIFICATION:\n          closed = this.prop.mode === MODE_NOTIF && e.args[0] !== IDS.DESCRIPTION;\n          break;\n        case EVENTS.CLOSE_PANEL:\n          closed = this.prop.mode === MODE_PANEL;\n          break;\n        case EVENTS.OPEN_PANEL:\n          closed = this.prop.mode === MODE_PANEL && e.args[0] !== IDS.DESCRIPTION;\n          break;\n      }\n      if (closed) {\n        this.toggleActive(false);\n        this.prop.mode = null;\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.hide = function hide(refresh) {\n      _AbstractButton.prototype.hide.call(this, refresh);\n      if (this.prop.mode) {\n        this.__close();\n      }\n    }\n    /**\n     * This button can only be refresh from NavbarCaption\n     * @override\n     */;\n    _proto.refreshUi = function refreshUi(refresh) {\n      if (refresh === void 0) {\n        refresh = false;\n      }\n      if (refresh) {\n        var caption = this.psv.navbar.getButton('caption', false);\n        var captionHidden = caption && !caption.isVisible();\n        var hasDescription = !!this.psv.config.description;\n        if (captionHidden || hasDescription) {\n          this.show(false);\n        } else {\n          this.hide(false);\n        }\n      }\n    }\n    /**\n     * @override\n     * @description Toggles caption\n     */;\n    _proto.onClick = function onClick() {\n      if (this.prop.mode) {\n        this.__close();\n      } else {\n        this.__open();\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__close = function __close() {\n      switch (this.prop.mode) {\n        case MODE_NOTIF:\n          this.psv.notification.hide(IDS.DESCRIPTION);\n          break;\n        case MODE_PANEL:\n          this.psv.panel.hide(IDS.DESCRIPTION);\n          break;\n      }\n    }\n    /**\n     * @private\n     */;\n    _proto.__open = function __open() {\n      this.toggleActive(true);\n      if (this.psv.config.description) {\n        this.prop.mode = MODE_PANEL;\n        this.psv.panel.show({\n          id: IDS.DESCRIPTION,\n          content: \"\" + (this.psv.config.caption ? \"<p>\" + this.psv.config.caption + \"</p>\" : '') + this.psv.config.description\n        });\n      } else {\n        this.prop.mode = MODE_NOTIF;\n        this.psv.notification.show({\n          id: IDS.DESCRIPTION,\n          content: this.psv.config.caption\n        });\n      }\n    };\n    return DescriptionButton;\n  }(AbstractButton);\n  DescriptionButton.id = 'description';\n  DescriptionButton.icon = info;\n  var download = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\"><path fill=\\\"currentColor\\\" d=\\\"M83.3 35.6h-17V3H32.2v32.6H16.6l33.6 32.7 33-32.7z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M83.3 64.2v16.3H16.6V64.2H-.1v32.6H100V64.2H83.3z\\\"/><!--Created by Michael Zenaty from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar download button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var DownloadButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(DownloadButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function DownloadButton(navbar) {\n      return _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-download-button', true) || this;\n    }\n    /**\n     * @override\n     * @description Asks the browser to download the panorama source file\n     */\n\n    var _proto = DownloadButton.prototype;\n    _proto.onClick = function onClick() {\n      var _this = this;\n      var link = document.createElement('a');\n      link.href = this.psv.config.downloadUrl || this.psv.config.panorama;\n      link.download = link.href.split('/').pop();\n      this.psv.container.appendChild(link);\n      link.click();\n      setTimeout(function () {\n        _this.psv.container.removeChild(link);\n      }, 100);\n    }\n    /**\n     * @override\n     */;\n    _proto.refreshUi = function refreshUi() {\n      var supported = this.psv.adapter.constructor.supportsDownload || this.psv.config.downloadUrl;\n      if (supported && !this.prop.visible) {\n        this.show();\n      } else if (!supported && this.prop.visible) {\n        this.hide();\n      }\n    };\n    return DownloadButton;\n  }(AbstractButton);\n  DownloadButton.id = 'download';\n  DownloadButton.icon = download;\n  var fullscreenIn = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\"><path fill=\\\"currentColor\\\" d=\\\"M100 40H87.1V18.8h-21V6H100zM100 93.2H66V80.3h21.1v-21H100zM34 93.2H0v-34h12.9v21.1h21zM12.9 40H0V6h34v12.9H12.8z\\\"/><!--Created by Garrett Knoll from the Noun Project--></svg>\\n\";\n  var fullscreenOut = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\"><path fill=\\\"currentColor\\\" d=\\\"M66 7h13v21h21v13H66zM66 60.3h34v12.9H79v21H66zM0 60.3h34v34H21V73.1H0zM21 7h13v34H0V28h21z\\\"/><!--Created by Garrett Knoll from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar fullscreen button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var FullscreenButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(FullscreenButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function FullscreenButton(navbar) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-fullscreen-button') || this;\n      _this.psv.on(EVENTS.FULLSCREEN_UPDATED, _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = FullscreenButton.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.FULLSCREEN_UPDATED, this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * Handle events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case EVENTS.FULLSCREEN_UPDATED:\n          this.toggleActive(e.args[0]);\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     * @description Toggles fullscreen\n     */;\n    _proto.onClick = function onClick() {\n      this.psv.toggleFullscreen();\n    };\n    return FullscreenButton;\n  }(AbstractButton);\n  FullscreenButton.id = 'fullscreen';\n  FullscreenButton.icon = fullscreenIn;\n  FullscreenButton.iconActive = fullscreenOut;\n  var menuIcon = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"10 10 80 80\\\"><g fill=\\\"currentColor\\\"><circle r=\\\"10\\\" cx=\\\"20\\\" cy=\\\"20\\\"/><circle r=\\\"10\\\" cx=\\\"50\\\" cy=\\\"20\\\"/><circle r=\\\"10\\\" cx=\\\"80\\\" cy=\\\"20\\\"/><circle r=\\\"10\\\" cx=\\\"20\\\" cy=\\\"50\\\"/><circle r=\\\"10\\\" cx=\\\"50\\\" cy=\\\"50\\\"/><circle r=\\\"10\\\" cx=\\\"80\\\" cy=\\\"50\\\"/><circle r=\\\"10\\\" cx=\\\"20\\\" cy=\\\"80\\\"/><circle r=\\\"10\\\" cx=\\\"50\\\" cy=\\\"80\\\"/><circle r=\\\"10\\\" cx=\\\"80\\\" cy=\\\"80\\\"/></g><!-- Created by Richard Kunák from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar menu button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var MenuButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(MenuButton, _AbstractButton);\n\n    /**\n     * @summary Property name added to buttons list\n     * @type {string}\n     * @constant\n     */\n\n    /**\n     * @summary Menu template\n     * @param {AbstractButton[]} buttons\n     * @param {PSV.Viewer} psv\n     * @param {string} dataKey\n     * @returns {string}\n     */\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function MenuButton(navbar) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-menu-button') || this;\n      _this.psv.on(EVENTS.OPEN_PANEL, _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.CLOSE_PANEL, _assertThisInitialized(_this));\n      _AbstractButton.prototype.hide.call(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = MenuButton.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.OPEN_PANEL, this);\n      this.psv.off(EVENTS.CLOSE_PANEL, this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case EVENTS.OPEN_PANEL:\n          this.toggleActive(e.args[0] === IDS.MENU);\n          break;\n        case EVENTS.CLOSE_PANEL:\n          this.toggleActive(false);\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     */;\n    _proto.hide = function hide(refresh) {\n      _AbstractButton.prototype.hide.call(this, refresh);\n      this.__hideMenu();\n    }\n    /**\n     * @override\n     */;\n    _proto.show = function show(refresh) {\n      _AbstractButton.prototype.show.call(this, refresh);\n      if (this.prop.active) {\n        this.__showMenu();\n      }\n    }\n    /**\n     * @override\n     * @description Toggles menu\n     */;\n    _proto.onClick = function onClick() {\n      if (this.prop.active) {\n        this.__hideMenu();\n      } else {\n        this.__showMenu();\n      }\n    };\n    _proto.__showMenu = function __showMenu() {\n      var _this2 = this;\n      this.psv.panel.show({\n        id: IDS.MENU,\n        content: MenuButton.MENU_TEMPLATE(this.parent.collapsed, this.psv, dasherize(MenuButton.BUTTON_DATA)),\n        noMargin: true,\n        clickHandler: function clickHandler(e) {\n          var li = e.target ? getClosest(e.target, 'li') : undefined;\n          var buttonId = li ? li.dataset[MenuButton.BUTTON_DATA] : undefined;\n          if (buttonId) {\n            _this2.parent.getButton(buttonId).onClick();\n            _this2.__hideMenu();\n          }\n        }\n      });\n    };\n    _proto.__hideMenu = function __hideMenu() {\n      this.psv.panel.hide(IDS.MENU);\n    };\n    return MenuButton;\n  }(AbstractButton);\n  MenuButton.id = 'menu';\n  MenuButton.icon = menuIcon;\n  MenuButton.BUTTON_DATA = 'psvButton';\n  MenuButton.MENU_TEMPLATE = function (buttons, psv, dataKey) {\n    return \"\\n<div class=\\\"psv-panel-menu psv-panel-menu--stripped\\\">\\n  <h1 class=\\\"psv-panel-menu-title\\\">\" + menuIcon + \" \" + psv.config.lang.menu + \"</h1>\\n  <ul class=\\\"psv-panel-menu-list\\\">\\n    \" + buttons.map(function (button) {\n      return \"\\n    <li data-\" + dataKey + \"=\\\"\" + button.prop.id + \"\\\" class=\\\"psv-panel-menu-item\\\" tabindex=\\\"0\\\">\\n      <span class=\\\"psv-panel-menu-item-icon\\\">\" + button.container.innerHTML + \"</span>\\n      <span class=\\\"psv-panel-menu-item-label\\\">\" + button.container.title + \"</span>\\n    </li>\\n    \";\n    }).join('') + \"\\n  </ul>\\n</div>\\n\";\n  };\n  var arrow = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"40 40 432 432\\\"><g transform=\\\"rotate(0, 256, 256)\\\"><path fill=\\\"currentColor\\\" d=\\\"M425.23 210.55H227.39a5 5 0 01-3.53-8.53l56.56-56.57a45.5 45.5 0 000-64.28 45.15 45.15 0 00-32.13-13.3 45.15 45.15 0 00-32.14 13.3L41.32 256l174.83 174.83a45.15 45.15 0 0032.14 13.3 45.15 45.15 0 0032.13-13.3 45.5 45.5 0 000-64.28l-56.57-56.57a5 5 0 013.54-8.53h197.84c25.06 0 45.45-20.39 45.45-45.45s-20.4-45.45-45.45-45.45z\\\"/></g><!-- Created by Flatart from the Noun Project --></svg>\\n\";\n\n  /**\n   * @summary Helper for pressable things (buttons, keyboard)\n   * @description When the pressed thing goes up and was not pressed long enough, wait a bit more before execution\n   * @private\n   */\n  var PressHandler = /*#__PURE__*/function () {\n    function PressHandler(delay) {\n      if (delay === void 0) {\n        delay = 200;\n      }\n      this.delay = delay;\n      this.time = 0;\n      this.timeout = null;\n    }\n    var _proto = PressHandler.prototype;\n    _proto.down = function down() {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n      }\n      this.time = new Date().getTime();\n    };\n    _proto.up = function up(cb) {\n      var _this = this;\n      if (!this.time) {\n        return;\n      }\n      var elapsed = new Date().getTime() - this.time;\n      if (elapsed < this.delay) {\n        this.timeout = setTimeout(function () {\n          cb();\n          _this.timeout = null;\n          _this.time = 0;\n        }, this.delay);\n      } else {\n        cb();\n        this.time = 0;\n      }\n    };\n    return PressHandler;\n  }();\n  function getOrientedArrow(direction) {\n    var angle = 0;\n    switch (direction) {\n      // @formatter:off\n      case 'up':\n        angle = 90;\n        break;\n      case 'right':\n        angle = 180;\n        break;\n      case 'down':\n        angle = -90;\n        break;\n      default:\n        angle = 0;\n        break;\n      // @formatter:on\n    }\n    return arrow.replace('rotate(0', \"rotate(\" + angle);\n  }\n  /**\n   * @summary Navigation bar move button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var AbstractMoveButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(AbstractMoveButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     * @param {number} value\n     */\n    function AbstractMoveButton(navbar, value) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-move-button') || this;\n      _this.container.title = _this.psv.config.lang.move;\n      /**\n       * @override\n       * @property {{longitude: boolean, latitude: boolean}} value\n       * @property {PressHandler} handler\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        value: value,\n        handler: new PressHandler()\n      });\n      _this.container.addEventListener('mousedown', _assertThisInitialized(_this));\n      _this.container.addEventListener('keydown', _assertThisInitialized(_this));\n      _this.container.addEventListener('keyup', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('mouseup', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('touchend', _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = AbstractMoveButton.prototype;\n    _proto.destroy = function destroy() {\n      this.__onMouseUp();\n      this.psv.container.removeEventListener('mouseup', this);\n      this.psv.container.removeEventListener('touchend', this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case 'mousedown':\n          this.__onMouseDown();\n          break;\n        case 'mouseup':\n          this.__onMouseUp();\n          break;\n        case 'touchend':\n          this.__onMouseUp();\n          break;\n        case 'keydown':\n          e.key === KEY_CODES.Enter && this.__onMouseDown();\n          break;\n        case 'keyup':\n          e.key === KEY_CODES.Enter && this.__onMouseUp();\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     */;\n    _proto.isSupported = function isSupported() {\n      return {\n        initial: !SYSTEM.isTouchEnabled.initial,\n        promise: SYSTEM.isTouchEnabled.promise.then(function (enabled) {\n          return !enabled;\n        })\n      };\n    }\n    /**\n     * @override\n     */;\n    _proto.onClick = function onClick() {// nothing\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseDown = function __onMouseDown() {\n      if (!this.prop.enabled) {\n        return;\n      }\n      this.psv.__stopAll();\n      this.psv.dynamics.position.roll(this.prop.value);\n      this.prop.handler.down();\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseUp = function __onMouseUp() {\n      var _this2 = this;\n      if (!this.prop.enabled) {\n        return;\n      }\n      this.prop.handler.up(function () {\n        _this2.psv.dynamics.position.stop();\n        _this2.psv.resetIdleTimer();\n      });\n    };\n    return AbstractMoveButton;\n  }(AbstractButton);\n  AbstractMoveButton.groupId = 'move';\n\n  /**\n   * @summary Navigation bar move down button class\n   * @extends PSV.buttons.AbstractMoveButton\n   * @memberof PSV.buttons\n   */\n\n  var MoveDownButton = /*#__PURE__*/function (_AbstractMoveButton) {\n    _inheritsLoose(MoveDownButton, _AbstractMoveButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function MoveDownButton(navbar) {\n      return _AbstractMoveButton.call(this, navbar, {\n        latitude: true\n      }) || this;\n    }\n    return MoveDownButton;\n  }(AbstractMoveButton);\n  MoveDownButton.id = 'moveDown';\n  MoveDownButton.icon = getOrientedArrow('down');\n\n  /**\n   * @summary Navigation bar move left button class\n   * @extends PSV.buttons.AbstractMoveButton\n   * @memberof PSV.buttons\n   */\n\n  var MoveLeftButton = /*#__PURE__*/function (_AbstractMoveButton) {\n    _inheritsLoose(MoveLeftButton, _AbstractMoveButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function MoveLeftButton(navbar) {\n      return _AbstractMoveButton.call(this, navbar, {\n        longitude: true\n      }) || this;\n    }\n    return MoveLeftButton;\n  }(AbstractMoveButton);\n  MoveLeftButton.id = 'moveLeft';\n  MoveLeftButton.icon = getOrientedArrow('left');\n\n  /**\n   * @summary Navigation bar move right button class\n   * @extends PSV.buttons.AbstractMoveButton\n   * @memberof PSV.buttons\n   */\n\n  var MoveRightButton = /*#__PURE__*/function (_AbstractMoveButton) {\n    _inheritsLoose(MoveRightButton, _AbstractMoveButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function MoveRightButton(navbar) {\n      return _AbstractMoveButton.call(this, navbar, {\n        longitude: false\n      }) || this;\n    }\n    return MoveRightButton;\n  }(AbstractMoveButton);\n  MoveRightButton.id = 'moveRight';\n  MoveRightButton.icon = getOrientedArrow('right');\n\n  /**\n   * @summary Navigation bar move up button class\n   * @extends PSV.buttons.AbstractMoveButton\n   * @memberof PSV.buttons\n   */\n\n  var MoveUpButton = /*#__PURE__*/function (_AbstractMoveButton) {\n    _inheritsLoose(MoveUpButton, _AbstractMoveButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function MoveUpButton(navbar) {\n      return _AbstractMoveButton.call(this, navbar, {\n        latitude: false\n      }) || this;\n    }\n    return MoveUpButton;\n  }(AbstractMoveButton);\n  MoveUpButton.id = 'moveUp';\n  MoveUpButton.icon = getOrientedArrow('up');\n\n  /**\n   * @summary Navigation bar zoom button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var AbstractZoomButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(AbstractZoomButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     * @param {number} value\n     */\n    function AbstractZoomButton(navbar, value) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-button--hover-scale psv-zoom-button') || this;\n      /**\n       * @override\n       * @property {boolean} value\n       * @property {PressHandler} handler\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        value: value,\n        handler: new PressHandler()\n      });\n      _this.container.addEventListener('mousedown', _assertThisInitialized(_this));\n      _this.container.addEventListener('keydown', _assertThisInitialized(_this));\n      _this.container.addEventListener('keyup', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('mouseup', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('touchend', _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = AbstractZoomButton.prototype;\n    _proto.destroy = function destroy() {\n      this.__onMouseUp();\n      this.psv.container.removeEventListener('mouseup', this);\n      this.psv.container.removeEventListener('touchend', this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case 'mousedown':\n          this.__onMouseDown();\n          break;\n        case 'mouseup':\n          this.__onMouseUp();\n          break;\n        case 'touchend':\n          this.__onMouseUp();\n          break;\n        case 'keydown':\n          e.key === KEY_CODES.Enter && this.__onMouseDown();\n          break;\n        case 'keyup':\n          e.key === KEY_CODES.Enter && this.__onMouseUp();\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     */;\n    _proto.isSupported = function isSupported() {\n      return {\n        initial: !SYSTEM.isTouchEnabled.initial,\n        promise: SYSTEM.isTouchEnabled.promise.then(function (enabled) {\n          return !enabled;\n        })\n      };\n    }\n    /**\n     * @override\n     */;\n    _proto.onClick = function onClick() {// nothing\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseDown = function __onMouseDown() {\n      if (!this.prop.enabled) {\n        return;\n      }\n      this.psv.dynamics.zoom.roll(this.prop.value);\n      this.prop.handler.down();\n    }\n    /**\n     * @private\n     */;\n    _proto.__onMouseUp = function __onMouseUp() {\n      var _this2 = this;\n      if (!this.prop.enabled) {\n        return;\n      }\n      this.prop.handler.up(function () {\n        return _this2.psv.dynamics.zoom.stop();\n      });\n    };\n    return AbstractZoomButton;\n  }(AbstractButton);\n  AbstractZoomButton.groupId = 'zoom';\n  var zoomIn = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\"><path fill=\\\"currentColor\\\" d=\\\"M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M8.728 4.009H6.744v2.737H4.006V8.73h2.738v2.736h1.984V8.73h2.737V6.746H8.728z\\\"/><!--Created by Ryan Canning from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar zoom-in button class\n   * @extends PSV.buttons.AbstractZoomButton\n   * @memberof PSV.buttons\n   */\n\n  var ZoomInButton = /*#__PURE__*/function (_AbstractZoomButton) {\n    _inheritsLoose(ZoomInButton, _AbstractZoomButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function ZoomInButton(navbar) {\n      return _AbstractZoomButton.call(this, navbar, false) || this;\n    }\n    return ZoomInButton;\n  }(AbstractZoomButton);\n  ZoomInButton.id = 'zoomIn';\n  ZoomInButton.icon = zoomIn;\n  var zoomOut = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\"><path fill=\\\"currentColor\\\" d=\\\"M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z\\\"/><path fill=\\\"currentColor\\\" d=\\\"M4.006 6.746h7.459V8.73H4.006z\\\"/><!--Created by Ryan Canning from the Noun Project--></svg>\\n\";\n\n  /**\n   * @summary Navigation bar zoom-out button class\n   * @extends PSV.buttons.AbstractZoomButton\n   * @memberof PSV.buttons\n   */\n\n  var ZoomOutButton = /*#__PURE__*/function (_AbstractZoomButton) {\n    _inheritsLoose(ZoomOutButton, _AbstractZoomButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function ZoomOutButton(navbar) {\n      return _AbstractZoomButton.call(this, navbar, true) || this;\n    }\n    return ZoomOutButton;\n  }(AbstractZoomButton);\n  ZoomOutButton.id = 'zoomOut';\n  ZoomOutButton.icon = zoomOut;\n\n  /**\n   * @summary Navigation bar zoom button class\n   * @extends PSV.buttons.AbstractButton\n   * @memberof PSV.buttons\n   */\n\n  var ZoomRangeButton = /*#__PURE__*/function (_AbstractButton) {\n    _inheritsLoose(ZoomRangeButton, _AbstractButton);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     */\n    function ZoomRangeButton(navbar) {\n      var _this;\n      _this = _AbstractButton.call(this, navbar, 'psv-zoom-range', false, false) || this;\n      /**\n       * @override\n       * @property {number} mediaMinWidth\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        mediaMinWidth: 0\n      });\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.zoomRange = document.createElement('div');\n      _this.zoomRange.className = 'psv-zoom-range-line';\n      _this.container.appendChild(_this.zoomRange);\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.zoomValue = document.createElement('div');\n      _this.zoomValue.className = 'psv-zoom-range-handle';\n      _this.zoomRange.appendChild(_this.zoomValue);\n      /**\n       * @member {PSV.Slider}\n       * @readonly\n       * @private\n       */\n\n      _this.slider = new Slider({\n        container: _this.container,\n        direction: Slider.HORIZONTAL,\n        onUpdate: function onUpdate(e) {\n          return _this.__onSliderUpdate(e);\n        }\n      });\n      _this.prop.mediaMinWidth = parseInt(getStyle(_this.container, 'maxWidth'), 10);\n      _this.psv.on(EVENTS.ZOOM_UPDATED, _assertThisInitialized(_this));\n      if (_this.psv.prop.ready) {\n        _this.__moveZoomValue(_this.psv.getZoomLevel());\n      } else {\n        _this.psv.once(EVENTS.READY, _assertThisInitialized(_this));\n      }\n      _this.refreshUi();\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = ZoomRangeButton.prototype;\n    _proto.destroy = function destroy() {\n      this.slider.destroy();\n      delete this.zoomRange;\n      delete this.zoomValue;\n      this.psv.off(EVENTS.ZOOM_UPDATED, this);\n      this.psv.off(EVENTS.READY, this);\n      _AbstractButton.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case EVENTS.ZOOM_UPDATED:\n          this.__moveZoomValue(e.args[0]);\n          break;\n        case EVENTS.READY:\n          this.__moveZoomValue(this.psv.getZoomLevel());\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     */;\n    _proto.isSupported = function isSupported() {\n      return {\n        initial: !SYSTEM.isTouchEnabled.initial,\n        promise: SYSTEM.isTouchEnabled.promise.then(function (enabled) {\n          return !enabled;\n        })\n      };\n    }\n    /**\n     * @override\n     */;\n    _proto.refreshUi = function refreshUi() {\n      if (this.prop.supported) {\n        if (this.psv.prop.size.width <= this.prop.mediaMinWidth && this.prop.visible) {\n          this.hide();\n        } else if (this.psv.prop.size.width > this.prop.mediaMinWidth && !this.prop.visible) {\n          this.show();\n        }\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.onClick = function onClick() {// nothing\n    }\n    /**\n     * @summary Moves the zoom cursor\n     * @param {number} level\n     * @private\n     */;\n    _proto.__moveZoomValue = function __moveZoomValue(level) {\n      this.zoomValue.style.left = level / 100 * this.zoomRange.offsetWidth - this.zoomValue.offsetWidth / 2 + 'px';\n    }\n    /**\n     * @summary Zoom change\n     * @private\n     */;\n    _proto.__onSliderUpdate = function __onSliderUpdate(e) {\n      if (e.mousedown) {\n        this.psv.zoom(e.value * 100);\n      }\n    };\n    return ZoomRangeButton;\n  }(AbstractButton);\n  ZoomRangeButton.id = 'zoomRange';\n  ZoomRangeButton.groupId = 'zoom';\n\n  /**\n   * @namespace PSV.plugins\n   */\n\n  /**\n   * @summary Base plugins class\n   * @memberof PSV.plugins\n   * @abstract\n   */\n\n  var AbstractPlugin = /*#__PURE__*/function (_EventEmitter) {\n    _inheritsLoose(AbstractPlugin, _EventEmitter);\n\n    /**\n     * @summary Unique identifier of the plugin\n     * @member {string}\n     * @readonly\n     * @static\n     */\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function AbstractPlugin(psv) {\n      var _this;\n      _this = _EventEmitter.call(this) || this;\n      /**\n       * @summary Reference to main controller\n       * @type {PSV.Viewer}\n       * @readonly\n       */\n\n      _this.psv = psv;\n      return _this;\n    }\n    /**\n     * @summary Initializes the plugin\n     * @package\n     */\n\n    var _proto = AbstractPlugin.prototype;\n    _proto.init = function init() {}\n    /**\n     * @summary Destroys the plugin\n     * @package\n     */;\n    _proto.destroy = function destroy() {\n      delete this.psv;\n    };\n    return AbstractPlugin;\n  }(uevent.EventEmitter);\n  AbstractPlugin.id = null;\n  var _keyboard;\n  /**\n   * @summary Default options\n   * @type {PSV.Options}\n   * @memberOf PSV\n   * @constant\n   */\n\n  var DEFAULTS = {\n    panorama: null,\n    overlay: null,\n    overlayOpacity: 1,\n    container: null,\n    adapter: null,\n    plugins: [],\n    caption: null,\n    description: null,\n    downloadUrl: null,\n    loadingImg: null,\n    loadingTxt: 'Loading...',\n    size: null,\n    fisheye: false,\n    minFov: 30,\n    maxFov: 90,\n    defaultZoomLvl: 50,\n    defaultLong: 0,\n    defaultLat: 0,\n    sphereCorrection: null,\n    moveSpeed: 1,\n    zoomSpeed: 1,\n    autorotateDelay: null,\n    autorotateIdle: false,\n    autorotateSpeed: '2rpm',\n    autorotateLat: null,\n    autorotateZoomLvl: null,\n    moveInertia: true,\n    mousewheel: true,\n    mousemove: true,\n    mousewheelCtrlKey: false,\n    touchmoveTwoFingers: false,\n    useXmpData: true,\n    panoData: null,\n    requestHeaders: null,\n    canvasBackground: '#000',\n    withCredentials: false,\n    navbar: ['autorotate', 'zoom', 'move', 'download', 'description', 'caption', 'fullscreen'],\n    lang: {\n      autorotate: 'Automatic rotation',\n      zoom: 'Zoom',\n      zoomOut: 'Zoom out',\n      zoomIn: 'Zoom in',\n      move: 'Move',\n      download: 'Download',\n      fullscreen: 'Fullscreen',\n      menu: 'Menu',\n      twoFingers: 'Use two fingers to navigate',\n      ctrlZoom: 'Use ctrl + scroll to zoom the image',\n      loadError: 'The panorama can\\'t be loaded'\n    },\n    keyboard: (_keyboard = {}, _keyboard[KEY_CODES.ArrowUp] = ACTIONS.ROTATE_LAT_UP, _keyboard[KEY_CODES.ArrowDown] = ACTIONS.ROTATE_LAT_DOWN, _keyboard[KEY_CODES.ArrowRight] = ACTIONS.ROTATE_LONG_RIGHT, _keyboard[KEY_CODES.ArrowLeft] = ACTIONS.ROTATE_LONG_LEFT, _keyboard[KEY_CODES.PageUp] = ACTIONS.ZOOM_IN, _keyboard[KEY_CODES.PageDown] = ACTIONS.ZOOM_OUT, _keyboard[KEY_CODES.Plus] = ACTIONS.ZOOM_IN, _keyboard[KEY_CODES.Minus] = ACTIONS.ZOOM_OUT, _keyboard[KEY_CODES.Space] = ACTIONS.TOGGLE_AUTOROTATE, _keyboard)\n  };\n  /**\n   * @summary List of unmodifiable options and their error messages\n   * @private\n   */\n\n  var READONLY_OPTIONS = {\n    panorama: 'Use setPanorama method to change the panorama',\n    panoData: 'Use setPanorama method to change the panorama',\n    container: 'Cannot change viewer container',\n    adapter: 'Cannot change adapter',\n    plugins: 'Cannot change plugins'\n  };\n  /**\n   * @summary List of deprecated options and their warning messages\n   * @private\n   */\n\n  var DEPRECATED_OPTIONS = {\n    captureCursor: 'captureCursor is deprecated'\n  };\n  /**\n   * @summary Parsers/validators for each option\n   * @private\n   */\n\n  var CONFIG_PARSERS = {\n    container: function container(_container) {\n      if (!_container) {\n        throw new PSVError('No value given for container.');\n      }\n      return _container;\n    },\n    adapter: function adapter(_adapter) {\n      if (!_adapter) {\n        _adapter = [EquirectangularAdapter];\n      } else if (Array.isArray(_adapter)) {\n        _adapter = [pluginInterop(_adapter[0], AbstractAdapter), _adapter[1]];\n      } else {\n        _adapter = [pluginInterop(_adapter, AbstractAdapter)];\n      }\n      if (!_adapter[0]) {\n        throw new PSVError('Un undefined value with given for adapter.');\n      }\n      return _adapter;\n    },\n    overlayOpacity: function overlayOpacity(_overlayOpacity) {\n      return three.MathUtils.clamp(_overlayOpacity, 0, 1);\n    },\n    defaultLong: function defaultLong(_defaultLong) {\n      // defaultLat is between 0 and PI\n      return parseAngle(_defaultLong);\n    },\n    defaultLat: function defaultLat(_defaultLat) {\n      // defaultLat is between -PI/2 and PI/2\n      return parseAngle(_defaultLat, true);\n    },\n    defaultZoomLvl: function defaultZoomLvl(_defaultZoomLvl) {\n      return three.MathUtils.clamp(_defaultZoomLvl, 0, 100);\n    },\n    minFov: function minFov(_minFov, config) {\n      // minFov and maxFov must be ordered\n      if (config.maxFov < _minFov) {\n        logWarn('maxFov cannot be lower than minFov');\n        _minFov = config.maxFov;\n      } // minFov between 1 and 179\n\n      return three.MathUtils.clamp(_minFov, 1, 179);\n    },\n    maxFov: function maxFov(_maxFov, config) {\n      // minFov and maxFov must be ordered\n      if (_maxFov < config.minFov) {\n        _maxFov = config.minFov;\n      } // maxFov between 1 and 179\n\n      return three.MathUtils.clamp(_maxFov, 1, 179);\n    },\n    lang: function lang(_lang) {\n      if (Array.isArray(_lang.twoFingers)) {\n        logWarn('lang.twoFingers must not be an array');\n        _lang.twoFingers = _lang.twoFingers[0];\n      }\n      return _extends({}, DEFAULTS.lang, _lang);\n    },\n    keyboard: function keyboard(_keyboard2) {\n      // keyboard=true becomes the default map\n      if (_keyboard2 === true) {\n        return clone(DEFAULTS.keyboard);\n      }\n      return _keyboard2;\n    },\n    autorotateLat: function autorotateLat(_autorotateLat, config) {\n      // default autorotateLat is defaultLat\n      if (_autorotateLat === null) {\n        return parseAngle(config.defaultLat, true);\n      } // autorotateLat is between -PI/2 and PI/2\n      else {\n        return parseAngle(_autorotateLat, true);\n      }\n    },\n    autorotateZoomLvl: function autorotateZoomLvl(_autorotateZoomLvl) {\n      if (isNil(_autorotateZoomLvl)) {\n        return null;\n      } else {\n        return three.MathUtils.clamp(_autorotateZoomLvl, 0, 100);\n      }\n    },\n    autorotateSpeed: function autorotateSpeed(_autorotateSpeed) {\n      return parseSpeed(_autorotateSpeed);\n    },\n    autorotateIdle: function autorotateIdle(_autorotateIdle, config) {\n      if (_autorotateIdle && isNil(config.autorotateDelay)) {\n        logWarn('autorotateIdle requires a non null autorotateDelay');\n        return false;\n      }\n      return _autorotateIdle;\n    },\n    fisheye: function fisheye(_fisheye) {\n      // translate boolean fisheye to amount\n      if (_fisheye === true) {\n        return 1;\n      } else if (_fisheye === false) {\n        return 0;\n      }\n      return _fisheye;\n    },\n    plugins: function plugins(_plugins) {\n      return _plugins.map(function (plugin) {\n        if (Array.isArray(plugin)) {\n          plugin = [pluginInterop(plugin[0], AbstractPlugin), plugin[1]];\n        } else {\n          plugin = [pluginInterop(plugin, AbstractPlugin)];\n        }\n        if (!plugin[0]) {\n          throw new PSVError('Un undefined value was given for plugins.');\n        }\n        return plugin;\n      });\n    }\n  };\n  /**\n   * @summary Merge user config with default config and performs validation\n   * @param {PSV.Options} options\n   * @returns {PSV.Options}\n   * @memberOf PSV\n   * @private\n   */\n\n  function getConfig(options) {\n    var tempConfig = clone(DEFAULTS);\n    deepmerge(tempConfig, options);\n    var config = {};\n    each(tempConfig, function (value, key) {\n      if (DEPRECATED_OPTIONS[key]) {\n        logWarn(DEPRECATED_OPTIONS[key]);\n        return;\n      }\n      if (!Object.prototype.hasOwnProperty.call(DEFAULTS, key)) {\n        throw new PSVError(\"Unknown option \" + key);\n      }\n      if (CONFIG_PARSERS[key]) {\n        config[key] = CONFIG_PARSERS[key](value, tempConfig);\n      } else {\n        config[key] = value;\n      }\n    });\n    return config;\n  }\n\n  /**\n   * @summary Navbar caption class\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var NavbarCaption = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(NavbarCaption, _AbstractComponent);\n\n    /**\n     * @param {PSV.components.Navbar} navbar\n     * @param {string} caption\n     */\n    function NavbarCaption(navbar, caption) {\n      var _this;\n      _this = _AbstractComponent.call(this, navbar, 'psv-caption') || this;\n      /**\n       * @override\n       * @property {string} id\n       * @property {boolean} collapsable\n       * @property {number} width\n       * @property {number} contentWidth - width of the caption content\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        id: _this.constructor.id,\n        collapsable: false,\n        width: 0,\n        contentWidth: 0\n      });\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.content = document.createElement('div');\n      _this.content.className = 'psv-caption-content';\n      _this.container.appendChild(_this.content);\n      _this.setCaption(caption);\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = NavbarCaption.prototype;\n    _proto.destroy = function destroy() {\n      delete this.content;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Sets the bar caption\n     * @param {string} html\n     */;\n    _proto.setCaption = function setCaption(html) {\n      this.show();\n      this.content.innerHTML = html;\n      this.prop.contentWidth = html ? this.content.offsetWidth : 0;\n      this.refreshUi();\n    }\n    /**\n     * @summary Toggles content and icon depending on available space\n     * @private\n     */;\n    _proto.refreshUi = function refreshUi() {\n      this.toggle(this.container.offsetWidth >= this.prop.contentWidth);\n      this.__refreshButton();\n    }\n    /**\n     * @override\n     */;\n    _proto.hide = function hide() {\n      this.content.style.display = 'none';\n      this.prop.visible = false;\n    }\n    /**\n     * @override\n     */;\n    _proto.show = function show() {\n      this.content.style.display = '';\n      this.prop.visible = true;\n    }\n    /**\n     * @private\n     */;\n    _proto.__refreshButton = function __refreshButton() {\n      var _this$psv$navbar$getB;\n      (_this$psv$navbar$getB = this.psv.navbar.getButton(DescriptionButton.id, false)) == null ? void 0 : _this$psv$navbar$getB.refreshUi(true);\n    };\n    return NavbarCaption;\n  }(AbstractComponent);\n  NavbarCaption.id = 'caption';\n\n  /**\n   * @summary List of available buttons\n   * @type {Object<string, Class<PSV.buttons.AbstractButton>>}\n   * @private\n   */\n\n  var AVAILABLE_BUTTONS = {};\n  /**\n   * @summary List of available buttons\n   * @type {Object<string, Array<Class<PSV.buttons.AbstractButton>>>}\n   * @private\n   */\n\n  var AVAILABLE_GROUPS = {};\n  /**\n   * @summary Register a new button available for all viewers\n   * @param {Class<PSV.buttons.AbstractButton>} button\n   * @param {'start' | 'end' | '[id]:left' | '[id]:right'} [defaultPosition]\n   *    If provided the default configuration of the navbar will be modified.\n   * @memberOf PSV\n   */\n\n  function registerButton(button, defaultPosition) {\n    if (!button.id) {\n      throw new PSVError('Button ID is required');\n    }\n    AVAILABLE_BUTTONS[button.id] = button;\n    if (button.groupId) {\n      AVAILABLE_GROUPS[button.groupId] = AVAILABLE_GROUPS[button.groupId] || [];\n      AVAILABLE_GROUPS[button.groupId].push(button);\n    }\n    if (typeof defaultPosition === 'string') {\n      switch (defaultPosition) {\n        case 'start':\n          DEFAULTS.navbar.unshift(button.id);\n          break;\n        case 'end':\n          DEFAULTS.navbar.push(button.id);\n          break;\n        default:\n          var _defaultPosition$spli = defaultPosition.split(':'),\n            id = _defaultPosition$spli[0],\n            pos = _defaultPosition$spli[1];\n          DEFAULTS.navbar.splice(DEFAULTS.navbar.indexOf(id) + (pos === 'right' ? 1 : 0), 0, button.id);\n      }\n    }\n  }\n  [AutorotateButton, ZoomOutButton, ZoomRangeButton, ZoomInButton, DescriptionButton, DownloadButton, FullscreenButton, MoveLeftButton, MoveRightButton, MoveUpButton, MoveDownButton].forEach(registerButton);\n  /**\n   * @summary Navigation bar component\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Navbar = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Navbar, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Navbar(psv) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-navbar psv--capture-event') || this;\n      /**\n       * @summary List of buttons of the navbar\n       * @member {PSV.buttons.AbstractButton[]}\n       * @override\n       */\n\n      _this.children = [];\n      /**\n       * @summary List of collapsed buttons\n       * @member {PSV.buttons.AbstractButton[]}\n       * @private\n       */\n\n      _this.collapsed = [];\n      return _this;\n    }\n    /**\n     * @summary Change the buttons visible on the navbar\n     * @param {string|Array<string|PSV.NavbarCustomButton>} buttons\n     * @throws {PSV.PSVError} when a button is unknown\n     */\n\n    var _proto = Navbar.prototype;\n    _proto.setButtons = function setButtons(buttons) {\n      var _this2 = this;\n      this.children.slice().forEach(function (item) {\n        return item.destroy();\n      });\n      this.children.length = 0;\n      var cleanedButtons = this.__cleanButtons(buttons); // force description button if caption is present (used on narrow screens)\n\n      if (cleanedButtons.indexOf(NavbarCaption.id) !== -1 && cleanedButtons.indexOf(DescriptionButton.id) === -1) {\n        cleanedButtons.splice(cleanedButtons.indexOf(NavbarCaption.id), 0, DescriptionButton.id);\n      }\n      /* eslint-disable no-new */\n\n      cleanedButtons.forEach(function (button) {\n        if (typeof button === 'object') {\n          new CustomButton(_this2, button);\n        } else if (AVAILABLE_BUTTONS[button]) {\n          new AVAILABLE_BUTTONS[button](_this2);\n        } else if (AVAILABLE_GROUPS[button]) {\n          AVAILABLE_GROUPS[button].forEach(function (buttonCtor) {\n            return new buttonCtor(_this2);\n          }); // eslint-disable-line new-cap\n        } else if (button === NavbarCaption.id) {\n          new NavbarCaption(_this2, _this2.psv.config.caption);\n        } else {\n          throw new PSVError('Unknown button ' + button);\n        }\n      });\n      new MenuButton(this);\n      /* eslint-enable no-new */\n\n      this.children.forEach(function (item) {\n        if (typeof item.checkSupported === 'function') {\n          item.checkSupported();\n        }\n      });\n    }\n    /**\n     * @summary Sets the bar caption\n     * @param {string} html\n     */;\n    _proto.setCaption = function setCaption(html) {\n      var caption = this.getButton(NavbarCaption.id, false);\n      caption == null ? void 0 : caption.setCaption(html);\n    }\n    /**\n     * @summary Returns a button by its identifier\n     * @param {string} id\n     * @param {boolean} [warnNotFound=true]\n     * @returns {PSV.buttons.AbstractButton}\n     */;\n    _proto.getButton = function getButton(id, warnNotFound) {\n      if (warnNotFound === void 0) {\n        warnNotFound = true;\n      }\n      var button = null;\n      this.children.some(function (item) {\n        if (item.prop.id === id) {\n          button = item;\n          return true;\n        } else {\n          return false;\n        }\n      });\n      if (!button && warnNotFound) {\n        logWarn(\"button \\\"\" + id + \"\\\" not found in the navbar\");\n      }\n      return button;\n    }\n    /**\n     * @summary Shows the navbar\n     */;\n    _proto.show = function show() {\n      this.container.classList.add('psv-navbar--open');\n      this.prop.visible = true;\n    }\n    /**\n     * @summary Hides the navbar\n     */;\n    _proto.hide = function hide() {\n      this.container.classList.remove('psv-navbar--open');\n      this.prop.visible = false;\n    }\n    /**\n     * @override\n     */;\n    _proto.refreshUi = function refreshUi() {\n      _AbstractComponent.prototype.refreshUi.call(this);\n      if (this.psv.prop.uiRefresh === true) {\n        var availableWidth = this.container.offsetWidth;\n        var totalWidth = 0;\n        var visibleButtons = [];\n        var collapsableButtons = [];\n        this.children.forEach(function (item) {\n          if (item.prop.visible) {\n            totalWidth += item.prop.width;\n            visibleButtons.push(item);\n            if (item.prop.collapsable) {\n              collapsableButtons.push(item);\n            }\n          }\n        });\n        if (!visibleButtons.length) {\n          return;\n        }\n        if (availableWidth < totalWidth && collapsableButtons.length > 0) {\n          collapsableButtons.forEach(function (item) {\n            return item.collapse();\n          });\n          this.collapsed = collapsableButtons;\n          this.getButton(MenuButton.id).show(false);\n        } else if (availableWidth >= totalWidth && this.collapsed.length > 0) {\n          this.collapsed.forEach(function (item) {\n            return item.uncollapse();\n          });\n          this.collapsed = [];\n          this.getButton(MenuButton.id).hide(false);\n        }\n        var caption = this.getButton(NavbarCaption.id, false);\n        if (caption) {\n          caption.refreshUi();\n        }\n      }\n    }\n    /**\n     * @summary Ensure the buttons configuration is correct\n     * @private\n     */;\n    _proto.__cleanButtons = function __cleanButtons(buttons) {\n      // true becomes the default array\n      if (buttons === true) {\n        return clone(DEFAULTS.navbar);\n      } // can be a space or coma separated list\n      else if (typeof buttons === 'string') {\n        return buttons.split(/[ ,]/);\n      } else {\n        return buttons || [];\n      }\n    };\n    return Navbar;\n  }(AbstractComponent);\n\n  /**\n   * @summary Loader component\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Loader = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Loader, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Loader(psv) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-loader-container') || this;\n      /**\n       * @summary Inner container for vertical center\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.loader = document.createElement('div');\n      _this.loader.className = 'psv-loader';\n      _this.container.appendChild(_this.loader);\n      /**\n       * @summary Animation canvas\n       * @member {HTMLCanvasElement}\n       * @readonly\n       * @private\n       */\n\n      _this.canvas = document.createElement('canvas');\n      _this.canvas.className = 'psv-loader-canvas';\n      _this.canvas.width = _this.loader.clientWidth * SYSTEM.pixelRatio;\n      _this.canvas.height = _this.loader.clientWidth * SYSTEM.pixelRatio;\n      _this.loader.appendChild(_this.canvas);\n      /**\n       * @override\n       * @property {number} thickness\n       * @property {string} current\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        tickness: (_this.loader.offsetWidth - _this.loader.clientWidth) / 2 * SYSTEM.pixelRatio,\n        current: null\n      });\n      _this.refreshUi();\n      _this.hide();\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Loader.prototype;\n    _proto.destroy = function destroy() {\n      delete this.loader;\n      delete this.canvas;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @override\n     */;\n    _proto.refreshUi = function refreshUi() {\n      if (this.prop.current !== (this.psv.config.loadingImg || this.psv.config.loadingTxt)) {\n        if (this.prop.current) {\n          this.loader.removeChild(this.loader.lastChild);\n        }\n        var inner;\n        if (this.psv.config.loadingImg) {\n          inner = document.createElement('img');\n          inner.className = 'psv-loader-image';\n          inner.src = this.psv.config.loadingImg;\n        } else if (this.psv.config.loadingTxt) {\n          inner = document.createElement('div');\n          inner.className = 'psv-loader-text';\n          inner.innerHTML = this.psv.config.loadingTxt;\n        }\n        if (inner) {\n          var size = Math.round(Math.sqrt(2 * Math.pow((this.canvas.width / 2 - this.prop.tickness / 2) / SYSTEM.pixelRatio, 2)));\n          inner.style.maxWidth = size + 'px';\n          inner.style.maxHeight = size + 'px';\n          this.loader.appendChild(inner);\n        }\n        this.prop.current = this.psv.config.loadingImg || this.psv.config.loadingTxt;\n      }\n    }\n    /**\n     * @summary Sets the loader progression\n     * @param {number} value - from 0 to 100\n     */;\n    _proto.setProgress = function setProgress(value) {\n      var context = this.canvas.getContext('2d');\n      context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      context.lineWidth = this.prop.tickness;\n      context.strokeStyle = getStyle(this.loader, 'color');\n      context.beginPath();\n      context.arc(this.canvas.width / 2, this.canvas.height / 2, this.canvas.width / 2 - this.prop.tickness / 2, -Math.PI / 2, three.MathUtils.clamp(value, 0, 100) / 100 * 2 * Math.PI - Math.PI / 2);\n      context.stroke();\n      this.psv.trigger(EVENTS.LOAD_PROGRESS, Math.round(value));\n    };\n    return Loader;\n  }(AbstractComponent);\n\n  /**\n   * @summary Notification component\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Notification = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Notification, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Notification(psv) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-notification') || this;\n      /**\n       * @override\n       * @property {*} timeout\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        visible: false,\n        contentId: undefined,\n        timeout: null\n      });\n      /**\n       * Notification content\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.content = document.createElement('div');\n      _this.content.className = 'psv-notification-content';\n      _this.container.appendChild(_this.content);\n      _this.content.addEventListener('click', function () {\n        return _this.hide();\n      });\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Notification.prototype;\n    _proto.destroy = function destroy() {\n      delete this.content;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @override\n     * @param {string} [id]\n     */;\n    _proto.isVisible = function isVisible(id) {\n      return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n    }\n    /**\n     * @override\n     * @summary This method is not supported\n     * @throws {PSV.PSVError} always\n     */;\n    _proto.toggle = function toggle() {\n      throw new PSVError('Notification cannot be toggled');\n    }\n    /**\n     * @summary Displays a notification on the viewer\n     * @param {Object|string} config\n     * @param {string} [config.id] - unique identifier to use with \"hide\"\n     * @param {string} config.content\n     * @param {number} [config.timeout]\n     * @fires PSV.show-notification\n     *\n     * @example\n     * viewer.showNotification({ content: 'Hello world', timeout: 5000 })\n     * @example\n     * viewer.showNotification('Hello world')\n     */;\n    _proto.show = function show(config) {\n      var _this2 = this;\n      if (this.prop.timeout) {\n        clearTimeout(this.prop.timeout);\n        this.prop.timeout = null;\n      }\n      if (typeof config === 'string') {\n        config = {\n          content: config\n        };\n      }\n      this.prop.contentId = config.id;\n      this.content.innerHTML = config.content;\n      this.container.classList.add('psv-notification--visible');\n      this.prop.visible = true;\n      this.psv.trigger(EVENTS.SHOW_NOTIFICATION, config.id);\n      if (config.timeout) {\n        this.prop.timeout = setTimeout(function () {\n          return _this2.hide(config.id);\n        }, config.timeout);\n      }\n    }\n    /**\n     * @summary Hides the notification\n     * @param {string} [id]\n     * @fires PSV.hide-notification\n     */;\n    _proto.hide = function hide(id) {\n      if (this.isVisible(id)) {\n        var contentId = this.prop.contentId;\n        this.container.classList.remove('psv-notification--visible');\n        this.prop.visible = false;\n        this.prop.contentId = undefined;\n        this.psv.trigger(EVENTS.HIDE_NOTIFICATION, contentId);\n      }\n    };\n    return Notification;\n  }(AbstractComponent);\n\n  /**\n   * @summary Overlay component\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Overlay = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Overlay, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Overlay(psv) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-overlay') || this;\n      /**\n       * @override\n       * @property {string} contentId\n       * @property {boolean} dissmisable\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        contentId: undefined,\n        dissmisable: true\n      });\n      /**\n       * Image container\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.image = document.createElement('div');\n      _this.image.className = 'psv-overlay-image';\n      _this.container.appendChild(_this.image);\n      /**\n       * Text container\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.text = document.createElement('div');\n      _this.text.className = 'psv-overlay-text';\n      _this.container.appendChild(_this.text);\n      /**\n       * Subtext container\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.subtext = document.createElement('div');\n      _this.subtext.className = 'psv-overlay-subtext';\n      _this.container.appendChild(_this.subtext);\n      _this.psv.on(EVENTS.CLICK, _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.KEY_PRESS, _assertThisInitialized(_this));\n      _AbstractComponent.prototype.hide.call(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Overlay.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.CLICK, this);\n      this.psv.off(EVENTS.KEY_PRESS, this);\n      delete this.image;\n      delete this.text;\n      delete this.subtext;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        case EVENTS.CLICK:\n          if (this.isVisible() && this.prop.dissmisable) {\n            this.hide();\n            e.stopPropagation();\n          }\n          break;\n        case EVENTS.KEY_PRESS:\n          if (this.isVisible() && this.prop.dissmisable && e.args[0] === KEY_CODES.Escape) {\n            this.hide();\n            e.preventDefault();\n          }\n          break;\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     * @param {string} [id]\n     */;\n    _proto.isVisible = function isVisible(id) {\n      return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n    }\n    /**\n     * @override\n     * @summary This method is not supported\n     * @throws {PSV.PSVError} always\n     */;\n    _proto.toggle = function toggle() {\n      throw new PSVError('Overlay cannot be toggled');\n    }\n    /**\n     * @summary Displays an overlay on the viewer\n     * @param {Object|string} config\n     * @param {string} [config.id] - unique identifier to use with \"hide\"\n     * @param {string} config.image - SVG image/icon displayed above the text\n     * @param {string} config.text - main message\n     * @param {string} [config.subtext] - secondary message\n     * @param {boolean} [config.dissmisable=true] - if the user can hide the overlay by clicking\n     * @fires PSV.show-overlay\n     */;\n    _proto.show = function show(config) {\n      if (typeof config === 'string') {\n        config = {\n          text: config\n        };\n      }\n      this.prop.contentId = config.id;\n      this.prop.dissmisable = config.dissmisable !== false;\n      this.image.innerHTML = config.image || '';\n      this.text.innerHTML = config.text || '';\n      this.subtext.innerHTML = config.subtext || '';\n      _AbstractComponent.prototype.show.call(this);\n      this.psv.trigger(EVENTS.SHOW_OVERLAY, config.id);\n    }\n    /**\n     * @summary Hides the overlay\n     * @param {string} [id]\n     * @fires PSV.hide-overlay\n     */;\n    _proto.hide = function hide(id) {\n      if (this.isVisible(id)) {\n        var contentId = this.prop.contentId;\n        _AbstractComponent.prototype.hide.call(this);\n        this.prop.contentId = undefined;\n        this.psv.trigger(EVENTS.HIDE_OVERLAY, contentId);\n      }\n    };\n    return Overlay;\n  }(AbstractComponent);\n\n  /**\n   * @summary Minimum width of the panel\n   * @type {number}\n   * @constant\n   * @private\n   */\n\n  var PANEL_MIN_WIDTH = 200;\n  /**\n   * @summary Panel component\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Panel = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Panel, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Panel(psv) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-panel psv--capture-event') || this;\n      /**\n       * @override\n       * @property {string} contentId\n       * @property {number} mouseX\n       * @property {number} mouseY\n       * @property {boolean} mousedown\n       * @property {function} clickHandler\n       * @property {function} keyHandler\n       */\n\n      _this.prop = _extends({}, _this.prop, {\n        visible: false,\n        contentId: undefined,\n        mouseX: 0,\n        mouseY: 0,\n        mousedown: false,\n        clickHandler: null,\n        keyHandler: null,\n        width: {}\n      });\n      var resizer = document.createElement('div');\n      resizer.className = 'psv-panel-resizer';\n      _this.container.appendChild(resizer);\n      var closeBtn = document.createElement('div');\n      closeBtn.className = 'psv-panel-close-button';\n      _this.container.appendChild(closeBtn);\n      /**\n       * @summary Content container\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.content = document.createElement('div');\n      _this.content.className = 'psv-panel-content';\n      _this.container.appendChild(_this.content); // Stop wheel event bubbling from panel\n\n      _this.container.addEventListener(SYSTEM.mouseWheelEvent, function (e) {\n        return e.stopPropagation();\n      });\n      closeBtn.addEventListener('click', function () {\n        return _this.hide();\n      }); // Event for panel resizing + stop bubling\n\n      resizer.addEventListener('mousedown', _assertThisInitialized(_this));\n      resizer.addEventListener('touchstart', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('mouseup', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('touchend', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('mousemove', _assertThisInitialized(_this));\n      _this.psv.container.addEventListener('touchmove', _assertThisInitialized(_this));\n      _this.psv.on(EVENTS.KEY_PRESS, _assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Panel.prototype;\n    _proto.destroy = function destroy() {\n      this.psv.off(EVENTS.KEY_PRESS, this);\n      this.psv.container.removeEventListener('mousemove', this);\n      this.psv.container.removeEventListener('touchmove', this);\n      this.psv.container.removeEventListener('mouseup', this);\n      this.psv.container.removeEventListener('touchend', this);\n      delete this.prop;\n      delete this.content;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case 'mousedown':\n          this.__onMouseDown(e);\n          break;\n        case 'touchstart':\n          this.__onTouchStart(e);\n          break;\n        case 'mousemove':\n          this.__onMouseMove(e);\n          break;\n        case 'touchmove':\n          this.__onTouchMove(e);\n          break;\n        case 'mouseup':\n          this.__onMouseUp(e);\n          break;\n        case 'touchend':\n          this.__onMouseUp(e);\n          break;\n        case EVENTS.KEY_PRESS:\n          if (this.isVisible() && e.args[0] === KEY_CODES.Escape) {\n            this.hide();\n            e.preventDefault();\n          }\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     * @param {string} [id]\n     */;\n    _proto.isVisible = function isVisible(id) {\n      return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n    }\n    /**\n     * @override\n     * @summary This method is not supported\n     * @throws {PSV.PSVError} always\n     */;\n    _proto.toggle = function toggle() {\n      throw new PSVError('Panel cannot be toggled');\n    }\n    /**\n     * @summary Shows the panel\n     * @param {string|Object} config\n     * @param {string} [config.id] - unique identifier to use with \"hide\" and to store the user desired width\n     * @param {string} config.content - HTML content of the panel\n     * @param {boolean} [config.noMargin=false] - remove the default margins\n     * @param {string} [config.width] - initial width\n     * @param {Function} [config.clickHandler] - called when the user clicks inside the panel or presses the Enter key while an element focused\n     * @fires PSV.open-panel\n     */;\n    _proto.show = function show(config) {\n      var _this2 = this;\n      var wasVisible = this.isVisible(config.id);\n      if (typeof config === 'string') {\n        config = {\n          content: config\n        };\n      }\n      this.prop.contentId = config.id;\n      this.prop.visible = true;\n      if (this.prop.clickHandler) {\n        this.content.removeEventListener('click', this.prop.clickHandler);\n        this.content.removeEventListener('keydown', this.prop.keyHandler);\n        this.prop.clickHandler = null;\n        this.prop.keyHandler = null;\n      }\n      if (config.id && this.prop.width[config.id]) {\n        this.container.style.width = this.prop.width[config.id];\n      } else if (config.width) {\n        this.container.style.width = config.width;\n      } else {\n        this.container.style.width = null;\n      }\n      this.content.innerHTML = config.content;\n      this.content.scrollTop = 0;\n      this.container.classList.add('psv-panel--open');\n      toggleClass(this.content, 'psv-panel-content--no-margin', config.noMargin === true);\n      if (config.clickHandler) {\n        this.prop.clickHandler = config.clickHandler;\n        this.prop.keyHandler = function (e) {\n          if (e.key === KEY_CODES.Enter) {\n            config.clickHandler(e);\n          }\n        };\n        this.content.addEventListener('click', this.prop.clickHandler);\n        this.content.addEventListener('keydown', this.prop.keyHandler); // focus the first element if possible, after animation ends\n\n        if (!wasVisible) {\n          setTimeout(function () {\n            var _this2$content$queryS;\n            (_this2$content$queryS = _this2.content.querySelector('a,button,[tabindex]')) == null ? void 0 : _this2$content$queryS.focus();\n          }, 300);\n        }\n      }\n      this.psv.trigger(EVENTS.OPEN_PANEL, config.id);\n    }\n    /**\n     * @summary Hides the panel\n     * @param {string} [id]\n     * @fires PSV.close-panel\n     */;\n    _proto.hide = function hide(id) {\n      if (this.isVisible(id)) {\n        var contentId = this.prop.contentId;\n        this.prop.visible = false;\n        this.prop.contentId = undefined;\n        this.content.innerHTML = null;\n        this.container.classList.remove('psv-panel--open');\n        if (this.prop.clickHandler) {\n          this.content.removeEventListener('click', this.prop.clickHandler);\n          this.prop.clickHandler = null;\n        }\n        this.psv.trigger(EVENTS.CLOSE_PANEL, contentId);\n      }\n    }\n    /**\n     * @summary Handles mouse down events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseDown = function __onMouseDown(evt) {\n      evt.stopPropagation();\n      this.__startResize(evt);\n    }\n    /**\n     * @summary Handles touch events\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__onTouchStart = function __onTouchStart(evt) {\n      evt.stopPropagation();\n      this.__startResize(evt.changedTouches[0]);\n    }\n    /**\n     * @summary Handles mouse up events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseUp = function __onMouseUp(evt) {\n      if (this.prop.mousedown) {\n        evt.stopPropagation();\n        this.prop.mousedown = false;\n        this.content.classList.remove('psv-panel-content--no-interaction');\n      }\n    }\n    /**\n     * @summary Handles mouse move events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseMove = function __onMouseMove(evt) {\n      if (this.prop.mousedown) {\n        evt.stopPropagation();\n        this.__resize(evt);\n      }\n    }\n    /**\n     * @summary Handles touch move events\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__onTouchMove = function __onTouchMove(evt) {\n      if (this.prop.mousedown) {\n        this.__resize(evt.touches[0]);\n      }\n    }\n    /**\n     * @summary Initializes the panel resize\n     * @param {MouseEvent|Touch} evt\n     * @private\n     */;\n    _proto.__startResize = function __startResize(evt) {\n      this.prop.mouseX = evt.clientX;\n      this.prop.mouseY = evt.clientY;\n      this.prop.mousedown = true;\n      this.content.classList.add('psv-panel-content--no-interaction');\n    }\n    /**\n     * @summary Resizes the panel\n     * @param {MouseEvent|Touch} evt\n     * @private\n     */;\n    _proto.__resize = function __resize(evt) {\n      var x = evt.clientX;\n      var y = evt.clientY;\n      var width = Math.max(PANEL_MIN_WIDTH, this.container.offsetWidth - (x - this.prop.mouseX)) + 'px';\n      if (this.prop.contentId) {\n        this.prop.width[this.prop.contentId] = width;\n      }\n      this.container.style.width = width;\n      this.prop.mouseX = x;\n      this.prop.mouseY = y;\n    };\n    return Panel;\n  }(AbstractComponent);\n  var errorIcon = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"15 15 70 70\\\"><path fill=\\\"currentColor\\\" d=\\\"M50,16.2c-18.6,0-33.8,15.1-33.8,33.8S31.4,83.7,50,83.7S83.8,68.6,83.8,50S68.6,16.2,50,16.2z M50,80.2c-16.7,0-30.2-13.6-30.2-30.2S33.3,19.7,50,19.7S80.3,33.3,80.3,50S66.7,80.2,50,80.2z\\\"/><rect fill=\\\"currentColor\\\" x=\\\"48\\\" y=\\\"31.7\\\" width=\\\"4\\\" height=\\\"28\\\"/><rect fill=\\\"currentColor\\\" x=\\\"48\\\" y=\\\"63.2\\\" width=\\\"4\\\" height=\\\"5\\\"/><!--Created by Shastry from the Noun Project--></svg>\\n\";\n\n  /**\n   * @namespace PSV.services\n   */\n\n  /**\n   * @summary Base services class\n   * @memberof PSV.services\n   * @abstract\n   */\n  var AbstractService = /*#__PURE__*/function () {\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function AbstractService(psv) {\n      /**\n       * @summary Reference to main controller\n       * @type {PSV.Viewer}\n       * @readonly\n       */\n      this.psv = psv;\n      /**\n       * @summary Configuration holder\n       * @type {PSV.Options}\n       * @readonly\n       */\n\n      this.config = psv.config;\n      /**\n       * @summary Properties holder\n       * @type {Object}\n       * @readonly\n       */\n\n      this.prop = psv.prop;\n    }\n    /**\n     * @summary Destroys the service\n     */\n\n    var _proto = AbstractService.prototype;\n    _proto.destroy = function destroy() {\n      delete this.psv;\n      delete this.config;\n      delete this.prop;\n    };\n    return AbstractService;\n  }();\n  var vector2 = new three.Vector2();\n  var vector3 = new three.Vector3();\n  var eulerZero = new three.Euler(0, 0, 0, 'ZXY');\n  /**\n   * @summary Collections of data converters for the current viewer\n   * @extends PSV.services.AbstractService\n   * @memberof PSV.services\n   */\n\n  var DataHelper = /*#__PURE__*/function (_AbstractService) {\n    _inheritsLoose(DataHelper, _AbstractService);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function DataHelper(psv) {\n      return _AbstractService.call(this, psv) || this;\n    }\n    /**\n     * @summary Converts vertical FOV to zoom level\n     * @param {number} fov\n     * @returns {number}\n     */\n\n    var _proto = DataHelper.prototype;\n    _proto.fovToZoomLevel = function fovToZoomLevel(fov) {\n      var temp = Math.round((fov - this.config.minFov) / (this.config.maxFov - this.config.minFov) * 100);\n      return temp - 2 * (temp - 50);\n    }\n    /**\n     * @summary Converts zoom level to vertical FOV\n     * @param {number} level\n     * @returns {number}\n     */;\n    _proto.zoomLevelToFov = function zoomLevelToFov(level) {\n      return this.config.maxFov + level / 100 * (this.config.minFov - this.config.maxFov);\n    }\n    /**\n     * @summary Convert vertical FOV to horizontal FOV\n     * @param {number} vFov\n     * @returns {number}\n     */;\n    _proto.vFovToHFov = function vFovToHFov(vFov) {\n      return three.MathUtils.radToDeg(2 * Math.atan(Math.tan(three.MathUtils.degToRad(vFov) / 2) * this.prop.aspect));\n    }\n    /**\n     * @summary Converts a speed into a duration from current position to a new position\n     * @param {string|number} value\n     * @param {number} angle\n     * @returns {number}\n     */;\n    _proto.speedToDuration = function speedToDuration(value, angle) {\n      if (!value || typeof value !== 'number') {\n        // desired radial speed\n        var speed = value ? parseSpeed(value) : this.config.autorotateSpeed; // compute duration\n\n        return angle / Math.abs(speed) * 1000;\n      } else {\n        return Math.abs(value);\n      }\n    }\n    /**\n     * @summary Converts pixel texture coordinates to spherical radians coordinates\n     * @param {PSV.Point} point\n     * @returns {PSV.Position}\n     * @throws {PSV.PSVError} when the current adapter does not support texture coordinates\n     */;\n    _proto.textureCoordsToSphericalCoords = function textureCoordsToSphericalCoords(point) {\n      var panoData = this.prop.panoData;\n      if (!panoData) {\n        throw new PSVError('Current adapter does not support texture coordinates.');\n      }\n      var relativeX = (point.x + panoData.croppedX) / panoData.fullWidth * Math.PI * 2;\n      var relativeY = (point.y + panoData.croppedY) / panoData.fullHeight * Math.PI;\n      var result = {\n        longitude: relativeX >= Math.PI ? relativeX - Math.PI : relativeX + Math.PI,\n        latitude: Math.PI / 2 - relativeY\n      }; // Apply panoData pose and sphereCorrection\n\n      if (!eulerZero.equals(this.psv.renderer.mesh.rotation) || !eulerZero.equals(this.psv.renderer.meshContainer.rotation)) {\n        this.sphericalCoordsToVector3(result, vector3);\n        vector3.applyEuler(this.psv.renderer.mesh.rotation);\n        vector3.applyEuler(this.psv.renderer.meshContainer.rotation);\n        return this.vector3ToSphericalCoords(vector3);\n      } else {\n        return result;\n      }\n    }\n    /**\n     * @summary Converts spherical radians coordinates to pixel texture coordinates\n     * @param {PSV.Position} position\n     * @returns {PSV.Point}\n     * @throws {PSV.PSVError} when the current adapter does not support texture coordinates\n     */;\n    _proto.sphericalCoordsToTextureCoords = function sphericalCoordsToTextureCoords(position) {\n      var panoData = this.prop.panoData;\n      if (!panoData) {\n        throw new PSVError('Current adapter does not support texture coordinates.');\n      } // Apply panoData pose and sphereCorrection\n\n      if (!eulerZero.equals(this.psv.renderer.mesh.rotation) || !eulerZero.equals(this.psv.renderer.meshContainer.rotation)) {\n        this.sphericalCoordsToVector3(position, vector3);\n        applyEulerInverse(vector3, this.psv.renderer.meshContainer.rotation);\n        applyEulerInverse(vector3, this.psv.renderer.mesh.rotation);\n        position = this.vector3ToSphericalCoords(vector3);\n      }\n      var relativeLong = position.longitude / Math.PI / 2 * panoData.fullWidth;\n      var relativeLat = position.latitude / Math.PI * panoData.fullHeight;\n      return {\n        x: Math.round(position.longitude < Math.PI ? relativeLong + panoData.fullWidth / 2 : relativeLong - panoData.fullWidth / 2) - panoData.croppedX,\n        y: Math.round(panoData.fullHeight / 2 - relativeLat) - panoData.croppedY\n      };\n    }\n    /**\n     * @summary Converts spherical radians coordinates to a THREE.Vector3\n     * @param {PSV.Position} position\n     * @param {external:THREE.Vector3} [vector]\n     * @returns {external:THREE.Vector3}\n     */;\n    _proto.sphericalCoordsToVector3 = function sphericalCoordsToVector3(position, vector) {\n      if (!vector) {\n        vector = new three.Vector3();\n      }\n      vector.x = SPHERE_RADIUS * -Math.cos(position.latitude) * Math.sin(position.longitude);\n      vector.y = SPHERE_RADIUS * Math.sin(position.latitude);\n      vector.z = SPHERE_RADIUS * Math.cos(position.latitude) * Math.cos(position.longitude);\n      return vector;\n    }\n    /**\n     * @summary Converts a THREE.Vector3 to spherical radians coordinates\n     * @param {external:THREE.Vector3} vector\n     * @returns {PSV.Position}\n     */;\n    _proto.vector3ToSphericalCoords = function vector3ToSphericalCoords(vector) {\n      var phi = Math.acos(vector.y / Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z));\n      var theta = Math.atan2(vector.x, vector.z);\n      return {\n        longitude: theta < 0 ? -theta : Math.PI * 2 - theta,\n        latitude: Math.PI / 2 - phi\n      };\n    }\n    /**\n     * @summary Converts position on the viewer to a THREE.Vector3\n     * @param {PSV.Point} viewerPoint\n     * @returns {external:THREE.Vector3}\n     */;\n    _proto.viewerCoordsToVector3 = function viewerCoordsToVector3(viewerPoint) {\n      var sphereIntersect = this.getIntersections(viewerPoint).filter(function (i) {\n        return i.object.userData[MESH_USER_DATA];\n      });\n      if (sphereIntersect.length) {\n        return sphereIntersect[0].point;\n      } else {\n        return null;\n      }\n    }\n    /**\n     * @summary Converts a THREE.Vector3 to position on the viewer\n     * @param {external:THREE.Vector3} vector\n     * @returns {PSV.Point}\n     */;\n    _proto.vector3ToViewerCoords = function vector3ToViewerCoords(vector) {\n      var vectorClone = vector.clone();\n      vectorClone.project(this.psv.renderer.camera);\n      return {\n        x: Math.round((vectorClone.x + 1) / 2 * this.prop.size.width),\n        y: Math.round((1 - vectorClone.y) / 2 * this.prop.size.height)\n      };\n    }\n    /**\n     * @summary Converts spherical radians coordinates to position on the viewer\n     * @param {PSV.Position} position\n     * @returns {PSV.Point}\n     */;\n    _proto.sphericalCoordsToViewerCoords = function sphericalCoordsToViewerCoords(position) {\n      return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(position, vector3));\n    }\n    /**\n     * @summary Returns intersections with objects in the scene\n     * @param {PSV.Point} viewerPoint\n     * @return {external:THREE.Intersection[]}\n     */;\n    _proto.getIntersections = function getIntersections(viewerPoint) {\n      vector2.x = 2 * viewerPoint.x / this.prop.size.width - 1;\n      vector2.y = -2 * viewerPoint.y / this.prop.size.height + 1;\n      this.psv.renderer.raycaster.setFromCamera(vector2, this.psv.renderer.camera);\n      return this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children, true).filter(function (i) {\n        return !!i.object.userData;\n      });\n    }\n    /**\n     * @summary Converts x/y to latitude/longitude if present and ensure boundaries\n     * @param {PSV.ExtendedPosition} position\n     * @returns {PSV.Position}\n     */;\n    _proto.cleanPosition = function cleanPosition(position) {\n      if (position.x !== undefined && position.y !== undefined) {\n        return this.textureCoordsToSphericalCoords(position);\n      } else {\n        return {\n          longitude: parseAngle(position.longitude),\n          latitude: parseAngle(position.latitude, !this.prop.littlePlanet)\n        };\n      }\n    }\n    /**\n     * @summary Ensure a SphereCorrection object is valid\n     * @param {PSV.SphereCorrection} sphereCorrection\n     * @returns {PSV.SphereCorrection}\n     */;\n    _proto.cleanSphereCorrection = function cleanSphereCorrection(sphereCorrection) {\n      return {\n        pan: parseAngle((sphereCorrection == null ? void 0 : sphereCorrection.pan) || 0),\n        tilt: parseAngle((sphereCorrection == null ? void 0 : sphereCorrection.tilt) || 0, true),\n        roll: parseAngle((sphereCorrection == null ? void 0 : sphereCorrection.roll) || 0, true, false)\n      };\n    }\n    /**\n     * @summary Parse the pose angles of the pano data\n     * @param {PSV.PanoData} panoData\n     * @returns {PSV.SphereCorrection}\n     */;\n    _proto.cleanPanoramaPose = function cleanPanoramaPose(panoData) {\n      return {\n        pan: three.MathUtils.degToRad((panoData == null ? void 0 : panoData.poseHeading) || 0),\n        tilt: three.MathUtils.degToRad((panoData == null ? void 0 : panoData.posePitch) || 0),\n        roll: three.MathUtils.degToRad((panoData == null ? void 0 : panoData.poseRoll) || 0)\n      };\n    };\n    return DataHelper;\n  }(AbstractService);\n  var gestureIcon = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\"><path fill=\\\"currentColor\\\" d=\\\"M33.38 33.2a1.96 1.96 0 0 0 1.5-3.23 10.61 10.61 0 0 1 7.18-17.51c.7-.06 1.31-.49 1.61-1.12a13.02 13.02 0 0 1 11.74-7.43c7.14 0 12.96 5.8 12.96 12.9 0 3.07-1.1 6.05-3.1 8.38-.7.82-.61 2.05.21 2.76.83.7 2.07.6 2.78-.22a16.77 16.77 0 0 0 4.04-10.91C72.3 7.54 64.72 0 55.4 0a16.98 16.98 0 0 0-14.79 8.7 14.6 14.6 0 0 0-12.23 14.36c0 3.46 1.25 6.82 3.5 9.45.4.45.94.69 1.5.69m45.74 43.55a22.13 22.13 0 0 1-5.23 12.4c-4 4.55-9.53 6.86-16.42 6.86-12.6 0-20.1-10.8-20.17-10.91a1.82 1.82 0 0 0-.08-.1c-5.3-6.83-14.55-23.82-17.27-28.87-.05-.1 0-.21.02-.23a6.3 6.3 0 0 1 8.24 1.85l9.38 12.59a1.97 1.97 0 0 0 3.54-1.17V25.34a4 4 0 0 1 1.19-2.87 3.32 3.32 0 0 1 2.4-.95c1.88.05 3.4 1.82 3.4 3.94v24.32a1.96 1.96 0 0 0 3.93 0v-33.1a3.5 3.5 0 0 1 7 0v35.39a1.96 1.96 0 0 0 3.93 0v-.44c.05-2.05 1.6-3.7 3.49-3.7 1.93 0 3.5 1.7 3.5 3.82v5.63c0 .24.04.48.13.71l.1.26a1.97 1.97 0 0 0 3.76-.37c.33-1.78 1.77-3.07 3.43-3.07 1.9 0 3.45 1.67 3.5 3.74l-1.77 18.1zM77.39 51c-1.25 0-2.45.32-3.5.9v-.15c0-4.27-3.33-7.74-7.42-7.74-1.26 0-2.45.33-3.5.9V16.69a7.42 7.42 0 0 0-14.85 0v1.86a7 7 0 0 0-3.28-.94 7.21 7.21 0 0 0-5.26 2.07 7.92 7.92 0 0 0-2.38 5.67v37.9l-5.83-7.82a10.2 10.2 0 0 0-13.35-2.92 4.1 4.1 0 0 0-1.53 5.48C20 64.52 28.74 80.45 34.07 87.34c.72 1.04 9.02 12.59 23.4 12.59 7.96 0 14.66-2.84 19.38-8.2a26.06 26.06 0 0 0 6.18-14.6l1.78-18.2v-.2c0-4.26-3.32-7.73-7.42-7.73z\\\"/><!--Created by AomAm from the Noun Project--></svg>\\n\";\n  var mousewheelIcon = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"10 17 79 79\\\"><path fill=\\\"currentColor\\\" d=\\\"M38.1 29.27c-.24 0-.44.2-.44.45v10.7a.45.45 0 00.9 0v-10.7c0-.25-.2-.45-.45-.45zm10.2 26.66a11.54 11.54 0 01-8.48-6.14.45.45 0 10-.8.41 12.45 12.45 0 009.22 6.62.45.45 0 00.07-.9zm24.55-13.08a23.04 23.04 0 00-22.56-23v7.07l-.01.05a2.83 2.83 0 012.39 2.78v14.03l.09-.02h8.84v-9.22a.45.45 0 11.9 0v9.22h10.35v-.9zm0 27.33V44.66H62.5c-.02 2.01-.52 4-1.47 5.76a.45.45 0 01-.61.18.45.45 0 01-.19-.61 11.54 11.54 0 001.36-5.33h-8.83l-.1-.01a2.83 2.83 0 01-2.83 2.84h-.04-.04a2.83 2.83 0 01-2.83-2.83v-14.9a2.82 2.82 0 012.47-2.8v-7.11a23.04 23.04 0 00-22.57 23v.91h14.72V29.88a8.2 8.2 0 015.02-7.57c.22-.1.5.01.59.24.1.23-.01.5-.24.6a7.3 7.3 0 00-4.47 6.73v13.88h3.9a.45.45 0 110 .9h-3.9v.15a7.32 7.32 0 0011.23 6.17.45.45 0 01.49.76 8.22 8.22 0 01-12.62-6.93v-.15H26.82v25.52a23.04 23.04 0 0023.01 23.01 23.04 23.04 0 0023.02-23.01zm1.8-27.33v27.33A24.85 24.85 0 0149.84 95a24.85 24.85 0 01-24.82-24.82V42.85a24.85 24.85 0 0124.82-24.82 24.85 24.85 0 0124.83 24.82zM57.98 29.88v9.36a.45.45 0 11-.9 0v-9.36a7.28 7.28 0 00-3.4-6.17.45.45 0 01.49-.76 8.18 8.18 0 013.8 6.93z\\\"/><!-- Created by Icon Island from the Noun Project --></svg>\\n\";\n  var IDLE = 0;\n  var MOVING = 1;\n  var INERTIA = 2;\n  /**\n   * @summary Events handler\n   * @extends PSV.services.AbstractService\n   * @memberof PSV.services\n   */\n\n  var EventsHandler = /*#__PURE__*/function (_AbstractService) {\n    _inheritsLoose(EventsHandler, _AbstractService);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function EventsHandler(psv) {\n      var _this;\n      _this = _AbstractService.call(this, psv) || this;\n      /**\n       * @summary Internal properties\n       * @member {Object}\n       * @property {number} moveThreshold - computed threshold based on device pixel ratio\n       * @property {number} step\n       * @property {boolean} mousedown - before moving past the threshold\n       * @property {number} startMouseX - start x position of the click/touch\n       * @property {number} startMouseY - start y position of the click/touch\n       * @property {number} mouseX - current x position of the cursor\n       * @property {number} mouseY - current y position of the cursor\n       * @property {number[][]} mouseHistory - list of latest positions of the cursor, [time, x, y]\n       * @property {number} pinchDist - distance between fingers when zooming\n       * @property {PressHandler} keyHandler\n       * @property {boolean} ctrlKeyDown - when the Ctrl key is pressed\n       * @property {PSV.ClickData} dblclickData - temporary storage of click data between two clicks\n       * @property {number} dblclickTimeout - timeout id for double click\n       * @property {number} twofingersTimeout - timeout id for \"two fingers\" overlay\n       * @property {number} ctrlZoomTimeout - timeout id for \"ctrol zoom\" overlay\n       * @protected\n       */\n\n      _this.state = {\n        moveThreshold: MOVE_THRESHOLD * SYSTEM.pixelRatio,\n        keyboardEnabled: false,\n        step: IDLE,\n        mousedown: false,\n        startMouseX: 0,\n        startMouseY: 0,\n        mouseX: 0,\n        mouseY: 0,\n        mouseHistory: [],\n        pinchDist: 0,\n        keyHandler: new PressHandler(),\n        ctrlKeyDown: false,\n        dblclickData: null,\n        dblclickTimeout: null,\n        longtouchTimeout: null,\n        twofingersTimeout: null,\n        ctrlZoomTimeout: null\n      };\n      /**\n       * @summary Throttled wrapper of {@link PSV.Viewer#autoSize}\n       * @type {Function}\n       * @private\n       */\n\n      _this.__onResize = throttle(function () {\n        return _this.psv.autoSize();\n      }, 50);\n      return _this;\n    }\n    /**\n     * @summary Initializes event handlers\n     * @protected\n     */\n\n    var _proto = EventsHandler.prototype;\n    _proto.init = function init() {\n      window.addEventListener('resize', this);\n      window.addEventListener('keydown', this, {\n        passive: false\n      });\n      window.addEventListener('keyup', this);\n      this.psv.container.addEventListener('mousedown', this);\n      window.addEventListener('mousemove', this, {\n        passive: false\n      });\n      window.addEventListener('mouseup', this);\n      this.psv.container.addEventListener('touchstart', this, {\n        passive: false\n      });\n      window.addEventListener('touchmove', this, {\n        passive: false\n      });\n      window.addEventListener('touchend', this, {\n        passive: false\n      });\n      this.psv.container.addEventListener(SYSTEM.mouseWheelEvent, this, {\n        passive: false\n      });\n      if (SYSTEM.fullscreenEvent) {\n        document.addEventListener(SYSTEM.fullscreenEvent, this);\n      }\n    }\n    /**\n     * @override\n     */;\n    _proto.destroy = function destroy() {\n      window.removeEventListener('resize', this);\n      window.removeEventListener('keydown', this);\n      window.removeEventListener('keyup', this);\n      this.psv.container.removeEventListener('mousedown', this);\n      window.removeEventListener('mousemove', this);\n      window.removeEventListener('mouseup', this);\n      this.psv.container.removeEventListener('touchstart', this);\n      window.removeEventListener('touchmove', this);\n      window.removeEventListener('touchend', this);\n      this.psv.container.removeEventListener(SYSTEM.mouseWheelEvent, this);\n      if (SYSTEM.fullscreenEvent) {\n        document.removeEventListener(SYSTEM.fullscreenEvent, this);\n      }\n      clearTimeout(this.state.dblclickTimeout);\n      clearTimeout(this.state.longtouchTimeout);\n      clearTimeout(this.state.twofingersTimeout);\n      clearTimeout(this.state.ctrlZoomTimeout);\n      delete this.state;\n      _AbstractService.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} evt\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(evt) {\n      /* eslint-disable */\n      switch (evt.type) {\n        // @formatter:off\n        case 'resize':\n          this.__onResize();\n          break;\n        case 'keydown':\n          this.__onKeyDown(evt);\n          break;\n        case 'keyup':\n          this.__onKeyUp();\n          break;\n        case 'mousemove':\n          this.__onMouseMove(evt);\n          break;\n        case 'mouseup':\n          this.__onMouseUp(evt);\n          break;\n        case 'touchmove':\n          this.__onTouchMove(evt);\n          break;\n        case 'touchend':\n          this.__onTouchEnd(evt);\n          break;\n        case SYSTEM.fullscreenEvent:\n          this.__fullscreenToggled();\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n\n      if (!getClosest(evt.target, '.psv--capture-event')) {\n        /* eslint-disable */\n        switch (evt.type) {\n          // @formatter:off\n          case 'mousedown':\n            this.__onMouseDown(evt);\n            break;\n          case 'touchstart':\n            this.__onTouchStart(evt);\n            break;\n          case SYSTEM.mouseWheelEvent:\n            this.__onMouseWheel(evt);\n            break;\n          // @formatter:on\n        }\n        /* eslint-enable */\n      }\n    }\n    /**\n     * @summary Enables the keyboard controls\n     * @protected\n     */;\n    _proto.enableKeyboard = function enableKeyboard() {\n      this.state.keyboardEnabled = true;\n    }\n    /**\n     * @summary Disables the keyboard controls\n     * @protected\n     */;\n    _proto.disableKeyboard = function disableKeyboard() {\n      this.state.keyboardEnabled = false;\n    }\n    /**\n     * @summary Handles keyboard events\n     * @param {KeyboardEvent} e\n     * @private\n     */;\n    _proto.__onKeyDown = function __onKeyDown(e) {\n      if (this.config.mousewheelCtrlKey) {\n        this.state.ctrlKeyDown = e.key === KEY_CODES.Control;\n        if (this.state.ctrlKeyDown) {\n          clearTimeout(this.state.ctrlZoomTimeout);\n          this.psv.overlay.hide(IDS.CTRL_ZOOM);\n        }\n      }\n      var e2 = this.psv.trigger(EVENTS.KEY_PRESS, e.key);\n      if (e2.isDefaultPrevented()) {\n        return;\n      }\n      if (!this.state.keyboardEnabled) {\n        return;\n      }\n      var action = this.config.keyboard[e.key];\n      if (action === ACTIONS.TOGGLE_AUTOROTATE) {\n        this.psv.toggleAutorotate();\n        e.preventDefault();\n      } else if (action && !this.state.keyHandler.time) {\n        if (action !== ACTIONS.ZOOM_IN && action !== ACTIONS.ZOOM_OUT) {\n          this.psv.__stopAll();\n        }\n        /* eslint-disable */\n\n        switch (action) {\n          // @formatter:off\n          case ACTIONS.ROTATE_LAT_UP:\n            this.psv.dynamics.position.roll({\n              latitude: false\n            });\n            break;\n          case ACTIONS.ROTATE_LAT_DOWN:\n            this.psv.dynamics.position.roll({\n              latitude: true\n            });\n            break;\n          case ACTIONS.ROTATE_LONG_RIGHT:\n            this.psv.dynamics.position.roll({\n              longitude: false\n            });\n            break;\n          case ACTIONS.ROTATE_LONG_LEFT:\n            this.psv.dynamics.position.roll({\n              longitude: true\n            });\n            break;\n          case ACTIONS.ZOOM_IN:\n            this.psv.dynamics.zoom.roll(false);\n            break;\n          case ACTIONS.ZOOM_OUT:\n            this.psv.dynamics.zoom.roll(true);\n            break;\n          // @formatter:on\n        }\n        /* eslint-enable */\n\n        this.state.keyHandler.down();\n        e.preventDefault();\n      }\n    }\n    /**\n     * @summary Handles keyboard events\n     * @private\n     */;\n    _proto.__onKeyUp = function __onKeyUp() {\n      var _this2 = this;\n      this.state.ctrlKeyDown = false;\n      if (!this.state.keyboardEnabled) {\n        return;\n      }\n      this.state.keyHandler.up(function () {\n        _this2.psv.dynamics.position.stop();\n        _this2.psv.dynamics.zoom.stop();\n        _this2.psv.resetIdleTimer();\n      });\n    }\n    /**\n     * @summary Handles mouse down events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseDown = function __onMouseDown(evt) {\n      this.state.mousedown = true;\n      this.state.startMouseX = evt.clientX;\n      this.state.startMouseY = evt.clientY;\n    }\n    /**\n     * @summary Handles mouse up events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseUp = function __onMouseUp(evt) {\n      if (this.state.mousedown || this.state.step === MOVING) {\n        this.__stopMove(evt.clientX, evt.clientY, evt.target, evt.button === 2);\n      }\n    }\n    /**\n     * @summary Handles mouse move events\n     * @param {MouseEvent} evt\n     * @private\n     */;\n    _proto.__onMouseMove = function __onMouseMove(evt) {\n      if (this.config.mousemove && (this.state.mousedown || this.state.step === MOVING)) {\n        evt.preventDefault();\n        this.__move(evt.clientX, evt.clientY);\n      }\n      if (!isEmpty(this.prop.objectsObservers) && hasParent(evt.target, this.psv.container)) {\n        var viewerPos = getPosition(this.psv.container);\n        var viewerPoint = {\n          x: evt.clientX - viewerPos.left,\n          y: evt.clientY - viewerPos.top\n        };\n        var intersections = this.psv.dataHelper.getIntersections(viewerPoint);\n        var emit = function emit(observer, key, type) {\n          observer.listener.handleEvent(new CustomEvent(type, {\n            detail: {\n              originalEvent: evt,\n              object: observer.object,\n              data: observer.object.userData[key],\n              viewerPoint: viewerPoint\n            }\n          }));\n        };\n        each(this.prop.objectsObservers, function (observer, key) {\n          var intersection = intersections.find(function (i) {\n            return i.object.userData[key];\n          });\n          if (intersection) {\n            if (observer.object && intersection.object !== observer.object) {\n              emit(observer, key, OBJECT_EVENTS.LEAVE_OBJECT);\n              delete observer.object;\n            }\n            if (!observer.object) {\n              observer.object = intersection.object;\n              emit(observer, key, OBJECT_EVENTS.ENTER_OBJECT);\n            } else {\n              emit(observer, key, OBJECT_EVENTS.HOVER_OBJECT);\n            }\n          } else if (observer.object) {\n            emit(observer, key, OBJECT_EVENTS.LEAVE_OBJECT);\n            delete observer.object;\n          }\n        });\n      }\n    }\n    /**\n     * @summary Handles touch events\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__onTouchStart = function __onTouchStart(evt) {\n      var _this3 = this;\n      if (evt.touches.length === 1) {\n        this.state.mousedown = true;\n        this.state.startMouseX = evt.touches[0].clientX;\n        this.state.startMouseY = evt.touches[0].clientY;\n        if (!this.prop.longtouchTimeout) {\n          this.prop.longtouchTimeout = setTimeout(function () {\n            var touch = evt.touches[0];\n            _this3.__stopMove(touch.clientX, touch.clientY, touch.target, true);\n            _this3.prop.longtouchTimeout = null;\n          }, LONGTOUCH_DELAY);\n        }\n      } else if (evt.touches.length === 2) {\n        this.state.mousedown = false;\n        this.__cancelLongTouch();\n        if (this.config.mousemove) {\n          this.__cancelTwoFingersOverlay();\n          this.__startMoveZoom(evt);\n          evt.preventDefault();\n        }\n      }\n    }\n    /**\n     * @summary Handles touch events\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__onTouchEnd = function __onTouchEnd(evt) {\n      this.__cancelLongTouch();\n      if (this.state.mousedown || this.state.step === MOVING) {\n        evt.preventDefault();\n        this.__cancelTwoFingersOverlay();\n        if (evt.touches.length === 1) {\n          this.__stopMove(this.state.mouseX, this.state.mouseY);\n        } else if (evt.touches.length === 0) {\n          var touch = evt.changedTouches[0];\n          this.__stopMove(touch.clientX, touch.clientY, touch.target);\n        }\n      }\n    }\n    /**\n     * @summary Handles touch move events\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__onTouchMove = function __onTouchMove(evt) {\n      var _this4 = this;\n      this.__cancelLongTouch();\n      if (!this.config.mousemove) {\n        return;\n      }\n      if (evt.touches.length === 1) {\n        if (this.config.touchmoveTwoFingers) {\n          if (this.state.mousedown && !this.prop.twofingersTimeout) {\n            this.prop.twofingersTimeout = setTimeout(function () {\n              _this4.psv.overlay.show({\n                id: IDS.TWO_FINGERS,\n                image: gestureIcon,\n                text: _this4.config.lang.twoFingers\n              });\n            }, TWOFINGERSOVERLAY_DELAY);\n          }\n        } else if (this.state.mousedown || this.state.step === MOVING) {\n          evt.preventDefault();\n          var touch = evt.touches[0];\n          this.__move(touch.clientX, touch.clientY);\n        }\n      } else {\n        this.__moveZoom(evt);\n        this.__cancelTwoFingersOverlay();\n      }\n    }\n    /**\n     * @summary Cancel the long touch timer if any\n     * @private\n     */;\n    _proto.__cancelLongTouch = function __cancelLongTouch() {\n      if (this.prop.longtouchTimeout) {\n        clearTimeout(this.prop.longtouchTimeout);\n        this.prop.longtouchTimeout = null;\n      }\n    }\n    /**\n     * @summary Cancel the two fingers overlay timer if any\n     * @private\n     */;\n    _proto.__cancelTwoFingersOverlay = function __cancelTwoFingersOverlay() {\n      if (this.config.touchmoveTwoFingers) {\n        if (this.prop.twofingersTimeout) {\n          clearTimeout(this.prop.twofingersTimeout);\n          this.prop.twofingersTimeout = null;\n        }\n        this.psv.overlay.hide(IDS.TWO_FINGERS);\n      }\n    }\n    /**\n     * @summary Handles mouse wheel events\n     * @param {WheelEvent} evt\n     * @private\n     */;\n    _proto.__onMouseWheel = function __onMouseWheel(evt) {\n      var _this5 = this;\n      if (!this.config.mousewheel) {\n        return;\n      }\n      if (this.config.mousewheelCtrlKey && !this.state.ctrlKeyDown) {\n        this.psv.overlay.show({\n          id: IDS.CTRL_ZOOM,\n          image: mousewheelIcon,\n          text: this.config.lang.ctrlZoom\n        });\n        clearTimeout(this.state.ctrlZoomTimeout);\n        this.state.ctrlZoomTimeout = setTimeout(function () {\n          return _this5.psv.overlay.hide(IDS.CTRL_ZOOM);\n        }, CTRLZOOM_TIMEOUT);\n        return;\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n      var delta = normalizeWheel(evt).spinY * 5 * this.config.zoomSpeed;\n      if (delta !== 0) {\n        this.psv.dynamics.zoom.step(-delta, 5);\n      }\n    }\n    /**\n     * @summary Handles fullscreen events\n     * @param {boolean} [force] force state\n     * @fires PSV.fullscreen-updated\n     * @package\n     */;\n    _proto.__fullscreenToggled = function __fullscreenToggled(force) {\n      this.prop.fullscreen = force !== undefined ? force : isFullscreenEnabled(this.psv.container);\n      if (this.config.keyboard) {\n        if (this.prop.fullscreen) {\n          this.psv.startKeyboardControl();\n        } else {\n          this.psv.stopKeyboardControl();\n        }\n      }\n      this.psv.trigger(EVENTS.FULLSCREEN_UPDATED, this.prop.fullscreen);\n    }\n    /**\n     * @summary Resets all state variables\n     * @private\n     */;\n    _proto.__resetMove = function __resetMove() {\n      this.state.step = IDLE;\n      this.state.mousedown = false;\n      this.state.mouseX = 0;\n      this.state.mouseY = 0;\n      this.state.startMouseX = 0;\n      this.state.startMouseY = 0;\n      this.state.mouseHistory.length = 0;\n    }\n    /**\n     * @summary Initializes the combines move and zoom\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__startMoveZoom = function __startMoveZoom(evt) {\n      this.psv.__stopAll();\n      this.__resetMove();\n      var p1 = {\n        x: evt.touches[0].clientX,\n        y: evt.touches[0].clientY\n      };\n      var p2 = {\n        x: evt.touches[1].clientX,\n        y: evt.touches[1].clientY\n      };\n      this.state.step = MOVING;\n      this.state.pinchDist = distance(p1, p2);\n      this.state.mouseX = (p1.x + p2.x) / 2;\n      this.state.mouseY = (p1.y + p2.y) / 2;\n      this.__logMouseMove(this.state.mouseX, this.state.mouseY);\n    }\n    /**\n     * @summary Stops the movement\n     * @description If the move threshold was not reached a click event is triggered, otherwise an animation is launched to simulate inertia\n     * @param {int} clientX\n     * @param {int} clientY\n     * @param {EventTarget} [target]\n     * @param {boolean} [rightclick=false]\n     * @private\n     */;\n    _proto.__stopMove = function __stopMove(clientX, clientY, target, rightclick) {\n      if (target === void 0) {\n        target = null;\n      }\n      if (rightclick === void 0) {\n        rightclick = false;\n      }\n      if (this.state.step === MOVING) {\n        if (this.config.moveInertia) {\n          this.__logMouseMove(clientX, clientY);\n          this.__stopMoveInertia(clientX, clientY);\n        } else {\n          this.__resetMove();\n          this.psv.resetIdleTimer();\n        }\n      } else if (this.state.mousedown) {\n        this.psv.stopAnimation();\n        this.__click(clientX, clientY, target, rightclick);\n        this.__resetMove();\n        this.psv.resetIdleTimer();\n      }\n    }\n    /**\n     * @summary Performs an animation to simulate inertia when the movement stops\n     * @param {int} clientX\n     * @param {int} clientY\n     * @private\n     */;\n    _proto.__stopMoveInertia = function __stopMoveInertia(clientX, clientY) {\n      var _this6 = this;\n\n      // get direction at end of movement\n      var curve = new three.SplineCurve(this.state.mouseHistory.map(function (_ref) {\n        var x = _ref[1],\n          y = _ref[2];\n        return new three.Vector2(x, y);\n      }));\n      var direction = curve.getTangent(1); // average speed\n\n      var speed = this.state.mouseHistory.slice(1).reduce(function (_ref2, curr) {\n        var total = _ref2.total,\n          prev = _ref2.prev;\n        return {\n          total: total + distance({\n            x: prev[1],\n            y: prev[2]\n          }, {\n            x: curr[1],\n            y: curr[2]\n          }) / (curr[0] - prev[0]),\n          prev: curr\n        };\n      }, {\n        total: 0,\n        prev: this.state.mouseHistory[0]\n      }).total / this.state.mouseHistory.length;\n      if (!speed) {\n        this.__resetMove();\n        this.psv.resetIdleTimer();\n        return;\n      }\n      this.state.step = INERTIA;\n      var currentClientX = clientX;\n      var currentClientY = clientY;\n      this.prop.animationPromise = new Animation({\n        properties: {\n          speed: {\n            start: speed,\n            end: 0\n          }\n        },\n        duration: 1000,\n        easing: 'outQuad',\n        onTick: function onTick(properties) {\n          // 3 is a magic number\n          currentClientX += properties.speed * direction.x * 3 * SYSTEM.pixelRatio;\n          currentClientY += properties.speed * direction.y * 3 * SYSTEM.pixelRatio;\n          _this6.__applyMove(currentClientX, currentClientY);\n        }\n      });\n      this.prop.animationPromise.then(function (done) {\n        _this6.prop.animationPromise = null;\n        if (done) {\n          _this6.__resetMove();\n          _this6.psv.resetIdleTimer();\n        }\n      });\n    }\n    /**\n     * @summary Triggers an event with all coordinates when a simple click is performed\n     * @param {int} clientX\n     * @param {int} clientY\n     * @param {EventTarget} target\n     * @param {boolean} [rightclick=false]\n     * @fires PSV.click\n     * @fires PSV.dblclick\n     * @private\n     */;\n    _proto.__click = function __click(clientX, clientY, target, rightclick) {\n      var _this7 = this;\n      if (rightclick === void 0) {\n        rightclick = false;\n      }\n      var boundingRect = this.psv.container.getBoundingClientRect();\n      /**\n       * @type {PSV.ClickData}\n       */\n\n      var data = {\n        rightclick: rightclick,\n        target: target,\n        clientX: clientX,\n        clientY: clientY,\n        viewerX: clientX - boundingRect.left,\n        viewerY: clientY - boundingRect.top\n      };\n      var intersections = this.psv.dataHelper.getIntersections({\n        x: data.viewerX,\n        y: data.viewerY\n      });\n      var sphereIntersection = intersections.find(function (i) {\n        return i.object.userData[MESH_USER_DATA];\n      });\n      if (sphereIntersection) {\n        var sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(sphereIntersection.point);\n        data.longitude = sphericalCoords.longitude;\n        data.latitude = sphericalCoords.latitude;\n        data.objects = intersections.map(function (i) {\n          return i.object;\n        }).filter(function (o) {\n          return !o.userData[MESH_USER_DATA];\n        });\n        try {\n          var textureCoords = this.psv.dataHelper.sphericalCoordsToTextureCoords(data);\n          data.textureX = textureCoords.x;\n          data.textureY = textureCoords.y;\n        } catch (e) {\n          data.textureX = NaN;\n          data.textureY = NaN;\n        }\n        if (!this.state.dblclickTimeout) {\n          this.psv.trigger(EVENTS.CLICK, data);\n          this.state.dblclickData = clone(data);\n          this.state.dblclickTimeout = setTimeout(function () {\n            _this7.state.dblclickTimeout = null;\n            _this7.state.dblclickData = null;\n          }, DBLCLICK_DELAY);\n        } else {\n          if (Math.abs(this.state.dblclickData.clientX - data.clientX) < this.state.moveThreshold && Math.abs(this.state.dblclickData.clientY - data.clientY) < this.state.moveThreshold) {\n            this.psv.trigger(EVENTS.DOUBLE_CLICK, this.state.dblclickData);\n          }\n          clearTimeout(this.state.dblclickTimeout);\n          this.state.dblclickTimeout = null;\n          this.state.dblclickData = null;\n        }\n      }\n    }\n    /**\n     * @summary Starts moving when crossing moveThreshold and performs movement\n     * @param {int} clientX\n     * @param {int} clientY\n     * @private\n     */;\n    _proto.__move = function __move(clientX, clientY) {\n      if (this.state.mousedown && (Math.abs(clientX - this.state.startMouseX) >= this.state.moveThreshold || Math.abs(clientY - this.state.startMouseY) >= this.state.moveThreshold)) {\n        this.psv.__stopAll();\n        this.__resetMove();\n        this.state.step = MOVING;\n        this.state.mouseX = clientX;\n        this.state.mouseY = clientY;\n        this.__logMouseMove(clientX, clientY);\n      } else if (this.state.step === MOVING) {\n        this.__applyMove(clientX, clientY);\n        this.__logMouseMove(clientX, clientY);\n      }\n    }\n    /**\n     * @summary Raw method for movement, called from mouse event and move inertia\n     * @param {int} clientX\n     * @param {int} clientY\n     * @private\n     */;\n    _proto.__applyMove = function __applyMove(clientX, clientY) {\n      var rotation = {\n        longitude: (clientX - this.state.mouseX) / this.prop.size.width * this.config.moveSpeed * three.MathUtils.degToRad(this.prop.littlePlanet ? 90 : this.prop.hFov),\n        latitude: (clientY - this.state.mouseY) / this.prop.size.height * this.config.moveSpeed * three.MathUtils.degToRad(this.prop.littlePlanet ? 90 : this.prop.vFov)\n      };\n      var currentPosition = this.psv.getPosition();\n      this.psv.rotate({\n        longitude: currentPosition.longitude - rotation.longitude,\n        latitude: currentPosition.latitude + rotation.latitude\n      });\n      this.state.mouseX = clientX;\n      this.state.mouseY = clientY;\n    }\n    /**\n     * @summary Perfoms combined move and zoom\n     * @param {TouchEvent} evt\n     * @private\n     */;\n    _proto.__moveZoom = function __moveZoom(evt) {\n      if (this.state.step === MOVING) {\n        evt.preventDefault();\n        var p1 = {\n          x: evt.touches[0].clientX,\n          y: evt.touches[0].clientY\n        };\n        var p2 = {\n          x: evt.touches[1].clientX,\n          y: evt.touches[1].clientY\n        };\n        var p = distance(p1, p2);\n        var delta = (p - this.state.pinchDist) / SYSTEM.pixelRatio * this.config.zoomSpeed;\n        this.psv.zoom(this.psv.getZoomLevel() + delta);\n        this.__move((p1.x + p2.x) / 2, (p1.y + p2.y) / 2);\n        this.state.pinchDist = p;\n      }\n    }\n    /**\n     * @summary Stores each mouse position during a mouse move\n     * @description Positions older than \"INERTIA_WINDOW\" are removed<br>\n     *     Positions before a pause of \"INERTIA_WINDOW\" / 10 are removed\n     * @param {int} clientX\n     * @param {int} clientY\n     * @private\n     */;\n    _proto.__logMouseMove = function __logMouseMove(clientX, clientY) {\n      var now = Date.now();\n      var last = this.state.mouseHistory.length ? this.state.mouseHistory[this.state.mouseHistory.length - 1] : [0, -1, -1]; // avoid duplicates\n\n      if (last[1] === clientX && last[2] === clientY) {\n        last[0] = now;\n      } else if (now === last[0]) {\n        last[1] = clientX;\n        last[2] = clientY;\n      } else {\n        this.state.mouseHistory.push([now, clientX, clientY]);\n      }\n      var previous = null;\n      for (var i = 0; i < this.state.mouseHistory.length;) {\n        if (this.state.mouseHistory[i][0] < now - INERTIA_WINDOW) {\n          this.state.mouseHistory.splice(i, 1);\n        } else if (previous && this.state.mouseHistory[i][0] - previous > INERTIA_WINDOW / 10) {\n          this.state.mouseHistory.splice(0, i);\n          i = 0;\n          previous = this.state.mouseHistory[i][0];\n        } else {\n          previous = this.state.mouseHistory[i][0];\n          i++;\n        }\n      }\n    };\n    return EventsHandler;\n  }(AbstractService);\n\n  /**\n   * @summary Viewer and renderer\n   * @extends PSV.services.AbstractService\n   * @memberof PSV.services\n   */\n\n  var Renderer = /*#__PURE__*/function (_AbstractService) {\n    _inheritsLoose(Renderer, _AbstractService);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function Renderer(psv) {\n      var _this$mesh$userData;\n      var _this;\n      _this = _AbstractService.call(this, psv) || this;\n      /**\n       * @member {external:THREE.WebGLRenderer}\n       * @readonly\n       * @protected\n       */\n\n      _this.renderer = new three.WebGLRenderer({\n        alpha: true,\n        antialias: true\n      });\n      _this.renderer.setPixelRatio(SYSTEM.pixelRatio);\n      _this.renderer.domElement.className = 'psv-canvas';\n      /**\n       * @member {external:THREE.Scene}\n       * @readonly\n       * @protected\n       */\n\n      _this.scene = new three.Scene();\n      /**\n       * @member {external:THREE.PerspectiveCamera}\n       * @readonly\n       * @protected\n       */\n\n      _this.camera = new three.PerspectiveCamera(50, 16 / 9, 0.1, 2 * SPHERE_RADIUS);\n      /**\n       * @member {external:THREE.Mesh}\n       * @readonly\n       * @protected\n       */\n\n      _this.mesh = _this.psv.adapter.createMesh();\n      _this.mesh.userData = (_this$mesh$userData = {}, _this$mesh$userData[MESH_USER_DATA] = true, _this$mesh$userData);\n      /**\n       * @member {external:THREE.Group}\n       * @readonly\n       * @private\n       */\n\n      _this.meshContainer = new three.Group();\n      _this.meshContainer.add(_this.mesh);\n      _this.scene.add(_this.meshContainer);\n      /**\n       * @member {external:THREE.Raycaster}\n       * @readonly\n       * @protected\n       */\n\n      _this.raycaster = new three.Raycaster();\n      /**\n       * @member {number}\n       * @private\n       */\n\n      _this.timestamp = null;\n      /**\n       * @member {boolean}\n       * @private\n       */\n\n      _this.ready = false;\n      /**\n       * @member {HTMLElement}\n       * @readonly\n       * @package\n       */\n\n      _this.canvasContainer = document.createElement('div');\n      _this.canvasContainer.className = 'psv-canvas-container';\n      _this.canvasContainer.style.background = _this.psv.config.canvasBackground;\n      _this.canvasContainer.style.cursor = _this.psv.config.mousemove ? 'move' : 'default';\n      _this.canvasContainer.appendChild(_this.renderer.domElement);\n      _this.psv.container.appendChild(_this.canvasContainer);\n      psv.on(EVENTS.SIZE_UPDATED, _assertThisInitialized(_this));\n      psv.on(EVENTS.ZOOM_UPDATED, _assertThisInitialized(_this));\n      psv.on(EVENTS.POSITION_UPDATED, _assertThisInitialized(_this));\n      psv.on(EVENTS.CONFIG_CHANGED, _assertThisInitialized(_this));\n      _this.hide();\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Renderer.prototype;\n    _proto.destroy = function destroy() {\n      // cancel render loop\n      this.renderer.setAnimationLoop(null); // destroy ThreeJS view\n\n      this.__cleanTHREEScene(this.scene); // remove container\n\n      this.psv.container.removeChild(this.canvasContainer);\n      delete this.canvasContainer;\n      delete this.renderer;\n      delete this.scene;\n      delete this.camera;\n      delete this.mesh;\n      delete this.meshContainer;\n      delete this.raycaster;\n      _AbstractService.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} evt\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(evt) {\n      /* eslint-disable */\n      switch (evt.type) {\n        // @formatter:off\n        case EVENTS.SIZE_UPDATED:\n          this.__onSizeUpdated();\n          break;\n        case EVENTS.ZOOM_UPDATED:\n          this.__onZoomUpdated();\n          break;\n        case EVENTS.POSITION_UPDATED:\n          this.__onPositionUpdated();\n          break;\n        case EVENTS.CONFIG_CHANGED:\n          if (evt.args[0].includes('fisheye')) {\n            this.__onPositionUpdated();\n          }\n          if (evt.args[0].includes('mousemove')) {\n            this.canvasContainer.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\n          }\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @summary Hides the viewer\n     */;\n    _proto.hide = function hide() {\n      this.canvasContainer.style.opacity = 0;\n    }\n    /**\n     * @summary Shows the viewer\n     */;\n    _proto.show = function show() {\n      this.canvasContainer.style.opacity = 1;\n    }\n    /**\n     * @summary Updates the size of the renderer and the aspect of the camera\n     * @private\n     */;\n    _proto.__onSizeUpdated = function __onSizeUpdated() {\n      this.renderer.setSize(this.prop.size.width, this.prop.size.height);\n      this.camera.aspect = this.prop.aspect;\n      this.camera.updateProjectionMatrix();\n      this.prop.needsUpdate = true;\n    }\n    /**\n     * @summary Updates the fov of the camera\n     * @private\n     */;\n    _proto.__onZoomUpdated = function __onZoomUpdated() {\n      this.camera.fov = this.prop.vFov;\n      this.camera.updateProjectionMatrix();\n      this.prop.needsUpdate = true;\n    }\n    /**\n     * @summary Updates the position of the camera\n     * @private\n     */;\n    _proto.__onPositionUpdated = function __onPositionUpdated() {\n      this.camera.position.set(0, 0, 0);\n      this.camera.lookAt(this.prop.direction);\n      if (this.config.fisheye) {\n        this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye / 2).negate();\n      }\n      this.prop.needsUpdate = true;\n    }\n    /**\n     * @summary Main event loop, calls {@link render} if `prop.needsUpdate` is true\n     * @param {number} timestamp\n     * @fires PSV.before-render\n     * @private\n     */;\n    _proto.__renderLoop = function __renderLoop(timestamp) {\n      var elapsed = this.timestamp !== null ? timestamp - this.timestamp : 0;\n      this.timestamp = timestamp;\n      this.psv.trigger(EVENTS.BEFORE_RENDER, timestamp, elapsed);\n      each(this.psv.dynamics, function (d) {\n        return d.update(elapsed);\n      });\n      if (this.prop.idleTime > 0 && timestamp - this.prop.idleTime > this.config.autorotateDelay) {\n        this.psv.startAutorotate();\n      }\n      if (this.prop.needsUpdate) {\n        this.render();\n        this.prop.needsUpdate = false;\n      }\n    }\n    /**\n     * @summary Performs a render\n     * @description Do not call this method directly, instead call\n     * {@link PSV.Viewer#needsUpdate} on {@link PSV.event:before-render}.\n     * @fires PSV.render\n     */;\n    _proto.render = function render() {\n      this.renderer.render(this.scene, this.camera);\n      this.psv.trigger(EVENTS.RENDER);\n    }\n    /**\n     * @summary Applies the texture to the scene, creates the scene if needed\n     * @param {PSV.TextureData} textureData\n     * @fires PSV.panorama-loaded\n     * @package\n     */;\n    _proto.setTexture = function setTexture(textureData) {\n      var _this2 = this;\n      this.prop.panoData = textureData.panoData;\n      this.psv.adapter.setTexture(this.mesh, textureData);\n      if (!this.ready) {\n        this.renderer.setAnimationLoop(function (t) {\n          return _this2.__renderLoop(t);\n        });\n        this.ready = true;\n      }\n      this.psv.needsUpdate();\n      this.psv.trigger(EVENTS.PANORAMA_LOADED, textureData);\n    }\n    /**\n     * @summary Applies the overlay to the mesh\n     * @param {PSV.TextureData} textureData\n     * @param {number} opacity\n     * @package\n     */;\n    _proto.setOverlay = function setOverlay(textureData, opacity) {\n      this.psv.adapter.setOverlay(this.mesh, textureData, opacity);\n      this.psv.needsUpdate();\n    }\n    /**\n     * @summary Apply a panorama data pose to a Mesh\n     * @param {PSV.PanoData} [panoData]\n     * @param {external:THREE.Mesh} [mesh=this.mesh]\n     * @package\n     */;\n    _proto.setPanoramaPose = function setPanoramaPose(panoData, mesh) {\n      if (mesh === void 0) {\n        mesh = this.mesh;\n      }\n\n      // By Google documentation the angles are applied on the camera in order : heading, pitch, roll\n      // here we apply the reverse transformation on the sphere\n      var cleanCorrection = this.psv.dataHelper.cleanPanoramaPose(panoData);\n      mesh.rotation.set(-cleanCorrection.tilt, -cleanCorrection.pan, -cleanCorrection.roll, 'ZXY');\n    }\n    /**\n     * @summary Apply a SphereCorrection to a Mesh\n     * @param {PSV.SphereCorrection} [sphereCorrection]\n     * @param {external:THREE.Mesh} [mesh=this.meshContainer]\n     * @package\n     */;\n    _proto.setSphereCorrection = function setSphereCorrection(sphereCorrection, mesh) {\n      if (mesh === void 0) {\n        mesh = this.meshContainer;\n      }\n      var cleanCorrection = this.psv.dataHelper.cleanSphereCorrection(sphereCorrection);\n      mesh.rotation.set(cleanCorrection.tilt, cleanCorrection.pan, cleanCorrection.roll, 'ZXY');\n    }\n    /**\n     * @summary Performs transition between the current and a new texture\n     * @param {PSV.TextureData} textureData\n     * @param {PSV.PanoramaOptions} options\n     * @returns {PSV.utils.Animation}\n     * @package\n     */;\n    _proto.transition = function transition(textureData, options) {\n      var _this3 = this;\n      var positionProvided = isExtendedPosition(options);\n      var zoomProvided = 'zoom' in options; // create temp group and new mesh, half size to be in \"front\" of the first one\n\n      var group = new three.Group();\n      var mesh = this.psv.adapter.createMesh(0.5);\n      this.psv.adapter.setTexture(mesh, textureData, true);\n      this.psv.adapter.setTextureOpacity(mesh, 0);\n      this.setPanoramaPose(textureData.panoData, mesh);\n      this.setSphereCorrection(options.sphereCorrection, group); // rotate the new sphere to make the target position face the camera\n\n      if (positionProvided) {\n        var cleanPosition = this.psv.dataHelper.cleanPosition(options);\n        var currentPosition = this.psv.getPosition(); // Longitude rotation along the vertical axis\n\n        var verticalAxis = new three.Vector3(0, 1, 0);\n        group.rotateOnWorldAxis(verticalAxis, cleanPosition.longitude - currentPosition.longitude); // Latitude rotation along the camera horizontal axis\n\n        var horizontalAxis = new three.Vector3(0, 1, 0).cross(this.camera.getWorldDirection(new three.Vector3())).normalize();\n        group.rotateOnWorldAxis(horizontalAxis, cleanPosition.latitude - currentPosition.latitude);\n      }\n      group.add(mesh);\n      this.scene.add(group);\n      var animation = new Animation({\n        properties: {\n          opacity: {\n            start: 0.0,\n            end: 1.0\n          },\n          zoom: zoomProvided ? {\n            start: this.psv.getZoomLevel(),\n            end: options.zoom\n          } : undefined\n        },\n        duration: options.transition,\n        easing: 'outCubic',\n        onTick: function onTick(properties) {\n          _this3.psv.adapter.setTextureOpacity(mesh, properties.opacity);\n          _this3.psv.adapter.setTextureOpacity(_this3.mesh, 1 - properties.opacity);\n          if (zoomProvided) {\n            _this3.psv.zoom(properties.zoom);\n          }\n          _this3.psv.needsUpdate();\n        }\n      });\n      animation.then(function (completed) {\n        if (completed) {\n          // remove temp sphere and transfer the texture to the main mesh\n          _this3.setTexture(textureData);\n          _this3.psv.adapter.setTextureOpacity(_this3.mesh, 1);\n          _this3.setPanoramaPose(textureData.panoData);\n          _this3.setSphereCorrection(options.sphereCorrection); // actually rotate the camera\n\n          if (positionProvided) {\n            _this3.psv.rotate(options);\n          }\n        } else {\n          _this3.psv.adapter.disposeTexture(textureData);\n        }\n        _this3.scene.remove(group);\n        mesh.geometry.dispose();\n        mesh.geometry = null;\n      });\n      return animation;\n    }\n    /**\n     * @summary Calls `dispose` on all objects and textures\n     * @param {external:THREE.Object3D} object\n     * @private\n     */;\n    _proto.__cleanTHREEScene = function __cleanTHREEScene(object) {\n      var _this4 = this;\n      object.traverse(function (item) {\n        if (item.geometry) {\n          item.geometry.dispose();\n        }\n        if (item.material) {\n          if (Array.isArray(item.material)) {\n            item.material.forEach(function (material) {\n              if (material.map) {\n                material.map.dispose();\n              }\n              material.dispose();\n            });\n          } else {\n            if (item.material.map) {\n              item.material.map.dispose();\n            }\n            item.material.dispose();\n          }\n        }\n        if (item.dispose && !(item instanceof three.Scene)) {\n          item.dispose();\n        }\n        if (item !== object) {\n          _this4.__cleanTHREEScene(item);\n        }\n      });\n    };\n    return Renderer;\n  }(AbstractService);\n\n  /**\n   * @summary Texture loader\n   * @extends PSV.services.AbstractService\n   * @memberof PSV.services\n   */\n\n  var TextureLoader = /*#__PURE__*/function (_AbstractService) {\n    _inheritsLoose(TextureLoader, _AbstractService);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function TextureLoader(psv) {\n      var _this;\n      _this = _AbstractService.call(this, psv) || this;\n      /**\n       * @summary THREE file loader\n       * @type {external:THREE:FileLoader}\n       * @private\n       */\n\n      _this.loader = new three.FileLoader();\n      _this.loader.setResponseType('blob');\n      if (_this.config.withCredentials) {\n        _this.loader.setWithCredentials(true);\n      }\n      if (_this.config.requestHeaders && typeof _this.config.requestHeaders === 'object') {\n        _this.loader.setRequestHeader(_this.config.requestHeaders);\n      }\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = TextureLoader.prototype;\n    _proto.destroy = function destroy() {\n      this.abortLoading();\n      _AbstractService.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Cancels current HTTP requests\n     * @package\n     */;\n    _proto.abortLoading = function abortLoading() {// noop implementation waiting for https://github.com/mrdoob/three.js/pull/23070\n    }\n    /**\n     * @summary Loads a Blob with FileLoader\n     * @param {string} url\n     * @param {function(number)} [onProgress]\n     * @returns {Promise<Blob>}\n     */;\n    _proto.loadFile = function loadFile(url, onProgress) {\n      var _this2 = this;\n      if (this.config.requestHeaders && typeof this.config.requestHeaders === 'function') {\n        this.loader.setRequestHeader(this.config.requestHeaders(url));\n      }\n      return new Promise(function (resolve, reject) {\n        var progress = 0;\n        onProgress == null ? void 0 : onProgress(progress);\n        _this2.loader.load(url, function (result) {\n          progress = 100;\n          onProgress == null ? void 0 : onProgress(progress);\n          resolve(result);\n        }, function (e) {\n          if (e.lengthComputable) {\n            var newProgress = e.loaded / e.total * 100;\n            if (newProgress > progress) {\n              progress = newProgress;\n              onProgress == null ? void 0 : onProgress(progress);\n            }\n          }\n        }, function (err) {\n          reject(err);\n        });\n      });\n    }\n    /**\n     * @summary Loads an Image using FileLoader to have progress events\n     * @param {string} url\n     * @param {function(number)} [onProgress]\n     * @returns {Promise<HTMLImageElement>}\n     */;\n    _proto.loadImage = function loadImage(url, onProgress) {\n      return this.loadFile(url, onProgress).then(function (result) {\n        return new Promise(function (resolve, reject) {\n          var img = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n          img.onload = function () {\n            URL.revokeObjectURL(img.src);\n            resolve(img);\n          };\n          img.onerror = reject;\n          img.src = URL.createObjectURL(result);\n        });\n      });\n    }\n    /**\n     * @summary Preload a panorama file without displaying it\n     * @param {*} panorama\n     * @returns {Promise}\n     */;\n    _proto.preloadPanorama = function preloadPanorama(panorama) {\n      if (this.psv.adapter.supportsPreload(panorama)) {\n        return this.psv.adapter.loadTexture(panorama);\n      } else {\n        return Promise.resolve();\n      }\n    };\n    return TextureLoader;\n  }(AbstractService);\n  var STATE = {\n    NONE: 0,\n    SHOWING: 1,\n    HIDING: 2,\n    READY: 3\n  };\n  /**\n   * @typedef {Object} PSV.components.Tooltip.Position\n   * @summary Object defining the tooltip position\n   * @property {number} top - Position of the tip of the arrow of the tooltip, in pixels\n   * @property {number} left - Position of the tip of the arrow of the tooltip, in pixels\n   * @property {string|string[]} [position='top center'] - Tooltip position toward it's arrow tip.\n   *           Accepted values are combinations of `top`, `center`, `bottom` and `left`, `center`, `right`\n   * @property {Object} [box] - Used when displaying a tooltip on a marker\n   * @property {number} [box.width=0]\n   * @property {number} [box.height=0]\n   */\n\n  /**\n   * @typedef {PSV.components.Tooltip.Position} PSV.components.Tooltip.Config\n   * @summary Object defining the tooltip configuration\n   * @property {string} content - HTML content of the tooltip\n   * @property {string} [className] - Additional CSS class added to the tooltip\n   * @property {*} [data] - Userdata associated to the tooltip\n   */\n\n  /**\n   * @summary Tooltip component\n   * @description Never instanciate tooltips directly use {@link PSV.services.TooltipRenderer} instead\n   * @extends PSV.components.AbstractComponent\n   * @memberof PSV.components\n   */\n\n  var Tooltip = /*#__PURE__*/function (_AbstractComponent) {\n    _inheritsLoose(Tooltip, _AbstractComponent);\n\n    /**\n     * @param {PSV.Viewer} psv\n     * @param {{arrow: number, border: number}} size\n     */\n    function Tooltip(psv, size) {\n      var _this;\n      _this = _AbstractComponent.call(this, psv, 'psv-tooltip') || this;\n      /**\n       * @override\n       * @property {number} arrow\n       * @property {number} border\n       * @property {number} width\n       * @property {number} height\n       * @property {string} pos\n       * @property {string} state\n       * @property {*} data\n       */\n\n      _this.prop = _extends({}, _this.prop, size, {\n        state: STATE.NONE,\n        width: 0,\n        height: 0,\n        pos: '',\n        config: null,\n        data: null\n      });\n      /**\n       * Tooltip content\n       * @member {HTMLElement}\n       * @readonly\n       * @private\n       */\n\n      _this.content = document.createElement('div');\n      _this.content.className = 'psv-tooltip-content';\n      _this.container.appendChild(_this.content);\n      /**\n       * Tooltip arrow\n       * @member {HTMLElement}\n       * @readonly\n       * @package\n       */\n\n      _this.arrow = document.createElement('div');\n      _this.arrow.className = 'psv-tooltip-arrow';\n      _this.container.appendChild(_this.arrow);\n      _this.container.addEventListener('transitionend', _assertThisInitialized(_this));\n      _this.container.style.top = '-1000px';\n      _this.container.style.left = '-1000px';\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = Tooltip.prototype;\n    _proto.destroy = function destroy() {\n      delete this.arrow;\n      delete this.content;\n      _AbstractComponent.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Handles events\n     * @param {Event} e\n     * @private\n     */;\n    _proto.handleEvent = function handleEvent(e) {\n      /* eslint-disable */\n      switch (e.type) {\n        // @formatter:off\n        case 'transitionend':\n          this.__onTransitionEnd(e);\n          break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n    /**\n     * @override\n     * @summary This method is not supported\n     * @throws {PSV.PSVError} always\n     */;\n    _proto.toggle = function toggle() {\n      throw new PSVError('Tooltip cannot be toggled');\n    }\n    /**\n     * @summary Displays the tooltip on the viewer\n     * Do not call this method directly, use {@link PSV.services.TooltipRenderer} instead.\n     * @param {PSV.components.Tooltip.Config} config\n     *\n     * @fires PSV.show-tooltip\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     *\n     * @package\n     */;\n    _proto.show = function show(config) {\n      if (this.prop.state !== STATE.NONE) {\n        throw new PSVError('Initialized tooltip cannot be re-initialized');\n      }\n      if (config.className) {\n        addClasses(this.container, config.className);\n      }\n      this.content.innerHTML = config.content;\n      var rect = this.container.getBoundingClientRect();\n      this.prop.width = rect.right - rect.left;\n      this.prop.height = rect.bottom - rect.top;\n      this.prop.state = STATE.READY;\n      this.move(config);\n      this.prop.data = config.data;\n      this.prop.state = STATE.SHOWING;\n      this.psv.trigger(EVENTS.SHOW_TOOLTIP, this.prop.data, this);\n      this.__waitImages();\n    }\n    /**\n     * @summary Moves the tooltip to a new position\n     * @param {PSV.components.Tooltip.Position} config\n     *\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     */;\n    _proto.move = function move(config) {\n      if (this.prop.state !== STATE.SHOWING && this.prop.state !== STATE.READY) {\n        throw new PSVError('Uninitialized tooltip cannot be moved');\n      }\n      if (!config.box) {\n        config.box = {\n          width: 0,\n          height: 0\n        };\n      }\n      this.config = config;\n      var t = this.container;\n      var a = this.arrow; // compute size\n\n      var style = {\n        posClass: cleanPosition(config.position, {\n          allowCenter: false,\n          cssOrder: false\n        }) || ['top', 'center'],\n        width: this.prop.width,\n        height: this.prop.height,\n        top: 0,\n        left: 0,\n        arrowTop: 0,\n        arrowLeft: 0\n      }; // set initial position\n\n      this.__computeTooltipPosition(style, config); // correct position if overflow\n\n      var swapY = null;\n      var swapX = null;\n      if (style.top < 0) {\n        swapY = 'bottom';\n      } else if (style.top + style.height > this.psv.prop.size.height) {\n        swapY = 'top';\n      }\n      if (style.left < 0) {\n        swapX = 'right';\n      } else if (style.left + style.width > this.psv.prop.size.width) {\n        swapX = 'left';\n      }\n      if (swapX || swapY) {\n        var ordered = positionIsOrdered(style.posClass);\n        if (swapY) {\n          style.posClass[ordered ? 0 : 1] = swapY;\n        }\n        if (swapX) {\n          style.posClass[ordered ? 1 : 0] = swapX;\n        }\n        this.__computeTooltipPosition(style, config);\n      } // apply position\n\n      t.style.top = style.top + 'px';\n      t.style.left = style.left + 'px';\n      a.style.top = style.arrowTop + 'px';\n      a.style.left = style.arrowLeft + 'px';\n      var newPos = style.posClass.join('-');\n      if (newPos !== this.prop.pos) {\n        t.classList.remove(\"psv-tooltip--\" + this.prop.pos);\n        this.prop.pos = newPos;\n        t.classList.add(\"psv-tooltip--\" + this.prop.pos);\n      }\n    }\n    /**\n     * @summary Hides the tooltip\n     * @fires PSV.hide-tooltip\n     */;\n    _proto.hide = function hide() {\n      this.container.classList.remove('psv-tooltip--visible');\n      this.prop.state = STATE.HIDING;\n      this.psv.trigger(EVENTS.HIDE_TOOLTIP, this.prop.data);\n    }\n    /**\n     * @summary Finalize transition\n     * @param {TransitionEvent} e\n     * @private\n     */;\n    _proto.__onTransitionEnd = function __onTransitionEnd(e) {\n      if (e.propertyName === 'transform') {\n        switch (this.prop.state) {\n          case STATE.SHOWING:\n            this.container.classList.add('psv-tooltip--visible');\n            this.prop.state = STATE.READY;\n            break;\n          case STATE.HIDING:\n            this.prop.state = STATE.NONE;\n            this.destroy();\n            break;\n        }\n      }\n    }\n    /**\n     * @summary Computes the position of the tooltip and its arrow\n     * @param {Object} style\n     * @param {Object} config\n     * @private\n     */;\n    _proto.__computeTooltipPosition = function __computeTooltipPosition(style, config) {\n      var arrow = this.prop.arrow;\n      var top = config.top;\n      var height = style.height;\n      var left = config.left;\n      var width = style.width;\n      var offsetSide = arrow + this.prop.border;\n      var offsetX = config.box.width / 2 + arrow * 2;\n      var offsetY = config.box.height / 2 + arrow * 2;\n      switch (style.posClass.join('-')) {\n        case 'top-left':\n          style.top = top - offsetY - height;\n          style.left = left + offsetSide - width;\n          style.arrowTop = height;\n          style.arrowLeft = width - offsetSide - arrow;\n          break;\n        case 'top-center':\n          style.top = top - offsetY - height;\n          style.left = left - width / 2;\n          style.arrowTop = height;\n          style.arrowLeft = width / 2 - arrow;\n          break;\n        case 'top-right':\n          style.top = top - offsetY - height;\n          style.left = left - offsetSide;\n          style.arrowTop = height;\n          style.arrowLeft = arrow;\n          break;\n        case 'bottom-left':\n          style.top = top + offsetY;\n          style.left = left + offsetSide - width;\n          style.arrowTop = -arrow * 2;\n          style.arrowLeft = width - offsetSide - arrow;\n          break;\n        case 'bottom-center':\n          style.top = top + offsetY;\n          style.left = left - width / 2;\n          style.arrowTop = -arrow * 2;\n          style.arrowLeft = width / 2 - arrow;\n          break;\n        case 'bottom-right':\n          style.top = top + offsetY;\n          style.left = left - offsetSide;\n          style.arrowTop = -arrow * 2;\n          style.arrowLeft = arrow;\n          break;\n        case 'left-top':\n          style.top = top + offsetSide - height;\n          style.left = left - offsetX - width;\n          style.arrowTop = height - offsetSide - arrow;\n          style.arrowLeft = width;\n          break;\n        case 'center-left':\n          style.top = top - height / 2;\n          style.left = left - offsetX - width;\n          style.arrowTop = height / 2 - arrow;\n          style.arrowLeft = width;\n          break;\n        case 'left-bottom':\n          style.top = top - offsetSide;\n          style.left = left - offsetX - width;\n          style.arrowTop = arrow;\n          style.arrowLeft = width;\n          break;\n        case 'right-top':\n          style.top = top + offsetSide - height;\n          style.left = left + offsetX;\n          style.arrowTop = height - offsetSide - arrow;\n          style.arrowLeft = -arrow * 2;\n          break;\n        case 'center-right':\n          style.top = top - height / 2;\n          style.left = left + offsetX;\n          style.arrowTop = height / 2 - arrow;\n          style.arrowLeft = -arrow * 2;\n          break;\n        case 'right-bottom':\n          style.top = top - offsetSide;\n          style.left = left + offsetX;\n          style.arrowTop = arrow;\n          style.arrowLeft = -arrow * 2;\n          break;\n        // no default\n      }\n    }\n    /**\n     * @summary If the tooltip contains images, recompute its size once they are loaded\n     * @private\n     */;\n    _proto.__waitImages = function __waitImages() {\n      var _this2 = this;\n      var images = this.content.querySelectorAll('img');\n      if (images.length > 0) {\n        var promises = [];\n        images.forEach(function (image) {\n          promises.push(new Promise(function (resolve) {\n            image.onload = resolve;\n            image.onerror = resolve;\n          }));\n        });\n        Promise.all(promises).then(function () {\n          if (_this2.prop.state === STATE.SHOWING || _this2.prop.state === STATE.READY) {\n            var rect = _this2.container.getBoundingClientRect();\n            _this2.prop.width = rect.right - rect.left;\n            _this2.prop.height = rect.bottom - rect.top;\n            _this2.move(_this2.config);\n          }\n        });\n      }\n    };\n    return Tooltip;\n  }(AbstractComponent);\n\n  /**\n   * @summary Tooltip renderer\n   * @extends PSV.services.AbstractService\n   * @memberof PSV.services\n   */\n\n  var TooltipRenderer = /*#__PURE__*/function (_AbstractService) {\n    _inheritsLoose(TooltipRenderer, _AbstractService);\n\n    /**\n     * @param {PSV.Viewer} psv\n     */\n    function TooltipRenderer(psv) {\n      var _this;\n      _this = _AbstractService.call(this, psv) || this;\n      var testTooltip = new Tooltip(_this.psv, {\n        arrow: 0,\n        border: 0\n      });\n      /**\n       * @summary Computed static sizes\n       * @member {Object}\n       * @package\n       * @property {number} arrow\n       * @property {number} border\n       */\n\n      _this.size = {\n        arrow: parseInt(getStyle(testTooltip.arrow, 'borderTopWidth'), 10),\n        border: parseInt(getStyle(testTooltip.container, 'borderTopLeftRadius'), 10)\n      };\n      testTooltip.destroy();\n      return _this;\n    }\n    /**\n     * @override\n     */\n\n    var _proto = TooltipRenderer.prototype;\n    _proto.destroy = function destroy() {\n      delete this.size;\n      _AbstractService.prototype.destroy.call(this);\n    }\n    /**\n     * @summary Displays a tooltip on the viewer\n     * @param {PSV.components.Tooltip.Config} config\n     * @returns {PSV.components.Tooltip}\n     *\n     * @fires PSV.show-tooltip\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     *\n     * @example\n     * viewer.tooltip.create({ content: 'Hello world', top: 200, left: 450, position: 'center bottom'})\n     */;\n    _proto.create = function create(config) {\n      var tooltip = new Tooltip(this.psv, this.size);\n      tooltip.show(config);\n      return tooltip;\n    };\n    return TooltipRenderer;\n  }(AbstractService);\n  three.Cache.enabled = true;\n  /**\n   * @summary Main class\n   * @memberOf PSV\n   * @extends {external:uEvent.EventEmitter}\n   */\n\n  var Viewer = /*#__PURE__*/function (_EventEmitter) {\n    _inheritsLoose(Viewer, _EventEmitter);\n\n    /**\n     * @param {PSV.Options} options\n     * @fires PSV.ready\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     */\n    function Viewer(options) {\n      var _this;\n      _this = _EventEmitter.call(this) || this;\n      SYSTEM.load(); // must support WebGL\n\n      if (!SYSTEM.isWebGLSupported) {\n        throw new PSVError('WebGL is not supported.');\n      }\n      if (SYSTEM.maxTextureWidth === 0) {\n        throw new PSVError('Unable to detect system capabilities');\n      }\n      /**\n       * @summary Internal properties\n       * @member {Object}\n       * @protected\n       * @property {boolean} ready - when all components are loaded\n       * @property {boolean} uiRefresh - if the UI needs to be renderer\n       * @property {boolean} needsUpdate - if the view needs to be renderer\n       * @property {boolean} fullscreen - if the viewer is currently fullscreen\n       * @property {external:THREE.Vector3} direction - direction of the camera\n       * @property {number} vFov - vertical FOV\n       * @property {number} hFov - horizontal FOV\n       * @property {number} aspect - viewer aspect ratio\n       * @property {boolean} autorotateEnabled - automatic rotation is enabled\n       * @property {PSV.utils.Animation} animationPromise - promise of the current animation\n       * @property {Promise} loadingPromise - promise of the setPanorama method\n       * @property {boolean} littlePlanet - special tweaks for LittlePlanetAdapter\n       * @property {number} idleTime - time of the last user action\n       * @property {object} objectsObservers\n       * @property {PSV.Size} size - size of the container\n       * @property {PSV.PanoData} panoData - panorama metadata, if supported\n       */\n\n      _this.prop = {\n        ready: false,\n        uiRefresh: false,\n        needsUpdate: false,\n        fullscreen: false,\n        direction: new three.Vector3(0, 0, SPHERE_RADIUS),\n        vFov: null,\n        hFov: null,\n        aspect: null,\n        autorotateEnabled: false,\n        animationPromise: null,\n        loadingPromise: null,\n        littlePlanet: false,\n        idleTime: -1,\n        objectsObservers: {},\n        size: {\n          width: 0,\n          height: 0\n        },\n        panoData: {\n          fullWidth: 0,\n          fullHeight: 0,\n          croppedWidth: 0,\n          croppedHeight: 0,\n          croppedX: 0,\n          croppedY: 0,\n          poseHeading: 0,\n          posePitch: 0,\n          poseRoll: 0\n        }\n      };\n      /**\n       * @summary Configuration holder\n       * @type {PSV.Options}\n       * @readonly\n       */\n\n      _this.config = getConfig(options);\n      /**\n       * @summary Top most parent\n       * @member {HTMLElement}\n       * @readonly\n       */\n\n      _this.parent = typeof options.container === 'string' ? document.getElementById(options.container) : options.container;\n      _this.parent[VIEWER_DATA] = _assertThisInitialized(_this);\n      /**\n       * @summary Main container\n       * @member {HTMLElement}\n       * @readonly\n       */\n\n      _this.container = document.createElement('div');\n      _this.container.classList.add('psv-container');\n      _this.parent.appendChild(_this.container);\n      /**\n       * @summary Render adapter\n       * @type {PSV.adapters.AbstractAdapter}\n       * @readonly\n       * @package\n       */\n\n      _this.adapter = new _this.config.adapter[0](_assertThisInitialized(_this), _this.config.adapter[1]); // eslint-disable-line new-cap\n\n      /**\n       * @summary All child components\n       * @type {PSV.components.AbstractComponent[]}\n       * @readonly\n       * @package\n       */\n\n      _this.children = [];\n      /**\n       * @summary All plugins\n       * @type {Object<string, PSV.plugins.AbstractPlugin>}\n       * @readonly\n       * @package\n       */\n\n      _this.plugins = {};\n      /**\n       * @type {PSV.services.Renderer}\n       * @readonly\n       */\n\n      _this.renderer = new Renderer(_assertThisInitialized(_this));\n      /**\n       * @type {PSV.services.TextureLoader}\n       * @readonly\n       */\n\n      _this.textureLoader = new TextureLoader(_assertThisInitialized(_this));\n      /**\n       * @type {PSV.services.EventsHandler}\n       * @readonly\n       */\n\n      _this.eventsHandler = new EventsHandler(_assertThisInitialized(_this));\n      /**\n       * @type {PSV.services.DataHelper}\n       * @readonly\n       */\n\n      _this.dataHelper = new DataHelper(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.components.Loader}\n       * @readonly\n       */\n\n      _this.loader = new Loader(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.components.Navbar}\n       * @readonly\n       */\n\n      _this.navbar = new Navbar(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.components.Panel}\n       * @readonly\n       */\n\n      _this.panel = new Panel(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.services.TooltipRenderer}\n       * @readonly\n       */\n\n      _this.tooltip = new TooltipRenderer(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.components.Notification}\n       * @readonly\n       */\n\n      _this.notification = new Notification(_assertThisInitialized(_this));\n      /**\n       * @member {PSV.components.Overlay}\n       * @readonly\n       */\n\n      _this.overlay = new Overlay(_assertThisInitialized(_this));\n      /**\n       * @member {Record<string, PSV.utils.Dynamic>}\n       * @package\n       */\n\n      _this.dynamics = {\n        zoom: new Dynamic(function (value) {\n          _this.prop.vFov = _this.dataHelper.zoomLevelToFov(value);\n          _this.prop.hFov = _this.dataHelper.vFovToHFov(_this.prop.vFov);\n          _this.trigger(EVENTS.ZOOM_UPDATED, value);\n        }, _this.config.defaultZoomLvl, 0, 100),\n        position: new MultiDynamic({\n          longitude: new Dynamic(null, _this.config.defaultLong, 0, 2 * Math.PI, true),\n          latitude: _this.prop.littlePlanet ? new Dynamic(null, _this.config.defaultLat, 0, Math.PI * 2, true) : new Dynamic(null, _this.config.defaultLat, -Math.PI / 2, Math.PI / 2)\n        }, function (position) {\n          _this.dataHelper.sphericalCoordsToVector3(position, _this.prop.direction);\n          _this.trigger(EVENTS.POSITION_UPDATED, position);\n        })\n      };\n      _this.__updateSpeeds();\n      _this.eventsHandler.init();\n      _this.__resizeRefresh = throttle(function () {\n        return _this.refreshUi('resize');\n      }, 500); // apply container size\n\n      _this.resize(_this.config.size); // init plugins\n\n      _this.config.plugins.forEach(function (_ref) {\n        var plugin = _ref[0],\n          opts = _ref[1];\n        _this.plugins[plugin.id] = new plugin(_assertThisInitialized(_this), opts); // eslint-disable-line new-cap\n      });\n      each(_this.plugins, function (plugin) {\n        return plugin.init == null ? void 0 : plugin.init();\n      }); // init buttons\n\n      _this.navbar.setButtons(_this.config.navbar); // load panorama\n\n      if (_this.config.panorama) {\n        _this.setPanorama(_this.config.panorama);\n      }\n      toggleClass(_this.container, 'psv--is-touch', SYSTEM.isTouchEnabled.initial);\n      SYSTEM.isTouchEnabled.promise.then(function (enabled) {\n        return toggleClass(_this.container, 'psv--is-touch', enabled);\n      }); // enable GUI after first render\n\n      _this.once(EVENTS.RENDER, function () {\n        if (_this.config.navbar) {\n          _this.container.classList.add('psv--has-navbar');\n          _this.navbar.show();\n        } // Queue autorotate\n\n        if (!isNil(_this.config.autorotateDelay)) {\n          _this.prop.idleTime = performance.now();\n        }\n        _this.prop.ready = true;\n        setTimeout(function () {\n          _this.refreshUi('init');\n          _this.trigger(EVENTS.READY);\n        }, 0);\n      });\n      return _this;\n    }\n    /**\n     * @summary Destroys the viewer\n     * @description The memory used by the ThreeJS context is not totally cleared. This will be fixed as soon as possible.\n     */\n\n    var _proto = Viewer.prototype;\n    _proto.destroy = function destroy() {\n      this.__stopAll();\n      this.stopKeyboardControl();\n      this.exitFullscreen();\n      each(this.plugins, function (plugin) {\n        return plugin.destroy();\n      });\n      delete this.plugins;\n      this.children.slice().forEach(function (child) {\n        return child.destroy();\n      });\n      this.children.length = 0;\n      this.eventsHandler.destroy();\n      this.renderer.destroy();\n      this.textureLoader.destroy();\n      this.dataHelper.destroy();\n      this.adapter.destroy();\n      this.parent.removeChild(this.container);\n      delete this.parent[VIEWER_DATA];\n      delete this.parent;\n      delete this.container;\n      delete this.loader;\n      delete this.navbar;\n      delete this.panel;\n      delete this.tooltip;\n      delete this.notification;\n      delete this.overlay;\n      delete this.dynamics;\n      delete this.config;\n    }\n    /**\n     * @summary Refresh UI\n     * @package\n     */;\n    _proto.refreshUi = function refreshUi(reason) {\n      var _this2 = this;\n      if (!this.prop.ready) {\n        return;\n      }\n      if (!this.prop.uiRefresh) {\n        // console.log(`PhotoSphereViewer: UI Refresh, ${reason}`);\n        this.prop.uiRefresh = true;\n        this.children.every(function (child) {\n          child.refreshUi();\n          return _this2.prop.uiRefresh === true;\n        });\n        this.prop.uiRefresh = false;\n      } else if (this.prop.uiRefresh !== 'new') {\n        this.prop.uiRefresh = 'new'; // wait for current refresh to cancel\n\n        setTimeout(function () {\n          _this2.prop.uiRefresh = false;\n          _this2.refreshUi(reason);\n        });\n      }\n    }\n    /**\n     * @summary Returns the instance of a plugin if it exists\n     * @param {Class<PSV.plugins.AbstractPlugin>|string} pluginId\n     * @returns {PSV.plugins.AbstractPlugin}\n     */;\n    _proto.getPlugin = function getPlugin(pluginId) {\n      if (typeof pluginId === 'string') {\n        return this.plugins[pluginId];\n      } else {\n        var pluginCtor = pluginInterop(pluginId, AbstractPlugin);\n        return pluginCtor ? this.plugins[pluginCtor.id] : undefined;\n      }\n    }\n    /**\n     * @summary Returns the current position of the camera\n     * @returns {PSV.Position}\n     */;\n    _proto.getPosition = function getPosition() {\n      return this.dataHelper.cleanPosition(this.dynamics.position.current);\n    }\n    /**\n     * @summary Returns the current zoom level\n     * @returns {number}\n     */;\n    _proto.getZoomLevel = function getZoomLevel() {\n      return this.dynamics.zoom.current;\n    }\n    /**\n     * @summary Returns the current viewer size\n     * @returns {PSV.Size}\n     */;\n    _proto.getSize = function getSize() {\n      return _extends({}, this.prop.size);\n    }\n    /**\n     * @summary Checks if the automatic rotation is enabled\n     * @returns {boolean}\n     */;\n    _proto.isAutorotateEnabled = function isAutorotateEnabled() {\n      return this.prop.autorotateEnabled;\n    }\n    /**\n     * @summary Checks if the viewer is in fullscreen\n     * @returns {boolean}\n     */;\n    _proto.isFullscreenEnabled = function isFullscreenEnabled$1() {\n      if (SYSTEM.fullscreenEvent) {\n        return isFullscreenEnabled(this.container);\n      } else {\n        return this.prop.fullscreen;\n      }\n    }\n    /**\n     * @summary Flags the view has changed for the next render\n     */;\n    _proto.needsUpdate = function needsUpdate() {\n      this.prop.needsUpdate = true;\n    }\n    /**\n     * @summary Resizes the canvas when the window is resized\n     * @fires PSV.size-updated\n     */;\n    _proto.autoSize = function autoSize() {\n      if (this.container.clientWidth !== this.prop.size.width || this.container.clientHeight !== this.prop.size.height) {\n        this.prop.size.width = Math.round(this.container.clientWidth);\n        this.prop.size.height = Math.round(this.container.clientHeight);\n        this.prop.aspect = this.prop.size.width / this.prop.size.height;\n        this.prop.hFov = this.dataHelper.vFovToHFov(this.prop.vFov);\n        this.trigger(EVENTS.SIZE_UPDATED, this.getSize());\n        this.__resizeRefresh();\n      }\n    }\n    /**\n     * @summary Loads a new panorama file\n     * @description Loads a new panorama file, optionally changing the camera position/zoom and activating the transition animation.<br>\n     * If the \"options\" parameter is not defined, the camera will not move and the ongoing animation will continue.<br>\n     * If another loading is already in progress it will be aborted.\n     * @param {*} path - URL of the new panorama file\n     * @param {PSV.PanoramaOptions} [options]\n     * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n     */;\n    _proto.setPanorama = function setPanorama(path, options) {\n      var _this$prop$transition,\n        _this3 = this;\n      if (options === void 0) {\n        options = {};\n      }\n      this.textureLoader.abortLoading();\n      (_this$prop$transition = this.prop.transitionAnimation) == null ? void 0 : _this$prop$transition.cancel(); // apply default parameters on first load\n\n      if (!this.prop.ready) {\n        ['sphereCorrection', 'panoData', 'overlay', 'overlayOpacity'].forEach(function (opt) {\n          if (!(opt in options)) {\n            options[opt] = _this3.config[opt];\n          }\n        });\n      }\n      if (options.transition === undefined || options.transition === true) {\n        options.transition = DEFAULT_TRANSITION;\n      }\n      if (options.showLoader === undefined) {\n        options.showLoader = true;\n      }\n      if (options.caption === undefined) {\n        options.caption = this.config.caption;\n      }\n      if (options.description === undefined) {\n        options.description = this.config.description;\n      }\n      if (!options.panoData && typeof this.config.panoData === 'function') {\n        options.panoData = this.config.panoData;\n      }\n      var positionProvided = isExtendedPosition(options);\n      var zoomProvided = 'zoom' in options;\n      if (positionProvided || zoomProvided) {\n        this.__stopAll();\n      }\n      this.hideError();\n      this.config.panorama = path;\n      this.config.caption = options.caption;\n      this.config.description = options.description;\n      var done = function done(err) {\n        _this3.loader.hide();\n        _this3.prop.loadingPromise = null;\n        if (isAbortError(err)) {\n          return false;\n        } else if (err) {\n          _this3.navbar.setCaption('');\n          _this3.showError(_this3.config.lang.loadError);\n          console.error(err);\n          throw err;\n        } else {\n          _this3.resetIdleTimer();\n          _this3.setOverlay(options.overlay, options.overlayOpacity);\n          _this3.navbar.setCaption(_this3.config.caption);\n          return true;\n        }\n      };\n      this.navbar.setCaption(\"<em>\" + (this.config.loadingTxt || '') + \"</em>\");\n      if (options.showLoader || !this.prop.ready) {\n        this.loader.show();\n      }\n      var loadingPromise = this.adapter.loadTexture(this.config.panorama, options.panoData).then(function (textureData) {\n        // check if another panorama was requested\n        if (textureData.panorama !== _this3.config.panorama) {\n          _this3.adapter.disposeTexture(textureData);\n          throw getAbortError();\n        }\n        return textureData;\n      });\n      if (!options.transition || !this.prop.ready || !this.adapter.supportsTransition(this.config.panorama)) {\n        this.prop.loadingPromise = loadingPromise.then(function (textureData) {\n          _this3.renderer.show();\n          _this3.renderer.setTexture(textureData);\n          _this3.renderer.setPanoramaPose(textureData.panoData);\n          _this3.renderer.setSphereCorrection(options.sphereCorrection);\n          if (zoomProvided) {\n            _this3.zoom(options.zoom);\n          }\n          if (positionProvided) {\n            _this3.rotate(options);\n          }\n        }).then(done, done);\n      } else {\n        this.prop.loadingPromise = loadingPromise.then(function (textureData) {\n          _this3.loader.hide();\n          _this3.prop.transitionAnimation = _this3.renderer.transition(textureData, options);\n          return _this3.prop.transitionAnimation;\n        }).then(function (completed) {\n          _this3.prop.transitionAnimation = null;\n          if (!completed) {\n            throw getAbortError();\n          }\n        }).then(done, done);\n      }\n      return this.prop.loadingPromise;\n    }\n    /**\n     * @summary Loads a new overlay\n     * @param {*} path - URL of the new overlay file\n     * @param {number} [opacity=1]\n     * @returns {Promise}\n     */;\n    _proto.setOverlay = function setOverlay(path, opacity) {\n      var _this4 = this;\n      if (opacity === void 0) {\n        opacity = 1;\n      }\n      if (!path) {\n        if (this.adapter.constructor.supportsOverlay) {\n          this.renderer.setOverlay(null, 0);\n        }\n        return Promise.resolve();\n      } else {\n        if (!this.adapter.constructor.supportsOverlay) {\n          return Promise.reject(new PSVError(this.adapter.constructor.id + \" adapter does not supports overlay\"));\n        }\n        return this.adapter.loadTexture(path, function (image) {\n          var p = _this4.prop.panoData;\n          var r = image.width / p.croppedWidth;\n          return {\n            fullWidth: r * p.fullWidth,\n            fullHeight: r * p.fullHeight,\n            croppedWidth: r * p.croppedWidth,\n            croppedHeight: r * p.croppedHeight,\n            croppedX: r * p.croppedX,\n            croppedY: r * p.croppedY\n          };\n        }, false).then(function (textureData) {\n          _this4.renderer.setOverlay(textureData, opacity);\n        });\n      }\n    }\n    /**\n     * @summary Update options\n     * @param {PSV.Options} options\n     * @fires PSV.config-changed\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     */;\n    _proto.setOptions = function setOptions(options) {\n      var _this5 = this;\n      var rawConfig = _extends({}, this.config, options);\n      each(options, function (value, key) {\n        if (DEPRECATED_OPTIONS[key]) {\n          logWarn(DEPRECATED_OPTIONS[key]);\n          return;\n        }\n        if (!Object.prototype.hasOwnProperty.call(DEFAULTS, key)) {\n          throw new PSVError(\"Unknown option \" + key);\n        }\n        if (READONLY_OPTIONS[key]) {\n          throw new PSVError(READONLY_OPTIONS[key]);\n        }\n        if (CONFIG_PARSERS[key]) {\n          _this5.config[key] = CONFIG_PARSERS[key](value, rawConfig);\n        } else {\n          _this5.config[key] = value;\n        }\n        switch (key) {\n          case 'overlay':\n          case 'overlayOpacity':\n            _this5.setOverlay(_this5.config.overlay, _this5.config.overlayOpacity);\n            break;\n          case 'caption':\n          case 'description':\n            _this5.navbar.setCaption(_this5.config.caption);\n            break;\n          case 'size':\n            _this5.resize(value);\n            break;\n          case 'sphereCorrection':\n            _this5.renderer.setSphereCorrection(value);\n            break;\n          case 'navbar':\n          case 'lang':\n            _this5.navbar.setButtons(_this5.config.navbar);\n            break;\n          case 'moveSpeed':\n          case 'zoomSpeed':\n            _this5.__updateSpeeds();\n            break;\n          case 'minFov':\n          case 'maxFov':\n            _this5.dynamics.zoom.setValue(_this5.dataHelper.fovToZoomLevel(_this5.prop.vFov));\n            _this5.trigger(EVENTS.ZOOM_UPDATED, _this5.getZoomLevel());\n            break;\n          case 'canvasBackground':\n            _this5.renderer.canvasContainer.style.background = _this5.config.canvasBackground;\n            break;\n          case 'autorotateIdle':\n            _this5.resetIdleTimer();\n            break;\n        }\n      });\n      this.needsUpdate();\n      this.refreshUi('set options');\n      this.trigger(EVENTS.CONFIG_CHANGED, Object.keys(options));\n    }\n    /**\n     * @summary Update options\n     * @param {string} option\n     * @param {any} value\n     * @fires PSV.config-changed\n     * @throws {PSV.PSVError} when the configuration is incorrect\n     */;\n    _proto.setOption = function setOption(option, value) {\n      var _this$setOptions;\n      this.setOptions((_this$setOptions = {}, _this$setOptions[option] = value, _this$setOptions));\n    }\n    /**\n     * @summary Restarts the idle timer (if `autorotateIdle=true`)\n     * @package\n     */;\n    _proto.resetIdleTimer = function resetIdleTimer() {\n      this.prop.idleTime = this.config.autorotateIdle ? performance.now() : -1;\n    }\n    /**\n     * @summary Stops the idle timer\n     * @package\n     */;\n    _proto.disableIdleTimer = function disableIdleTimer() {\n      this.prop.idleTime = -1;\n    }\n    /**\n     * @summary Starts the automatic rotation\n     * @fires PSV.autorotate\n     */;\n    _proto.startAutorotate = function startAutorotate(refresh) {\n      if (refresh === void 0) {\n        refresh = false;\n      }\n      if (refresh && !this.isAutorotateEnabled()) {\n        return;\n      }\n      if (!refresh && this.isAutorotateEnabled()) {\n        return;\n      }\n      if (!refresh) {\n        this.__stopAll();\n      }\n      this.dynamics.position.roll({\n        longitude: this.config.autorotateSpeed < 0\n      }, Math.abs(this.config.autorotateSpeed / this.config.moveSpeed));\n      this.dynamics.position.goto({\n        latitude: this.config.autorotateLat\n      }, Math.abs(this.config.autorotateSpeed / this.config.moveSpeed));\n      if (this.config.autorotateZoomLvl !== null) {\n        this.dynamics.zoom.goto(this.config.autorotateZoomLvl);\n      }\n      this.prop.autorotateEnabled = true;\n      if (!refresh) {\n        this.trigger(EVENTS.AUTOROTATE, true);\n      }\n    }\n    /**\n     * @summary Stops the automatic rotation\n     * @fires PSV.autorotate\n     */;\n    _proto.stopAutorotate = function stopAutorotate() {\n      if (this.isAutorotateEnabled()) {\n        this.dynamics.position.stop();\n        this.dynamics.zoom.stop();\n        this.prop.autorotateEnabled = false;\n        this.trigger(EVENTS.AUTOROTATE, false);\n      }\n    }\n    /**\n     * @summary Starts or stops the automatic rotation\n     * @fires PSV.autorotate\n     */;\n    _proto.toggleAutorotate = function toggleAutorotate() {\n      if (this.isAutorotateEnabled()) {\n        this.stopAutorotate();\n      } else {\n        this.startAutorotate();\n      }\n    }\n    /**\n     * @summary Displays an error message over the viewer\n     * @param {string} message\n     */;\n    _proto.showError = function showError(message) {\n      this.overlay.show({\n        id: IDS.ERROR,\n        image: errorIcon,\n        text: message,\n        dissmisable: false\n      });\n    }\n    /**\n     * @summary Hides the error message\n     */;\n    _proto.hideError = function hideError() {\n      this.overlay.hide(IDS.ERROR);\n    }\n    /**\n     * @summary Rotates the view to specific longitude and latitude\n     * @param {PSV.ExtendedPosition} position\n     * @fires PSV.before-rotate\n     * @fires PSV.position-updated\n     */;\n    _proto.rotate = function rotate(position) {\n      var e = this.trigger(EVENTS.BEFORE_ROTATE, position);\n      if (e.isDefaultPrevented()) {\n        return;\n      }\n      var cleanPosition = this.change(CHANGE_EVENTS.GET_ROTATE_POSITION, this.dataHelper.cleanPosition(position));\n      this.dynamics.position.setValue(cleanPosition);\n    }\n    /**\n     * @summary Rotates and zooms the view with a smooth animation\n     * @param {PSV.AnimateOptions} options - position and/or zoom level\n     * @returns {PSV.utils.Animation}\n     */;\n    _proto.animate = function animate(options) {\n      var _this6 = this;\n      this.__stopAll();\n      var positionProvided = isExtendedPosition(options);\n      var zoomProvided = options.zoom !== undefined;\n      var animProperties = {};\n      var duration; // clean/filter position and compute duration\n\n      if (positionProvided) {\n        var cleanPosition = this.change(CHANGE_EVENTS.GET_ANIMATE_POSITION, this.dataHelper.cleanPosition(options));\n        var currentPosition = this.getPosition(); // longitude offset for shortest arc\n\n        var tOffset = getShortestArc(currentPosition.longitude, cleanPosition.longitude);\n        animProperties.longitude = {\n          start: currentPosition.longitude,\n          end: currentPosition.longitude + tOffset\n        };\n        animProperties.latitude = {\n          start: currentPosition.latitude,\n          end: cleanPosition.latitude\n        };\n        duration = this.dataHelper.speedToDuration(options.speed, getAngle(currentPosition, cleanPosition));\n      } // clean/filter zoom and compute duration\n\n      if (zoomProvided) {\n        var dZoom = Math.abs(options.zoom - this.getZoomLevel());\n        animProperties.zoom = {\n          start: this.getZoomLevel(),\n          end: options.zoom\n        };\n        if (!duration) {\n          // if animating zoom only and a speed is given, use an arbitrary PI/4 to compute the duration\n          duration = this.dataHelper.speedToDuration(options.speed, Math.PI / 4 * dZoom / 100);\n        }\n      } // if no animation needed\n\n      if (!duration) {\n        if (positionProvided) {\n          this.rotate(options);\n        }\n        if (zoomProvided) {\n          this.zoom(options.zoom);\n        }\n        return new Animation();\n      }\n      this.prop.animationPromise = new Animation({\n        properties: animProperties,\n        duration: Math.max(ANIMATION_MIN_DURATION, duration),\n        easing: 'inOutSine',\n        onTick: function onTick(properties) {\n          if (positionProvided) {\n            _this6.rotate(properties);\n          }\n          if (zoomProvided) {\n            _this6.zoom(properties.zoom);\n          }\n        }\n      });\n      this.prop.animationPromise.then(function () {\n        _this6.prop.animationPromise = null;\n        _this6.resetIdleTimer();\n      });\n      return this.prop.animationPromise;\n    }\n    /**\n     * @summary Stops the ongoing animation\n     * @description The return value is a Promise because the is no guaranty the animation can be stopped synchronously.\n     * @returns {Promise} Resolved when the animation has ben cancelled\n     */;\n    _proto.stopAnimation = function stopAnimation() {\n      if (this.prop.animationPromise) {\n        this.prop.animationPromise.cancel();\n        return this.prop.animationPromise;\n      } else {\n        return Promise.resolve();\n      }\n    }\n    /**\n     * @summary Zooms to a specific level between `max_fov` and `min_fov`\n     * @param {number} level - new zoom level from 0 to 100\n     * @fires PSV.zoom-updated\n     */;\n    _proto.zoom = function zoom(level) {\n      this.dynamics.zoom.setValue(level);\n    }\n    /**\n     * @summary Increases the zoom level\n     * @param {number} [step=1]\n     */;\n    _proto.zoomIn = function zoomIn(step) {\n      if (step === void 0) {\n        step = 1;\n      }\n      this.dynamics.zoom.step(step);\n    }\n    /**\n     * @summary Decreases the zoom level\n     * @param {number} [step=1]\n     */;\n    _proto.zoomOut = function zoomOut(step) {\n      if (step === void 0) {\n        step = 1;\n      }\n      this.dynamics.zoom.step(-step);\n    }\n    /**\n     * @summary Resizes the viewer\n     * @param {PSV.CssSize} size\n     */;\n    _proto.resize = function resize(size) {\n      var _this7 = this;\n      ['width', 'height'].forEach(function (dim) {\n        if (size && size[dim]) {\n          if (/^[0-9.]+$/.test(size[dim])) {\n            size[dim] += 'px';\n          }\n          _this7.parent.style[dim] = size[dim];\n        }\n      });\n      this.autoSize();\n    }\n    /**\n     * @summary Enters the fullscreen mode\n     * @fires PSV.fullscreen-updated\n     */;\n    _proto.enterFullscreen = function enterFullscreen() {\n      if (SYSTEM.fullscreenEvent) {\n        requestFullscreen(this.container);\n      } else {\n        this.container.classList.add('psv-container--fullscreen');\n        this.autoSize();\n        this.eventsHandler.__fullscreenToggled(true);\n      }\n    }\n    /**\n     * @summary Exits the fullscreen mode\n     * @fires PSV.fullscreen-updated\n     */;\n    _proto.exitFullscreen = function exitFullscreen$1() {\n      if (this.isFullscreenEnabled()) {\n        if (SYSTEM.fullscreenEvent) {\n          exitFullscreen();\n        } else {\n          this.container.classList.remove('psv-container--fullscreen');\n          this.autoSize();\n          this.eventsHandler.__fullscreenToggled(false);\n        }\n      }\n    }\n    /**\n     * @summary Enters or exits the fullscreen mode\n     * @fires PSV.fullscreen-updated\n     */;\n    _proto.toggleFullscreen = function toggleFullscreen() {\n      if (!this.isFullscreenEnabled()) {\n        this.enterFullscreen();\n      } else {\n        this.exitFullscreen();\n      }\n    }\n    /**\n     * @summary Enables the keyboard controls (done automatically when entering fullscreen)\n     */;\n    _proto.startKeyboardControl = function startKeyboardControl() {\n      this.eventsHandler.enableKeyboard();\n    }\n    /**\n     * @summary Disables the keyboard controls (done automatically when exiting fullscreen)\n     */;\n    _proto.stopKeyboardControl = function stopKeyboardControl() {\n      this.eventsHandler.disableKeyboard();\n    }\n    /**\n     * @summary Subscribes to events on objects in the scene\n     * @param {string} userDataKey - only objects with the following `userData` will be emitted\n     * @param {EventListener} listener - must implement `handleEvent`\n     * @return {function} call to stop the subscription\n     * @package\n     */;\n    _proto.observeObjects = function observeObjects(userDataKey, listener) {\n      var _this8 = this;\n      this.prop.objectsObservers[userDataKey] = {\n        listener: listener\n      };\n      return function () {\n        delete _this8.prop.objectsObservers[userDataKey];\n      };\n    }\n    /**\n     * @summary Stops all current animations\n     * @returns {Promise}\n     * @package\n     */;\n    _proto.__stopAll = function __stopAll() {\n      this.trigger(EVENTS.STOP_ALL);\n      this.disableIdleTimer();\n      this.stopAutorotate();\n      return this.stopAnimation();\n    }\n    /**\n     * @summary Recomputes dynamics speeds\n     * @private\n     */;\n    _proto.__updateSpeeds = function __updateSpeeds() {\n      this.dynamics.zoom.setSpeed(this.config.zoomSpeed * 50);\n      this.dynamics.position.setSpeed(three.MathUtils.degToRad(this.config.moveSpeed * 50));\n    };\n    return Viewer;\n  }(uevent.EventEmitter);\n  exports.AbstractAdapter = AbstractAdapter;\n  exports.AbstractButton = AbstractButton;\n  exports.AbstractComponent = AbstractComponent;\n  exports.AbstractPlugin = AbstractPlugin;\n  exports.CONSTANTS = constants;\n  exports.DEFAULTS = DEFAULTS;\n  exports.EquirectangularAdapter = EquirectangularAdapter;\n  exports.PSVError = PSVError;\n  exports.SYSTEM = SYSTEM;\n  exports.Viewer = Viewer;\n  exports.registerButton = registerButton;\n  exports.utils = index;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["PSVError","message","Error","captureStackTrace","stack","prototype","Object","create","name","constructor","AbstractAdapter","psv","_proto","destroy","supportsTransition","panorama","supportsPreload","loadTexture","newPanoData","useXmpPanoData","createMesh","scale","setTexture","mesh","textureData","transition","setTextureOpacity","opacity","disposeTexture","setOverlay","createOverlayMaterial","_temp","_extends2","_ref","additionalUniforms","overrideVertexShader","three","ShaderMaterial","uniforms","_extends","OVERLAY_UNIFORMS","value","Texture","overlay","globalOpacity","overlayOpacity","vertexShader","fragmentShader","id","supportsDownload","supportsOverlay","DEFAULT_TRANSITION","ANIMATION_MIN_DURATION","MOVE_THRESHOLD","DBLCLICK_DELAY","LONGTOUCH_DELAY","TWOFINGERSOVERLAY_DELAY","CTRLZOOM_TIMEOUT","INERTIA_WINDOW","SPHERE_RADIUS","VIEWER_DATA","MESH_USER_DATA","ACTIONS","ROTATE_LAT_UP","ROTATE_LAT_DOWN","ROTATE_LONG_RIGHT","ROTATE_LONG_LEFT","ZOOM_IN","ZOOM_OUT","TOGGLE_AUTOROTATE","EVENTS","AUTOROTATE","BEFORE_RENDER","BEFORE_ROTATE","CLICK","CLOSE_PANEL","CONFIG_CHANGED","DOUBLE_CLICK","FULLSCREEN_UPDATED","HIDE_NOTIFICATION","HIDE_OVERLAY","HIDE_TOOLTIP","KEY_PRESS","LOAD_PROGRESS","OPEN_PANEL","PANORAMA_LOADED","POSITION_UPDATED","READY","RENDER","SHOW_NOTIFICATION","SHOW_OVERLAY","SHOW_TOOLTIP","SIZE_UPDATED","STOP_ALL","ZOOM_UPDATED","CHANGE_EVENTS","GET_ANIMATE_POSITION","GET_ROTATE_POSITION","OBJECT_EVENTS","ENTER_OBJECT","HOVER_OBJECT","LEAVE_OBJECT","IDS","MENU","TWO_FINGERS","CTRL_ZOOM","ERROR","DESCRIPTION","EASINGS","linear","t","inQuad","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","Math","cos","PI","outSine","sin","inOutSine","inExpo","pow","outExpo","inOutExpo","inCirc","sqrt","outCirc","inOutCirc","KEY_CODES","Enter","Control","Escape","Space","PageUp","PageDown","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","Plus","Minus","LOCALSTORAGE_TOUCH_SUPPORT","SYSTEM","loaded","pixelRatio","isWebGLSupported","isTouchEnabled","maxTextureWidth","mouseWheelEvent","fullscreenEvent","load","ctx","getWebGLCtx","window","devicePixelRatio","getMaxTextureWidth","getMouseWheelEvent","getFullscreenEvent","maxCanvasWidth","getMaxCanvasWidth","canvas","document","createElement","names","context","getContext","some","e","initial","navigator","maxTouchPoints","localStorage","promise","Promise","resolve","clear","listenerMouse","listenerTouch","listenerTimeout","addEventListener","listenerTimeoutId","setTimeout","removeEventListener","clearTimeout","getParameter","MAX_TEXTURE_SIZE","maxWidth","width","height","fillStyle","fillRect","getImageData","data","onmousewheel","undefined","FULLSCREEN_EVT_MAP","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","validExits","keys","filter","exit","length","toggleClass","element","className","active","classList","toggle","add","remove","addClasses","_element$classList","apply","split","removeClasses","_element$classList2","hasParent","el","parent","test","parentNode","getClosest","selector","matches","SVGElement","parentElement","getPosition","left","top","offsetLeft","scrollLeft","clientLeft","offsetTop","scrollTop","clientTop","offsetParent","isFullscreenEnabled","elt","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","call","getStyle","prop","getComputedStyle","normalizeWheel","event","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","spinX","spinY","pixelX","pixelY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","bound","x","min","max","MathUtils","clamp","loop","result","isPowerOfTwo","sum","array","reduce","a","b","distance","p1","p2","y","getShortestArc","from","to","tCandidates","candidate","newCandidate","abs","Infinity","getAngle","position1","position2","acos","latitude","longitude","greatArcDistance","λ1","φ1","λ2","φ2","dasherize","str","replace","s","i","toLowerCase","throttle","func","wait","self","args","timeout","previous","later","Date","now","remaining","arguments","isPlainObject","obj","getPrototypeOf","proto","toString","deepmerge","target","src","first","merge","Array","isArray","forEach","key","clone","isEmpty","each","object","callback","isNil","val","firstNonNull","_len","values","_key","_i","_values","deepEqual","obj1","obj2","isObject","_i2","_Object$keys","pluginInterop","plugin","_arr","concat","entries","_arr$_i","p","getAbortError","error","isAbortError","err","logWarn","console","warn","isExtendedPosition","key1","key2","getXMPValue","attr","match","parseInt","isNaN","_val","CSS_POSITIONS","bottom","right","center","parsePosition","tokens","toLocaleLowerCase","slice","xFirst","map","token","reverse","parsed","join","parseFloat","X_VALUES","Y_VALUES","POS_VALUES","CENTER","cleanPosition","_ref2","allowCenter","cssOrder","indexOf","positionIsOrdered","parseSpeed","speed","speedStr","trim","speedValue","speedUnit","degToRad","parseAngle","angle","zeroCenter","halfCircle","unit","createTexture","img","texture","needsUpdate","minFilter","LinearFilter","generateMipmaps","quaternion","Quaternion","applyEulerInverse","vector","euler","setFromEuler","invert","applyQuaternion","Animation","options","_this","__callbacks","easing","__start","delay","__delayTimeout","__animationFrame","requestAnimationFrame","__run","__resolved","timestamp","_this2","__cancelled","progress","duration","current","properties","start","end","onTick","__resolve","cb","then","onFulfilled","_this3","push","cancel","cancelAnimationFrame","Dynamic","fn","defaultValue","loopValue","mode","STOP","speedMult","currentSpeed","setSpeed","goto","position","POSITION","step","_step","roll","INFINITE","stop","setValue","update","elapsed","dstStop","targetSpeed","next","MultiDynamic","dynamics","d","positions","steps","rolls","_this4","hasUpdates","dynamic","_createClass","get","Slider","_EventEmitter","_inheritsLoose","container","direction","onUpdate","mousedown","mouseover","_assertThisInitialized","handleEvent","type","stopPropagation","__onMouseDown","__onMouseEnter","__onMouseLeave","__onTouchStart","__onMouseMove","__onTouchMove","__onMouseUp","__onTouchEnd","evt","__update","changedTouches","moving","boundingClientRect","getBoundingClientRect","cursor","vertical","pos","size","click","VERTICAL","uevent","EventEmitter","HORIZONTAL","EquirectangularAdapter","_AbstractAdapter","config","resolution","SPHERE_SEGMENTS","SPHERE_HORIZONTAL_SEGMENTS","useXmpData","reject","__loadXMP","loader","setProgress","xmpPanoData","textureLoader","loadImage","_newPanoData","_newPanoData2","_newPanoData3","_newPanoData4","_newPanoData5","_newPanoData6","_newPanoData7","_newPanoData8","_newPanoData9","panoData","fullWidth","fullHeight","croppedWidth","croppedHeight","croppedX","croppedY","poseHeading","posePitch","poseRoll","__createEquirectangularTexture","onProgress","loadFile","blob","__loadBlobAsString","binary","substring","includes","reader","FileReader","onload","onerror","readAsText","ratio","resizedPanoData","buffer","drawImage","geometry","SphereGeometry","material","Mesh","__setUniform","transparent","_textureData$texture","dispose","uniform","AbstractComponent","children","visible","appendChild","removeChild","childIdx","splice","child","refreshUi","every","uiRefresh","isVisible","hide","show","style","display","AbstractButton","_AbstractComponent","navbar","collapsable","tabbable","enabled","supported","collapsed","offsetWidth","icon","__setIcon","lang","title","tabIndex","onClick","checkSupported","supportedOrObject","isSupported","toggleActive","iconActive","refresh","disable","enable","collapse","uncollapse","innerHTML","querySelector","groupId","AutorotateButton","_AbstractButton","on","off","isAutorotateEnabled","autorotateIdle","resetIdleTimer","toggleAutorotate","play","playActive","CustomButton","random","substr","content","MODE_NOTIF","MODE_PANEL","DescriptionButton","closed","__close","caption","getButton","captionHidden","hasDescription","description","__open","notification","panel","info","DownloadButton","link","href","downloadUrl","download","pop","adapter","FullscreenButton","toggleFullscreen","fullscreenIn","fullscreenOut","MenuButton","__hideMenu","__showMenu","MENU_TEMPLATE","BUTTON_DATA","noMargin","clickHandler","li","buttonId","dataset","menuIcon","buttons","dataKey","menu","button","PressHandler","time","down","getTime","up","getOrientedArrow","arrow","AbstractMoveButton","move","handler","__stopAll","MoveDownButton","_AbstractMoveButton","MoveLeftButton","MoveRightButton","MoveUpButton","AbstractZoomButton","zoom","ZoomInButton","_AbstractZoomButton","zoomIn","ZoomOutButton","zoomOut","ZoomRangeButton","mediaMinWidth","zoomRange","zoomValue","slider","__onSliderUpdate","ready","__moveZoomValue","getZoomLevel","once","level","AbstractPlugin","init","DEFAULTS","plugins","loadingImg","loadingTxt","fisheye","minFov","maxFov","defaultZoomLvl","defaultLong","defaultLat","sphereCorrection","moveSpeed","zoomSpeed","autorotateDelay","autorotateSpeed","autorotateLat","autorotateZoomLvl","moveInertia","mousewheel","mousemove","mousewheelCtrlKey","touchmoveTwoFingers","requestHeaders","canvasBackground","withCredentials","autorotate","fullscreen","twoFingers","ctrlZoom","loadError","keyboard","_keyboard","READONLY_OPTIONS","DEPRECATED_OPTIONS","captureCursor","CONFIG_PARSERS","_container","_adapter","_overlayOpacity","_defaultLong","_defaultLat","_defaultZoomLvl","_minFov","_maxFov","_lang","_keyboard2","_autorotateLat","_autorotateZoomLvl","_autorotateSpeed","_autorotateIdle","_fisheye","_plugins","getConfig","tempConfig","hasOwnProperty","NavbarCaption","contentWidth","setCaption","html","__refreshButton","_this$psv$navbar$getB","AVAILABLE_BUTTONS","AVAILABLE_GROUPS","registerButton","defaultPosition","unshift","_defaultPosition$spli","Navbar","setButtons","item","cleanedButtons","__cleanButtons","buttonCtor","warnNotFound","availableWidth","totalWidth","visibleButtons","collapsableButtons","Loader","clientWidth","tickness","lastChild","inner","round","maxHeight","clearRect","lineWidth","strokeStyle","beginPath","arc","stroke","trigger","Notification","contentId","Overlay","dissmisable","image","text","subtext","preventDefault","PANEL_MIN_WIDTH","Panel","mouseX","mouseY","keyHandler","resizer","closeBtn","wasVisible","_this2$content$queryS","focus","__startResize","__resize","touches","clientX","clientY","AbstractService","vector2","Vector2","vector3","Vector3","eulerZero","Euler","DataHelper","_AbstractService","fovToZoomLevel","fov","temp","zoomLevelToFov","vFovToHFov","vFov","radToDeg","atan","tan","aspect","speedToDuration","textureCoordsToSphericalCoords","point","relativeX","relativeY","equals","renderer","rotation","meshContainer","sphericalCoordsToVector3","applyEuler","vector3ToSphericalCoords","sphericalCoordsToTextureCoords","relativeLong","relativeLat","z","phi","theta","atan2","viewerCoordsToVector3","viewerPoint","sphereIntersect","getIntersections","userData","vector3ToViewerCoords","vectorClone","project","camera","sphericalCoordsToViewerCoords","raycaster","setFromCamera","intersectObjects","scene","littlePlanet","cleanSphereCorrection","pan","tilt","cleanPanoramaPose","IDLE","MOVING","INERTIA","EventsHandler","state","moveThreshold","keyboardEnabled","startMouseX","startMouseY","mouseHistory","pinchDist","ctrlKeyDown","dblclickData","dblclickTimeout","longtouchTimeout","twofingersTimeout","ctrlZoomTimeout","__onResize","autoSize","passive","__onKeyDown","__onKeyUp","__fullscreenToggled","__onMouseWheel","enableKeyboard","disableKeyboard","e2","isDefaultPrevented","action","__stopMove","__move","objectsObservers","viewerPos","intersections","dataHelper","emit","observer","listener","CustomEvent","originalEvent","intersection","find","touch","__cancelLongTouch","__cancelTwoFingersOverlay","__startMoveZoom","gestureIcon","__moveZoom","_this5","mousewheelIcon","delta","force","startKeyboardControl","stopKeyboardControl","__resetMove","__logMouseMove","rightclick","__stopMoveInertia","stopAnimation","__click","_this6","curve","SplineCurve","getTangent","curr","total","prev","currentClientX","currentClientY","animationPromise","__applyMove","done","_this7","boundingRect","viewerX","viewerY","sphereIntersection","sphericalCoords","objects","o","textureCoords","textureX","textureY","NaN","hFov","currentPosition","rotate","last","Renderer","_this$mesh$userData","WebGLRenderer","alpha","antialias","setPixelRatio","domElement","Scene","PerspectiveCamera","Group","Raycaster","canvasContainer","background","setAnimationLoop","__cleanTHREEScene","__onSizeUpdated","__onZoomUpdated","__onPositionUpdated","setSize","updateProjectionMatrix","set","lookAt","copy","multiplyScalar","negate","__renderLoop","idleTime","startAutorotate","render","setPanoramaPose","cleanCorrection","setSphereCorrection","positionProvided","zoomProvided","group","verticalAxis","rotateOnWorldAxis","horizontalAxis","cross","getWorldDirection","normalize","animation","completed","traverse","TextureLoader","FileLoader","setResponseType","setWithCredentials","setRequestHeader","abortLoading","url","lengthComputable","newProgress","createElementNS","URL","revokeObjectURL","createObjectURL","preloadPanorama","STATE","NONE","SHOWING","HIDING","Tooltip","__onTransitionEnd","rect","__waitImages","box","posClass","arrowTop","arrowLeft","__computeTooltipPosition","swapY","swapX","ordered","newPos","propertyName","offsetSide","border","offsetX","offsetY","images","querySelectorAll","promises","all","TooltipRenderer","testTooltip","tooltip","Cache","Viewer","autorotateEnabled","loadingPromise","getElementById","eventsHandler","__updateSpeeds","__resizeRefresh","resize","opts","setPanorama","performance","reason","getPlugin","pluginId","pluginCtor","getSize","isFullscreenEnabled$1","clientHeight","path","_this$prop$transition","transitionAnimation","opt","showLoader","hideError","showError","r","setOptions","rawConfig","setOption","option","_this$setOptions","disableIdleTimer","stopAutorotate","errorIcon","change","animate","animProperties","tOffset","dZoom","dim","enterFullscreen","exitFullscreen$1","observeObjects","userDataKey","_this8"],"sources":["C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\PSVError.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\adapters\\AbstractAdapter.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\data\\constants.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\data\\system.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\browser.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\math.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\misc.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\psv.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\Animation.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\Dynamic.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\MultiDynamic.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\Slider.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\index.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\adapters\\equirectangular\\index.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\AbstractComponent.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\AbstractButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\AutorotateButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\CustomButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\DescriptionButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\DownloadButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\FullscreenButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\MenuButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\utils\\PressHandler.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\AbstractMoveButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\MoveDownButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\MoveLeftButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\MoveRightButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\MoveUpButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\AbstractZoomButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\ZoomInButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\ZoomOutButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\buttons\\ZoomRangeButton.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\plugins\\AbstractPlugin.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\data\\config.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\NavbarCaption.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Navbar.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Loader.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Notification.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Overlay.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Panel.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\AbstractService.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\DataHelper.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\EventsHandler.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\Renderer.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\TextureLoader.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\components\\Tooltip.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\services\\TooltipRenderer.js","C:\\Project Personal\\Glide-Vr\\Glide-VR\\node_modules\\photo-sphere-viewer\\src\\Viewer.js"],"sourcesContent":["/**\n * @summary Custom error used in the lib\n * @param {string} message\n * @constructor\n * @memberOf PSV\n */\nfunction PSVError(message) {\n  this.message = message;\n\n  // Use V8's native method if available, otherwise fallback\n  if ('captureStackTrace' in Error) {\n    Error.captureStackTrace(this, PSVError);\n  }\n  else {\n    this.stack = (new Error()).stack;\n  }\n}\n\nPSVError.prototype = Object.create(Error.prototype);\nPSVError.prototype.name = 'PSVError';\nPSVError.prototype.constructor = PSVError;\n\nexport { PSVError };\n","import { ShaderMaterial, Texture } from 'three';\nimport { PSVError } from '../PSVError';\n\n/**\n * @namespace PSV.adapters\n */\n\n\n/**\n * @summary Base adapters class\n * @memberof PSV.adapters\n * @abstract\n */\nexport class AbstractAdapter {\n\n  /**\n   * @summary Unique identifier of the adapter\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static id = null;\n\n  /**\n   * @summary Indicates if the adapter supports panorama download natively\n   * @type {boolean}\n   * @readonly\n   * @static\n   */\n  static supportsDownload = false;\n\n  /**\n   * @summary Indicated if the adapter can display an additional transparent image above the panorama\n   * @type {boolean}\n   */\n  static supportsOverlay = false;\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    /**\n     * @summary Reference to main controller\n     * @type {PSV.Viewer}\n     * @readonly\n     */\n    this.psv = psv;\n  }\n\n  /**\n   * @summary Destroys the adapter\n   */\n  destroy() {\n    delete this.psv;\n  }\n\n  /**\n   * @summary Indicates if the adapter supports transitions between panoramas\n   * @param {*} panorama\n   * @return {boolean}\n   */\n  supportsTransition(panorama) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n   * @summary Indicates if the adapter supports preload of a panorama\n   * @param {*} panorama\n   * @return {boolean}\n   */\n  supportsPreload(panorama) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n   * @abstract\n   * @summary Loads the panorama texture(s)\n   * @param {*} panorama\n   * @param {PSV.PanoData | PSV.PanoDataProvider} [newPanoData]\n   * @param {boolean} [useXmpPanoData]\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama, newPanoData, useXmpPanoData) { // eslint-disable-line no-unused-vars\n    throw new PSVError('loadTexture not implemented');\n  }\n\n  /**\n   * @abstract\n   * @summary Creates the cube mesh\n   * @param {number} [scale=1]\n   * @returns {external:THREE.Mesh}\n   */\n  createMesh(scale = 1) { // eslint-disable-line no-unused-vars\n    throw new PSVError('createMesh not implemented');\n  }\n\n  /**\n   * @abstract\n   * @summary Applies the texture to the mesh\n   * @param {external:THREE.Mesh} mesh\n   * @param {PSV.TextureData} textureData\n   * @param {boolean} [transition=false]\n   */\n  setTexture(mesh, textureData, transition = false) { // eslint-disable-line no-unused-vars\n    throw new PSVError('setTexture not implemented');\n  }\n\n  /**\n   * @abstract\n   * @summary Changes the opacity of the mesh\n   * @param {external:THREE.Mesh} mesh\n   * @param {number} opacity\n   */\n  setTextureOpacity(mesh, opacity) { // eslint-disable-line no-unused-vars\n    throw new PSVError('setTextureOpacity not implemented');\n  }\n\n  /**\n   * @abstract\n   * @summary Clear a loaded texture from memory\n   * @param {PSV.TextureData} textureData\n   */\n  disposeTexture(textureData) { // eslint-disable-line no-unused-vars\n    throw new PSVError('disposeTexture not implemented');\n  }\n\n  /**\n   * @abstract\n   * @summary Applies the overlay to the mesh\n   * @param {external:THREE.Mesh} mesh\n   * @param {PSV.TextureData} textureData\n   * @param {number} opacity\n   */\n  setOverlay(mesh, textureData, opacity) { // eslint-disable-line no-unused-vars\n    throw new PSVError('setOverlay not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  static OVERLAY_UNIFORMS = {\n    panorama      : 'panorama',\n    overlay       : 'overlay',\n    globalOpacity : 'globalOpacity',\n    overlayOpacity: 'overlayOpacity',\n  };\n\n  /**\n   * @internal\n   */\n  static createOverlayMaterial({ additionalUniforms, overrideVertexShader } = {}) {\n    return new ShaderMaterial({\n      uniforms: {\n        ...additionalUniforms,\n        [AbstractAdapter.OVERLAY_UNIFORMS.panorama]      : { value: new Texture() },\n        [AbstractAdapter.OVERLAY_UNIFORMS.overlay]       : { value: new Texture() },\n        [AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity] : { value: 1.0 },\n        [AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity]: { value: 1.0 },\n      },\n\n      vertexShader: overrideVertexShader || `\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix *  modelViewMatrix * vec4( position, 1.0 );\n}`,\n\n      fragmentShader: `\nuniform sampler2D ${AbstractAdapter.OVERLAY_UNIFORMS.panorama};\nuniform sampler2D ${AbstractAdapter.OVERLAY_UNIFORMS.overlay};\nuniform float ${AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity};\nuniform float ${AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity};\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 tColor1 = texture2D( ${AbstractAdapter.OVERLAY_UNIFORMS.panorama}, vUv );\n  vec4 tColor2 = texture2D( ${AbstractAdapter.OVERLAY_UNIFORMS.overlay}, vUv );\n  gl_FragColor = vec4(\n    mix( tColor1.rgb, tColor2.rgb, tColor2.a * ${AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity} ),\n    ${AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity}\n  );\n}`,\n    });\n  }\n\n}\n","/**\n * @namespace PSV.constants\n */\n\n/**\n * @summary Default duration of the transition between panoramas\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const DEFAULT_TRANSITION = 1500;\n\n/**\n * @summary Minimum duration of the animations created with {@link Viewer#animate}\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const ANIMATION_MIN_DURATION = 500;\n\n/**\n * @summary Number of pixels bellow which a mouse move will be considered as a click\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const MOVE_THRESHOLD = 4;\n\n/**\n * @summary Delay in milliseconds between two clicks to consider a double click\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const DBLCLICK_DELAY = 300;\n\n/**\n * @summary Delay in milliseconds to emulate a long touch\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const LONGTOUCH_DELAY = 500;\n\n/**\n * @summary Delay in milliseconds to for the two fingers overlay to appear\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const TWOFINGERSOVERLAY_DELAY = 100;\n\n/**\n * @summary Duration in milliseconds of the \"ctrl zoom\" overlay\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const CTRLZOOM_TIMEOUT = 2000;\n\n/**\n * @summary Time size of the mouse position history used to compute inertia\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const INERTIA_WINDOW = 300;\n\n/**\n * @summary Radius of the THREE.SphereGeometry, Half-length of the THREE.BoxGeometry\n * @memberOf PSV.constants\n * @type {number}\n * @constant\n */\nexport const SPHERE_RADIUS = 10;\n\n/**\n * @summary Property name added to viewer element\n * @memberOf PSV.constants\n * @type {string}\n * @constant\n */\nexport const VIEWER_DATA = 'photoSphereViewer';\n\n/**\n * @summary Property added the the main Mesh object\n * @memberOf PSV.constants\n * @type {string}\n * @constant\n */\nexport const MESH_USER_DATA = 'psvSphere';\n\n/**\n * @summary Available actions\n * @memberOf PSV.constants\n * @enum {string}\n * @constant\n */\nexport const ACTIONS = {\n  ROTATE_LAT_UP    : 'rotateLatitudeUp',\n  ROTATE_LAT_DOWN  : 'rotateLatitudeDown',\n  ROTATE_LONG_RIGHT: 'rotateLongitudeRight',\n  ROTATE_LONG_LEFT : 'rotateLongitudeLeft',\n  ZOOM_IN          : 'zoomIn',\n  ZOOM_OUT         : 'zoomOut',\n  TOGGLE_AUTOROTATE: 'toggleAutorotate',\n};\n\n/**\n * @summary Available events names\n * @memberOf PSV.constants\n * @enum {string}\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event autorotate\n   * @memberof PSV\n   * @summary Triggered when the automatic rotation is enabled/disabled\n   * @param {boolean} enabled\n   */\n  AUTOROTATE        : 'autorotate',\n  /**\n   * @event before-render\n   * @memberof PSV\n   * @summary Triggered before a render, used to modify the view\n   * @param {number} timestamp - time provided by requestAnimationFrame\n   * @param {number} elapsed - time elapsed from the previous frame\n   */\n  BEFORE_RENDER     : 'before-render',\n  /**\n   * @event before-rotate\n   * @memberOf PSV\n   * @summary Triggered before a rotate operation, can be cancelled\n   * @param {PSV.ExtendedPosition}\n   */\n  BEFORE_ROTATE     : 'before-rotate',\n  /**\n   * @event click\n   * @memberof PSV\n   * @summary Triggered when the user clicks on the viewer (everywhere excluding the navbar and the side panel)\n   * @param {PSV.ClickData} data\n   */\n  CLICK             : 'click',\n  /**\n   * @event close-panel\n   * @memberof PSV\n   * @summary Triggered when the panel is closed\n   * @param {string} [id]\n   */\n  CLOSE_PANEL       : 'close-panel',\n  /**\n   * @event config-changed\n   * @memberOf PSV\n   * @summary Triggered after a call to setOption/setOptions\n   * @param {string[]} name of changed options\n   */\n  CONFIG_CHANGED    : 'config-changed',\n  /**\n   * @event dblclick\n   * @memberof PSV\n   * @summary Triggered when the user double clicks on the viewer. The simple `click` event is always fired before `dblclick`\n   * @param {PSV.ClickData} data\n   */\n  DOUBLE_CLICK      : 'dblclick',\n  /**\n   * @event fullscreen-updated\n   * @memberof PSV\n   * @summary Triggered when the fullscreen mode is enabled/disabled\n   * @param {boolean} enabled\n   */\n  FULLSCREEN_UPDATED: 'fullscreen-updated',\n  /**\n   * @event hide-notification\n   * @memberof PSV\n   * @summary Triggered when the notification is hidden\n   * @param {string} [id]\n   */\n  HIDE_NOTIFICATION : 'hide-notification',\n  /**\n   * @event hide-overlay\n   * @memberof PSV\n   * @summary Triggered when the overlay is hidden\n   * @param {string} [id]\n   */\n  HIDE_OVERLAY      : 'hide-overlay',\n  /**\n   * @event hide-tooltip\n   * @memberof PSV\n   * @summary Triggered when the tooltip is hidden\n   * @param {*} Data associated to this tooltip\n   */\n  HIDE_TOOLTIP      : 'hide-tooltip',\n  /**\n   * @event key-press\n   * @memberof PSV\n   * @summary Triggered when a key is pressed, can be cancelled\n   * @param {string} key\n   */\n  KEY_PRESS         : 'key-press',\n  /**\n   * @event load-progress\n   * @memberof PSV\n   * @summary Triggered when the loader value changes\n   * @param {number} value from 0 to 100\n   */\n  LOAD_PROGRESS     : 'load-progress',\n  /**\n   * @event open-panel\n   * @memberof PSV\n   * @summary Triggered when the panel is opened\n   * @param {string} [id]\n   */\n  OPEN_PANEL        : 'open-panel',\n  /**\n   * @event panorama-loaded\n   * @memberof PSV\n   * @summary Triggered when a panorama image has been loaded\n   * @param {PSV.TextureData} textureData\n   */\n  PANORAMA_LOADED   : 'panorama-loaded',\n  /**\n   * @event position-updated\n   * @memberof PSV\n   * @summary Triggered when the view longitude and/or latitude changes\n   * @param {PSV.Position} position\n   */\n  POSITION_UPDATED  : 'position-updated',\n  /**\n   * @event ready\n   * @memberof PSV\n   * @summary Triggered when the panorama image has been loaded and the viewer is ready to perform the first render\n   */\n  READY             : 'ready',\n  /**\n   * @event render\n   * @memberof PSV\n   * @summary Triggered on each viewer render, **this event is triggered very often**\n   */\n  RENDER            : 'render',\n  /**\n   * @event show-notification\n   * @memberof PSV\n   * @summary Triggered when the notification is shown\n   * @param {string} [id]\n   */\n  SHOW_NOTIFICATION : 'show-notification',\n  /**\n   * @event show-overlay\n   * @memberof PSV\n   * @summary Triggered when the overlay is shown\n   * @param {string} [id]\n   */\n  SHOW_OVERLAY      : 'show-overlay',\n  /**\n   * @event show-tooltip\n   * @memberof PSV\n   * @summary Triggered when the tooltip is shown\n   * @param {*} Data associated to this tooltip\n   * @param {PSV.components.Tooltip} Instance of the tooltip\n   */\n  SHOW_TOOLTIP      : 'show-tooltip',\n  /**\n   * @event size-updated\n   * @memberof PSV\n   * @summary Triggered when the viewer size changes\n   * @param {PSV.Size} size\n   */\n  SIZE_UPDATED      : 'size-updated',\n  /**\n   * @event stop-all\n   * @memberof PSV\n   * @summary Triggered when all current animations are stopped\n   */\n  STOP_ALL          : 'stop-all',\n  /**\n   * @event zoom-updated\n   * @memberof PSV\n   * @summary Triggered when the zoom level changes\n   * @param {number} zoomLevel\n   */\n  ZOOM_UPDATED      : 'zoom-updated',\n};\n\n/**\n * @summary Available change events names\n * @memberOf PSV.constants\n * @enum {string}\n * @constant\n */\nexport const CHANGE_EVENTS = {\n  /**\n   * @event get-animate-position\n   * @memberof PSV\n   * @param {Position} position\n   * @returns {Position}\n   * @summary Called to alter the target position of an animation\n   */\n  GET_ANIMATE_POSITION: 'get-animate-position',\n  /**\n   * @event get-rotate-position\n   * @memberof PSV\n   * @param {Position} position\n   * @returns {Position}\n   * @summary Called to alter the target position of a rotation\n   */\n  GET_ROTATE_POSITION : 'get-rotate-position',\n};\n\n/**\n * @summary Special events emitted to listener using {@link Viewer#observeObjects}\n * @memberOf PSV.constants\n * @constant\n * @package\n */\nexport const OBJECT_EVENTS = {\n  ENTER_OBJECT: 'enter-object',\n  HOVER_OBJECT: 'hover-object',\n  LEAVE_OBJECT: 'leave-object',\n};\n\n/**\n * @summary Internal identifiers for various stuff\n * @memberOf PSV.constants\n * @enum {string}\n * @constant\n */\nexport const IDS = {\n  MENU       : 'menu',\n  TWO_FINGERS: 'twoFingers',\n  CTRL_ZOOM  : 'ctrlZoom',\n  ERROR      : 'error',\n  DESCRIPTION: 'description',\n};\n\n/* eslint-disable */\n// @formatter:off\n/**\n * @summary Collection of easing functions\n * @memberOf PSV.constants\n * @see {@link https://gist.github.com/frederickk/6165768}\n * @type {Object<string, Function>}\n * @constant\n */\nexport const EASINGS = {\n  linear    : (t) => t,\n\n  inQuad    : (t) => t*t,\n  outQuad   : (t) => t*(2-t),\n  inOutQuad : (t) => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n\n  inCubic   : (t) => t*t*t,\n  outCubic  : (t) => (--t)*t*t+1,\n  inOutCubic: (t) => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n\n  inQuart   : (t) => t*t*t*t,\n  outQuart  : (t) => 1-(--t)*t*t*t,\n  inOutQuart: (t) => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n\n  inQuint   : (t) => t*t*t*t*t,\n  outQuint  : (t) => 1+(--t)*t*t*t*t,\n  inOutQuint: (t) => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t,\n\n  inSine    : (t) => 1-Math.cos(t*(Math.PI/2)),\n  outSine   : (t) => Math.sin(t*(Math.PI/2)),\n  inOutSine : (t) => .5-.5*Math.cos(Math.PI*t),\n\n  inExpo    : (t) => Math.pow(2, 10*(t-1)),\n  outExpo   : (t) => 1-Math.pow(2, -10*t),\n  inOutExpo : (t) => (t=t*2-1)<0 ? .5*Math.pow(2, 10*t) : 1-.5*Math.pow(2, -10*t),\n\n  inCirc    : (t) => 1-Math.sqrt(1-t*t),\n  outCirc   : (t) => Math.sqrt(1-(t-1)*(t-1)),\n  inOutCirc : (t) => (t*=2)<1 ? .5-.5*Math.sqrt(1-t*t) : .5+.5*Math.sqrt(1-(t-=2)*t)\n};\n// @formatter:on\n/* eslint-enable */\n\n/**\n * @summary Subset of key codes\n * @memberOf PSV.constants\n * @type {Object<string, string>}\n * @constant\n */\nexport const KEY_CODES = {\n  Enter     : 'Enter',\n  Control   : 'Control',\n  Escape    : 'Escape',\n  Space     : ' ',\n  PageUp    : 'PageUp',\n  PageDown  : 'PageDown',\n  ArrowLeft : 'ArrowLeft',\n  ArrowUp   : 'ArrowUp',\n  ArrowRight: 'ArrowRight',\n  ArrowDown : 'ArrowDown',\n  Delete    : 'Delete',\n  Plus      : '+',\n  Minus     : '-',\n};\n","import { PSVError } from '../PSVError';\nimport { VIEWER_DATA } from './constants';\n\nconst LOCALSTORAGE_TOUCH_SUPPORT = `${VIEWER_DATA}_touchSupport`;\n\n/**\n * @summary General information about the system\n * @constant\n * @memberOf PSV\n * @property {boolean} loaded - Indicates if the system data has been loaded\n * @property {Function} load - Loads the system if not already loaded\n * @property {number} pixelRatio\n * @property {boolean} isWebGLSupported\n * @property {number} maxCanvasWidth\n * @property {string} mouseWheelEvent\n * @property {string} fullscreenEvent\n * @property {Function} getMaxCanvasWidth - Returns the max width of a canvas allowed by the browser\n * @property {{initial: boolean, promise: Promise<boolean>}} isTouchEnabled\n */\nexport const SYSTEM = {\n  loaded          : false,\n  pixelRatio      : 1,\n  isWebGLSupported: false,\n  isTouchEnabled  : null,\n  maxTextureWidth : 0,\n  mouseWheelEvent : null,\n  fullscreenEvent : null,\n};\n\n/**\n * @summary Loads the system if not already loaded\n */\nSYSTEM.load = () => {\n  if (!SYSTEM.loaded) {\n    const ctx = getWebGLCtx();\n\n    SYSTEM.loaded = true;\n    SYSTEM.pixelRatio = window.devicePixelRatio || 1;\n    SYSTEM.isWebGLSupported = ctx != null;\n    SYSTEM.isTouchEnabled = isTouchEnabled();\n    SYSTEM.maxTextureWidth = getMaxTextureWidth(ctx);\n    SYSTEM.mouseWheelEvent = getMouseWheelEvent();\n    SYSTEM.fullscreenEvent = getFullscreenEvent();\n  }\n};\n\nlet maxCanvasWidth = null;\nSYSTEM.getMaxCanvasWidth = () => {\n  if (maxCanvasWidth === null) {\n    maxCanvasWidth = getMaxCanvasWidth(SYSTEM.maxTextureWidth);\n  }\n  return maxCanvasWidth;\n};\n\n/**\n * @summary Tries to return a canvas webgl context\n * @returns {WebGLRenderingContext}\n * @private\n */\nfunction getWebGLCtx() {\n  const canvas = document.createElement('canvas');\n  const names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n  let context = null;\n\n  if (!canvas.getContext) {\n    return null;\n  }\n\n  if (names.some((name) => {\n    try {\n      context = canvas.getContext(name);\n      return context !== null;\n    }\n    catch (e) {\n      return false;\n    }\n  })) {\n    return context;\n  }\n  else {\n    return null;\n  }\n}\n\n/**\n * @summary Detects if the user is using a touch screen\n * @returns {{initial: boolean, promise: Promise<boolean>}}\n * @private\n */\nfunction isTouchEnabled() {\n  let initial = ('ontouchstart' in window) || (navigator.maxTouchPoints > 0);\n  if (LOCALSTORAGE_TOUCH_SUPPORT in localStorage) {\n    initial = localStorage[LOCALSTORAGE_TOUCH_SUPPORT] === 'true';\n  }\n\n  const promise = new Promise((resolve) => {\n    let clear;\n\n    const listenerMouse = () => {\n      clear();\n      localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = false;\n      resolve(false);\n    };\n\n    const listenerTouch = () => {\n      clear();\n      localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = true;\n      resolve(true);\n    };\n\n    const listenerTimeout = () => {\n      clear();\n      localStorage[LOCALSTORAGE_TOUCH_SUPPORT] = initial;\n      resolve(initial);\n    };\n\n    window.addEventListener('mousedown', listenerMouse, false);\n    window.addEventListener('touchstart', listenerTouch, false);\n    const listenerTimeoutId = setTimeout(listenerTimeout, 10000);\n\n    clear = () => {\n      window.removeEventListener('mousedown', listenerMouse);\n      window.removeEventListener('touchstart', listenerTouch);\n      clearTimeout(listenerTimeoutId);\n    };\n  });\n\n  return { initial, promise };\n}\n\n/**\n * @summary Gets max texture width in WebGL context\n * @returns {number}\n * @private\n */\nfunction getMaxTextureWidth(ctx) {\n  if (ctx !== null) {\n    return ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n  }\n  else {\n    return 0;\n  }\n}\n\n/**\n * @summary Gets max canvas width supported by the browser.\n * We only test powers of 2 and height = width / 2 because that's what we need to generate WebGL textures\n * @param maxWidth\n * @return {number}\n * @private\n */\nfunction getMaxCanvasWidth(maxWidth) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = maxWidth;\n  canvas.height = maxWidth / 2;\n\n  while (canvas.width > 1024) {\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, 1, 1);\n\n    try {\n      if (ctx.getImageData(0, 0, 1, 1).data[0] > 0) {\n        return canvas.width;\n      }\n    }\n    catch (e) {\n      // continue\n    }\n\n    canvas.width /= 2;\n    canvas.height /= 2;\n  }\n\n  throw new PSVError('Unable to detect system capabilities');\n}\n\n/**\n * @summary Gets the event name for mouse wheel\n * @returns {string}\n * @private\n */\nfunction getMouseWheelEvent() {\n  if ('onwheel' in document.createElement('div')) { // Modern browsers support \"wheel\"\n    return 'wheel';\n  }\n  else if (document.onmousewheel !== undefined) { // Webkit and IE support at least \"mousewheel\"\n    return 'mousewheel';\n  }\n  else { // let's assume that remaining browsers are older Firefox\n    return 'DOMMouseScroll';\n  }\n}\n\n/**\n * @summary Map between fullsceen method and fullscreen event name\n * @type {Object<string, string>}\n * @readonly\n * @private\n */\nconst FULLSCREEN_EVT_MAP = {\n  exitFullscreen      : 'fullscreenchange',\n  webkitExitFullscreen: 'webkitfullscreenchange',\n  mozCancelFullScreen : 'mozfullscreenchange',\n  msExitFullscreen    : 'MSFullscreenChange',\n};\n\n\n/**\n * @summary  Gets the event name for fullscreen\n * @returns {string}\n * @private\n */\nfunction getFullscreenEvent() {\n  const validExits = Object.keys(FULLSCREEN_EVT_MAP).filter(exit => exit in document);\n\n  if (validExits.length) {\n    return FULLSCREEN_EVT_MAP[validExits[0]];\n  }\n  else {\n    return null;\n  }\n}\n","/**\n * @summary Toggles a CSS class\n * @memberOf PSV.utils\n * @param {HTMLElement|SVGElement} element\n * @param {string} className\n * @param {boolean} [active] - forced state\n */\nexport function toggleClass(element, className, active) {\n  if (active === undefined) {\n    element.classList.toggle(className);\n  }\n  else if (active) {\n    element.classList.add(className);\n  }\n  else if (!active) {\n    element.classList.remove(className);\n  }\n}\n\n/**\n * @summary Adds one or several CSS classes to an element\n * @memberOf PSV.utils\n * @param {HTMLElement} element\n * @param {string} className\n */\nexport function addClasses(element, className) {\n  element.classList.add(...className.split(' '));\n}\n\n/**\n * @summary Removes one or several CSS classes to an element\n * @memberOf PSV.utils\n * @param {HTMLElement} element\n * @param {string} className\n */\nexport function removeClasses(element, className) {\n  element.classList.remove(...className.split(' '));\n}\n\n/**\n * @summary Searches if an element has a particular parent at any level including itself\n * @memberOf PSV.utils\n * @param {HTMLElement} el\n * @param {HTMLElement} parent\n * @returns {boolean}\n */\nexport function hasParent(el, parent) {\n  let test = el;\n\n  do {\n    if (test === parent) {\n      return true;\n    }\n    test = test.parentNode;\n  } while (test);\n\n  return false;\n}\n\n/**\n * @summary Gets the closest parent (can by itself)\n * @memberOf PSV.utils\n * @param {HTMLElement|SVGElement} el\n * @param {string} selector\n * @returns {HTMLElement}\n */\nexport function getClosest(el, selector) {\n  // When el is document or window, the matches does not exist\n  if (!el?.matches) {\n    return null;\n  }\n\n  let test = el;\n\n  do {\n    if (test.matches(selector)) {\n      return test;\n    }\n    test = test instanceof SVGElement ? test.parentNode : test.parentElement;\n  } while (test);\n\n  return null;\n}\n\n/**\n * @summary Gets the position of an element in the viewer without reflow\n * @description Will gives the same result as getBoundingClientRect() as soon as there are no CSS transforms\n * @memberOf PSV.utils\n * @param {HTMLElement} el\n * @return {{left: number, top: number}}\n */\nexport function getPosition(el) {\n  let left = 0;\n  let top = 0;\n  let test = el;\n\n  while (test) {\n    left += (test.offsetLeft - test.scrollLeft + test.clientLeft);\n    top += (test.offsetTop - test.scrollTop + test.clientTop);\n    test = test.offsetParent;\n  }\n\n  return { left, top };\n}\n\n/**\n * @summary Detects if fullscreen is enabled\n * @memberOf PSV.utils\n * @param {HTMLElement} elt\n * @returns {boolean}\n */\nexport function isFullscreenEnabled(elt) {\n  return (document.fullscreenElement || document.webkitFullscreenElement) === elt;\n}\n\n/**\n * @summary Enters fullscreen mode\n * @memberOf PSV.utils\n * @param {HTMLElement} elt\n */\nexport function requestFullscreen(elt) {\n  (elt.requestFullscreen || elt.webkitRequestFullscreen).call(elt);\n}\n\n/**\n * @summary Exits fullscreen mode\n * @memberOf PSV.utils\n */\nexport function exitFullscreen() {\n  (document.exitFullscreen || document.webkitExitFullscreen).call(document);\n}\n\n/**\n * @summary Gets an element style\n * @memberOf PSV.utils\n * @param {HTMLElement} elt\n * @param {string} prop\n * @returns {*}\n */\nexport function getStyle(elt, prop) {\n  return window.getComputedStyle(elt, null)[prop];\n}\n\n/**\n * @summary Normalize mousewheel values accross browsers\n * @memberOf PSV.utils\n * @description From Facebook's Fixed Data Table\n * {@link https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js}\n * @copyright Facebook\n * @param {WheelEvent} event\n * @returns {{spinX: number, spinY: number, pixelX: number, pixelY: number}}\n */\nexport function normalizeWheel(event) {\n  const PIXEL_STEP = 10;\n  const LINE_HEIGHT = 40;\n  const PAGE_HEIGHT = 800;\n\n  let spinX = 0;\n  let spinY = 0;\n  let pixelX = 0;\n  let pixelY = 0;\n\n  // Legacy\n  if ('detail' in event) {\n    spinY = event.detail;\n  }\n  if ('wheelDelta' in event) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in event) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in event) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    spinX = spinY;\n    spinY = 0;\n  }\n\n  pixelX = spinX * PIXEL_STEP;\n  pixelY = spinY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pixelY = event.deltaY;\n  }\n  if ('deltaX' in event) {\n    pixelX = event.deltaX;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    // delta in LINE units\n    if (event.deltaMode === 1) {\n      pixelX *= LINE_HEIGHT;\n      pixelY *= LINE_HEIGHT;\n    }\n    // delta in PAGE units\n    else {\n      pixelX *= PAGE_HEIGHT;\n      pixelY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = (pixelX < 1) ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = (pixelY < 1) ? -1 : 1;\n  }\n\n  return { spinX, spinY, pixelX, pixelY };\n}\n","import { MathUtils } from 'three';\n\n/**\n * @deprecated use THREE.MathUtils.clamp\n */\nexport function bound(x, min, max) {\n  return MathUtils.clamp(x, min, max);\n}\n\n/**\n * @summary Ensure a value is within 0 and `max`\n * @param {number} value\n * @param {number} max\n * @return {number}\n */\nexport function loop(value, max) {\n  let result = value % max;\n\n  if (result < 0) {\n    result += max;\n  }\n\n  return result;\n}\n\n/**\n * @deprecated Use THREE.MathUtils.isPowerOfTwo\n */\nexport function isPowerOfTwo(x) {\n  return MathUtils.isPowerOfTwo(x);\n}\n\n/**\n * @summary Computes the sum of an array\n * @memberOf PSV.utils\n * @param {number[]} array\n * @returns {number}\n */\nexport function sum(array) {\n  return array.reduce((a, b) => a + b, 0);\n}\n\n/**\n * @summary Computes the distance between two points\n * @memberOf PSV.utils\n * @param {PSV.Point} p1\n * @param {PSV.Point} p2\n * @returns {number}\n */\nexport function distance(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\n/**\n * @summary Compute the shortest offset between two longitudes\n * @memberOf PSV.utils\n * @param {number} from\n * @param {number} to\n * @returns {number}\n */\nexport function getShortestArc(from, to) {\n  const tCandidates = [\n    0, // direct\n    Math.PI * 2, // clock-wise cross zero\n    -Math.PI * 2, // counter-clock-wise cross zero\n  ];\n\n  return tCandidates.reduce((value, candidate) => {\n    const newCandidate = to - from + candidate;\n    return Math.abs(newCandidate) < Math.abs(value) ? newCandidate : value;\n  }, Infinity);\n}\n\n/**\n * @summary Computes the angle between the current position and a target position\n * @memberOf PSV.utils\n * @param {PSV.Position} position1\n * @param {PSV.Position} position2\n * @returns {number}\n */\nexport function getAngle(position1, position2) {\n  return Math.acos(\n    Math.cos(position1.latitude)\n    * Math.cos(position2.latitude)\n    * Math.cos(position1.longitude - position2.longitude)\n    + Math.sin(position1.latitude)\n    * Math.sin(position2.latitude)\n  );\n}\n\n/**\n * @summary Returns the distance between two points on a sphere of radius one\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @memberOf PSV.utils\n * @param {number[]} p1\n * @param {number[]} p2\n * @returns {number}\n */\nexport function greatArcDistance(p1, p2) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const x = (λ2 - λ1) * Math.cos((φ1 + φ2) / 2);\n  const y = (φ2 - φ1);\n  return Math.sqrt(x * x + y * y);\n}\n","/**\n * @summary Transforms a string to dash-case {@link https://github.com/shahata/dasherize}\n * @memberOf PSV.utils\n * @param {string} str\n * @returns {string}\n */\nexport function dasherize(str) {\n  return str.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g, (s, i) => {\n    return (i > 0 ? '-' : '') + s.toLowerCase();\n  });\n}\n\n/**\n * @summary Returns a function, that, when invoked, will only be triggered at most once during a given window of time.\n * @memberOf PSV.utils\n * @copyright underscore.js - modified by Clément Prévost {@link http://stackoverflow.com/a/27078401}\n * @param {Function} func\n * @param {number} wait\n * @returns {Function}\n */\nexport function throttle(func, wait) {\n  /* eslint-disable */\n  let self, args, result;\n  let timeout;\n  let previous = 0;\n  const later = function() {\n    previous = Date.now();\n    timeout = undefined;\n    result = func.apply(self, args);\n    if (!timeout) {\n      self = args = null;\n    }\n  };\n  return function() {\n    const now = Date.now();\n    if (!previous) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    self = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      result = func.apply(self, args);\n      if (!timeout) {\n        self = args = null;\n      }\n    }\n    else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n  /* eslint-enable */\n}\n\n/**\n * @summary Test if an object is a plain object\n * @memberOf PSV.utils\n * @description Test if an object is a plain object, i.e. is constructed\n * by the built-in Object constructor and inherits directly from Object.prototype\n * or null. Some built-in objects pass the test, e.g. Math which is a plain object\n * and some host or exotic objects may pass also.\n * {@link http://stackoverflow.com/a/5878101/1207670}\n * @param {*} obj\n * @returns {boolean}\n */\nexport function isPlainObject(obj) {\n  // Basic check for Type object that's not null\n  if (typeof obj === 'object' && obj !== null) {\n    // If Object.getPrototypeOf supported, use it\n    if (typeof Object.getPrototypeOf === 'function') {\n      const proto = Object.getPrototypeOf(obj);\n      return proto === Object.prototype || proto === null;\n    }\n\n    // Otherwise, use internal class\n    // This should be reliable as if getPrototypeOf not supported, is pre-ES5\n    return Object.prototype.toString.call(obj) === '[object Object]';\n  }\n\n  // Not an object\n  return false;\n}\n\n/**\n * @summary Merges the enumerable attributes of two objects\n * @memberOf PSV.utils\n * @description Replaces arrays and alters the target object.\n * @copyright Nicholas Fisher <nfisher110@gmail.com>\n * @param {Object} target\n * @param {Object} src\n * @returns {Object} target\n */\nexport function deepmerge(target, src) {\n  /* eslint-disable */\n  let first = src;\n\n  return (function merge(target, src) {\n    if (Array.isArray(src)) {\n      if (!target || !Array.isArray(target)) {\n        target = [];\n      }\n      else {\n        target.length = 0;\n      }\n      src.forEach(function(e, i) {\n        target[i] = merge(null, e);\n      });\n    }\n    else if (typeof src === 'object') {\n      if (!target || Array.isArray(target)) {\n        target = {};\n      }\n      Object.keys(src).forEach(function(key) {\n        if (typeof src[key] !== 'object' || !src[key] || !isPlainObject(src[key])) {\n          target[key] = src[key];\n        }\n        else if (src[key] != first) {\n          if (!target[key]) {\n            target[key] = merge(null, src[key]);\n          }\n          else {\n            merge(target[key], src[key]);\n          }\n        }\n      });\n    }\n    else {\n      target = src;\n    }\n\n    return target;\n  }(target, src));\n  /* eslint-enable */\n}\n\n/**\n * @summary Deeply clones an object\n * @memberOf PSV.utils\n * @param {Object} src\n * @returns {Object}\n */\nexport function clone(src) {\n  return deepmerge(null, src);\n}\n\n/**\n * @summery Test of an object is empty\n * @memberOf PSV.utils\n * @param {object} obj\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\n/**\n * @summary Loops over enumerable properties of an object\n * @memberOf PSV.utils\n * @param {Object} object\n * @param {Function} callback\n */\nexport function each(object, callback) {\n  Object.keys(object).forEach((key) => {\n    callback(object[key], key);\n  });\n}\n\n/**\n * @summary Returns if a valu is null or undefined\n * @memberOf PSV.utils\n * @param {*} val\n * @return {boolean}\n */\nexport function isNil(val) {\n  return val === null || val === undefined;\n}\n\n/**\n * @summary Returns the first non null non undefined parameter\n * @memberOf PSV.utils\n * @param {*} values\n * @return {*}\n */\nexport function firstNonNull(...values) {\n  for (const val of values) {\n    if (!isNil(val)) {\n      return val;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * @summary Returns deep equality between objects\n * {@link https://gist.github.com/egardner/efd34f270cc33db67c0246e837689cb9}\n * @param obj1\n * @param obj2\n * @return {boolean}\n * @private\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n  else if (isObject(obj1) && isObject(obj2)) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false;\n    }\n    for (const prop of Object.keys(obj1)) {\n      if (!deepEqual(obj1[prop], obj2[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null;\n}\n\n","import { LinearFilter, MathUtils, Quaternion, Texture } from 'three';\nimport { PSVError } from '../PSVError';\nimport { loop } from './math';\n\n/**\n * @summary Returns the plugin constructor from the imported object\n * For retrocompatibility with previous default exports\n * @memberOf PSV.utils\n * @package\n */\nexport function pluginInterop(plugin, target) {\n  if (plugin) {\n    for (const [, p] of [['_', plugin], ...Object.entries(plugin)]) {\n      if (p.prototype instanceof target) {\n        return p;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * @summary Builds an Error with name 'AbortError'\n * @memberOf PSV.utils\n * @return {Error}\n */\nexport function getAbortError() {\n  const error = new Error('Loading was aborted.');\n  error.name = 'AbortError';\n  return error;\n}\n\n/**\n * @summary Tests if an Error has name 'AbortError'\n * @memberOf PSV.utils\n * @param {Error} err\n * @return {boolean}\n */\nexport function isAbortError(err) {\n  return err?.name === 'AbortError';\n}\n\n/**\n * @summary Displays a warning in the console\n * @memberOf PSV.utils\n * @param {string} message\n */\nexport function logWarn(message) {\n  console.warn(`PhotoSphereViewer: ${message}`);\n}\n\n/**\n * @summary Checks if an object is a {PSV.ExtendedPosition}, ie has x/y or longitude/latitude\n * @memberOf PSV.utils\n * @param {object} object\n * @returns {boolean}\n */\nexport function isExtendedPosition(object) {\n  return [['x', 'y'], ['longitude', 'latitude']].some(([key1, key2]) => {\n    return object[key1] !== undefined && object[key2] !== undefined;\n  });\n}\n\n/**\n * @summary Returns the value of a given attribute in the panorama metadata\n * @memberOf PSV.utils\n * @param {string} data\n * @param {string} attr\n * @returns (number)\n */\nexport function getXMPValue(data, attr) {\n  // XMP data are stored in children\n  let result = data.match('<GPano:' + attr + '>(.*)</GPano:' + attr + '>');\n  if (result !== null) {\n    const val = parseInt(result[1], 10);\n    return isNaN(val) ? null : val;\n  }\n\n  // XMP data are stored in attributes\n  result = data.match('GPano:' + attr + '=\"(.*?)\"');\n  if (result !== null) {\n    const val = parseInt(result[1], 10);\n    return isNaN(val) ? null : val;\n  }\n\n  return null;\n}\n\n/**\n * @readonly\n * @private\n * @type {{top: string, left: string, bottom: string, center: string, right: string}}\n */\nconst CSS_POSITIONS = {\n  top   : '0%',\n  bottom: '100%',\n  left  : '0%',\n  right : '100%',\n  center: '50%',\n};\n\n/**\n * @summary Translate CSS values like \"top center\" or \"10% 50%\" as top and left positions\n * @memberOf PSV.utils\n * @description The implementation is as close as possible to the \"background-position\" specification\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n * @param {string|PSV.Point} value\n * @returns {PSV.Point}\n */\nexport function parsePosition(value) {\n  if (!value) {\n    return { x: 0.5, y: 0.5 };\n  }\n\n  if (typeof value === 'object') {\n    return value;\n  }\n\n  let tokens = value.toLocaleLowerCase().split(' ').slice(0, 2);\n\n  if (tokens.length === 1) {\n    if (CSS_POSITIONS[tokens[0]] !== undefined) {\n      tokens = [tokens[0], 'center'];\n    }\n    else {\n      tokens = [tokens[0], tokens[0]];\n    }\n  }\n\n  const xFirst = tokens[1] !== 'left' && tokens[1] !== 'right' && tokens[0] !== 'top' && tokens[0] !== 'bottom';\n\n  tokens = tokens.map(token => CSS_POSITIONS[token] || token);\n\n  if (!xFirst) {\n    tokens.reverse();\n  }\n\n  const parsed = tokens.join(' ').match(/^([0-9.]+)% ([0-9.]+)%$/);\n\n  if (parsed) {\n    return {\n      x: parseFloat(parsed[1]) / 100,\n      y: parseFloat(parsed[2]) / 100,\n    };\n  }\n  else {\n    return { x: 0.5, y: 0.5 };\n  }\n}\n\n/**\n * @readonly\n * @private\n */\nconst X_VALUES = ['left', 'center', 'right'];\n/**\n * @readonly\n * @private\n */\nconst Y_VALUES = ['top', 'center', 'bottom'];\n/**\n * @readonly\n * @private\n */\nconst POS_VALUES = [...X_VALUES, ...Y_VALUES];\n/**\n * @readonly\n * @private\n */\nconst CENTER = 'center';\n\n/**\n * @summary Parse a CSS-like position into an array of position keywords among top, bottom, left, right and center\n * @memberOf PSV.utils\n * @param {string | string[]} value\n * @param {object} [options]\n * @param {boolean} [options.allowCenter=true] allow \"center center\"\n * @param {boolean} [options.cssOrder=true] force CSS order (y axis then x axis)\n * @return {string[]}\n */\nexport function cleanPosition(value, { allowCenter, cssOrder } = { allowCenter: true, cssOrder: true }) {\n  if (!value) {\n    return null;\n  }\n\n  if (typeof value === 'string') {\n    value = value.split(' ');\n  }\n\n  if (value.length === 1) {\n    if (value[0] === CENTER) {\n      value = [CENTER, CENTER];\n    }\n    else if (X_VALUES.indexOf(value[0]) !== -1) {\n      value = [CENTER, value[0]];\n    }\n    else if (Y_VALUES.indexOf(value[0]) !== -1) {\n      value = [value[0], CENTER];\n    }\n  }\n\n  if (value.length !== 2 || POS_VALUES.indexOf(value[0]) === -1 || POS_VALUES.indexOf(value[1]) === -1) {\n    logWarn(`Unparsable position ${value}`);\n    return null;\n  }\n\n  if (!allowCenter && value[0] === CENTER && value[1] === CENTER) {\n    logWarn(`Invalid position center center`);\n    return null;\n  }\n\n  if (cssOrder && !positionIsOrdered(value)) {\n    value = [value[1], value[0]];\n  }\n  if (value[1] === CENTER && X_VALUES.indexOf(value[0]) !== -1) {\n    value = [CENTER, value[0]];\n  }\n  if (value[0] === CENTER && Y_VALUES.indexOf(value[1]) !== -1) {\n    value = [value[1], CENTER];\n  }\n\n  return value;\n}\n\n/**\n * @summary Checks if an array of two positions is ordered (y axis then x axis)\n * @param {string[]} value\n * @return {boolean}\n */\nexport function positionIsOrdered(value) {\n  return Y_VALUES.indexOf(value[0]) !== -1 && X_VALUES.indexOf(value[1]) !== -1;\n}\n\n/**\n * @summary Parses an speed\n * @memberOf PSV.utils\n * @param {string|number} speed - The speed, in radians/degrees/revolutions per second/minute\n * @returns {number} radians per second\n * @throws {PSV.PSVError} when the speed cannot be parsed\n */\nexport function parseSpeed(speed) {\n  let parsed;\n\n  if (typeof speed === 'string') {\n    const speedStr = speed.toString().trim();\n\n    // Speed extraction\n    let speedValue = parseFloat(speedStr.replace(/^(-?[0-9]+(?:\\.[0-9]*)?).*$/, '$1'));\n    const speedUnit = speedStr.replace(/^-?[0-9]+(?:\\.[0-9]*)?(.*)$/, '$1').trim();\n\n    // \"per minute\" -> \"per second\"\n    if (speedUnit.match(/(pm|per minute)$/)) {\n      speedValue /= 60;\n    }\n\n    // Which unit?\n    switch (speedUnit) {\n      // Degrees per minute / second\n      case 'dpm':\n      case 'degrees per minute':\n      case 'dps':\n      case 'degrees per second':\n        parsed = MathUtils.degToRad(speedValue);\n        break;\n\n      // Radians per minute / second\n      case 'rdpm':\n      case 'radians per minute':\n      case 'rdps':\n      case 'radians per second':\n        parsed = speedValue;\n        break;\n\n      // Revolutions per minute / second\n      case 'rpm':\n      case 'revolutions per minute':\n      case 'rps':\n      case 'revolutions per second':\n        parsed = speedValue * Math.PI * 2;\n        break;\n\n      // Unknown unit\n      default:\n        throw new PSVError('Unknown speed unit \"' + speedUnit + '\"');\n    }\n  }\n  else {\n    parsed = speed;\n  }\n\n  return parsed;\n}\n\n/**\n * @summary Parses an angle value in radians or degrees and returns a normalized value in radians\n * @memberOf PSV.utils\n * @param {string|number} angle - eg: 3.14, 3.14rad, 180deg\n * @param {boolean} [zeroCenter=false] - normalize between -Pi - Pi instead of 0 - 2*Pi\n * @param {boolean} [halfCircle=zeroCenter] - normalize between -Pi/2 - Pi/2 instead of -Pi - Pi\n * @returns {number}\n * @throws {PSV.PSVError} when the angle cannot be parsed\n */\nexport function parseAngle(angle, zeroCenter = false, halfCircle = zeroCenter) {\n  let parsed;\n\n  if (typeof angle === 'string') {\n    const match = angle.toLowerCase().trim().match(/^(-?[0-9]+(?:\\.[0-9]*)?)(.*)$/);\n\n    if (!match) {\n      throw new PSVError('Unknown angle \"' + angle + '\"');\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n\n    if (unit) {\n      switch (unit) {\n        case 'deg':\n        case 'degs':\n          parsed = MathUtils.degToRad(value);\n          break;\n        case 'rad':\n        case 'rads':\n          parsed = value;\n          break;\n        default:\n          throw new PSVError('Unknown angle unit \"' + unit + '\"');\n      }\n    }\n    else {\n      parsed = value;\n    }\n  }\n  else if (typeof angle === 'number' && !isNaN(angle)) {\n    parsed = angle;\n  }\n  else {\n    throw new PSVError('Unknown angle \"' + angle + '\"');\n  }\n\n  parsed = loop(zeroCenter ? parsed + Math.PI : parsed, Math.PI * 2);\n\n  return zeroCenter ? MathUtils.clamp(parsed - Math.PI, -Math.PI / (halfCircle ? 2 : 1), Math.PI / (halfCircle ? 2 : 1)) : parsed;\n}\n\n/**\n * @summary Creates a THREE texture from an image\n * @memberOf PSV.utils\n * @param {HTMLImageElement | HTMLCanvasElement} img\n * @return {external:THREE.Texture}\n */\nexport function createTexture(img) {\n  const texture = new Texture(img);\n  texture.needsUpdate = true;\n  texture.minFilter = LinearFilter;\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nconst quaternion = new Quaternion();\n\n/**\n * @summary Applies the inverse of Euler angles to a vector\n * @memberOf PSV.utils\n * @param {external:THREE.Vector3} vector\n * @param {external:THREE.Euler} euler\n */\nexport function applyEulerInverse(vector, euler) {\n  quaternion.setFromEuler(euler).invert();\n  vector.applyQuaternion(quaternion);\n}\n","import { EASINGS } from '../data/constants';\nimport { each } from './misc';\n\n/**\n * @callback OnTick\n * @summary Function called for each animation frame with computed properties\n * @memberOf PSV.utils.Animation\n * @param {Object.<string, number>} properties - current values\n * @param {float} progress - 0 to 1\n */\n\n/**\n * @summary Interpolation helper for animations\n * @memberOf PSV.utils\n * @description\n * Implements the Promise API with an additional \"cancel\" method.\n * The promise is resolved with `true` when the animation is completed and `false` if the animation is cancelled.\n * @example\n * const anim = new Animation({\n *     properties: {\n *         width: {start: 100, end: 200}\n *     },\n *     duration: 5000,\n *     onTick: (properties) => element.style.width = `${properties.width}px`;\n * });\n *\n * anim.then((completed) => ...);\n *\n * anim.cancel()\n */\nexport class Animation {\n\n  /**\n   * @param {Object} options\n   * @param {Object.<string, Object>} options.properties\n   * @param {number} options.properties[].start\n   * @param {number} options.properties[].end\n   * @param {number} options.duration\n   * @param {number} [options.delay=0]\n   * @param {string} [options.easing='linear']\n   * @param {PSV.utils.Animation.OnTick} options.onTick - called on each frame\n   */\n  constructor(options) {\n    this.__callbacks = [];\n\n    if (options) {\n      if (!options.easing || typeof options.easing === 'string') {\n        options.easing = EASINGS[options.easing || 'linear'];\n      }\n\n      this.__start = null;\n      this.options = options;\n\n      if (options.delay) {\n        this.__delayTimeout = setTimeout(() => {\n          this.__delayTimeout = null;\n          this.__animationFrame = window.requestAnimationFrame(t => this.__run(t));\n        }, options.delay);\n      }\n      else {\n        this.__animationFrame = window.requestAnimationFrame(t => this.__run(t));\n      }\n    }\n    else {\n      this.__resolved = true;\n    }\n  }\n\n  /**\n   * @summary Main loop for the animation\n   * @param {number} timestamp\n   * @private\n   */\n  __run(timestamp) {\n    if (this.__cancelled) {\n      return;\n    }\n\n    // first iteration\n    if (this.__start === null) {\n      this.__start = timestamp;\n    }\n\n    // compute progress\n    const progress = (timestamp - this.__start) / this.options.duration;\n    const current = {};\n\n    if (progress < 1.0) {\n      // interpolate properties\n      each(this.options.properties, (prop, name) => {\n        if (prop) {\n          current[name] = prop.start + (prop.end - prop.start) * this.options.easing(progress);\n        }\n      });\n      this.options.onTick(current, progress);\n\n      this.__animationFrame = window.requestAnimationFrame(t => this.__run(t));\n    }\n    else {\n      // call onTick one last time with final values\n      each(this.options.properties, (prop, name) => {\n        if (prop) {\n          current[name] = prop.end;\n        }\n      });\n      this.options.onTick(current, 1.0);\n\n      this.__animationFrame = window.requestAnimationFrame(() => {\n        this.__resolved = true;\n        this.__resolve(true);\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  __resolve(value) {\n    this.__callbacks.forEach(cb => cb(value));\n    this.__callbacks.length = 0;\n  }\n\n  /**\n   * @summary Promise chaining\n   * @param {Function} [onFulfilled] - Called when the animation is complete (true) or cancelled (false)\n   * @returns {Promise}\n   */\n  then(onFulfilled) {\n    if (this.__resolved || this.__cancelled) {\n      return Promise.resolve(this.__resolved)\n        .then(onFulfilled);\n    }\n\n    return new Promise((resolve) => {\n      this.__callbacks.push(resolve);\n    })\n      .then(onFulfilled);\n  }\n\n  /**\n   * @summary Cancels the animation\n   */\n  cancel() {\n    if (!this.__cancelled && !this.__resolved) {\n      this.__cancelled = true;\n      this.__resolve(false);\n\n      if (this.__delayTimeout) {\n        window.clearTimeout(this.__delayTimeout);\n        this.__delayTimeout = null;\n      }\n      if (this.__animationFrame) {\n        window.cancelAnimationFrame(this.__animationFrame);\n        this.__animationFrame = null;\n      }\n    }\n  }\n\n}\n","import { MathUtils } from 'three';\nimport { PSVError } from '../PSVError';\nimport { loop } from './math';\n\n/**\n * @summary Represents a variable that can dynamically change with time (using requestAnimationFrame)\n * @memberOf PSV.utils\n */\nexport class Dynamic {\n\n  static STOP = 0;\n  static INFINITE = 1;\n  static POSITION = 2;\n\n  /**\n   * @param {Function} [fn] Callback function\n   * @param {number} [defaultValue] Default position\n   * @param {number} [min] Minimum position\n   * @param {number} [max] Maximum position\n   * @param {boolean} [loopValue] Loop value between min and max\n   */\n  constructor(fn, defaultValue = 0, min = -Infinity, max = Infinity, loopValue = false) {\n    /**\n     * @type {Function}\n     * @private\n     * @readonly\n     */\n    this.fn = fn;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.mode = Dynamic.STOP;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speed = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speedMult = 1;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.currentSpeed = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.target = 0;\n\n    /**\n     * @type {number}\n     * @readonly\n     */\n    this.current = defaultValue;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.min = min;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.max = max;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loopValue = loopValue;\n\n    if (loopValue && min !== 0) {\n      throw new PSVError('invalid config');\n    }\n\n    if (this.fn) {\n      this.fn(defaultValue);\n    }\n  }\n\n  /**\n   * Changes base speed\n   * @param {number} speed\n   */\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n\n  /**\n   * Defines the target position\n   * @param {number} position\n   * @param {number} [speedMult=1]\n   */\n  goto(position, speedMult = 1) {\n    this.mode = Dynamic.POSITION;\n    this.target = this.loopValue ? loop(position, this.max) : MathUtils.clamp(position, this.min, this.max);\n    this.speedMult = speedMult;\n  }\n\n  /**\n   * Increase/decrease the target position\n   * @param {number} step\n   * @param {number} [speedMult=1]\n   */\n  step(step, speedMult = 1) {\n    if (this.mode !== Dynamic.POSITION) {\n      this.target = this.current;\n    }\n    this.goto(this.target + step, speedMult);\n  }\n\n  /**\n   * Starts infinite movement\n   * @param {boolean} [invert=false]\n   * @param {number} [speedMult=1]\n   */\n  roll(invert = false, speedMult = 1) {\n    this.mode = Dynamic.INFINITE;\n    this.target = invert ? -Infinity : Infinity;\n    this.speedMult = speedMult;\n  }\n\n  /**\n   * Stops movement\n   */\n  stop() {\n    this.mode = Dynamic.STOP;\n  }\n\n  /**\n   * Defines the current position and immediately stops movement\n   * @param {number} value\n   */\n  setValue(value) {\n    this.target = this.loopValue ? loop(value, this.max) : MathUtils.clamp(value, this.min, this.max);\n    this.mode = Dynamic.STOP;\n    if (this.target !== this.current) {\n      this.current = this.target;\n      if (this.fn) {\n        this.fn(this.current);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @package\n   */\n  update(elapsed) {\n    // in position mode switch to stop mode when in the decceleration window\n    if (this.mode === Dynamic.POSITION) {\n      // in loop mode, alter \"current\" to avoid crossing the origin\n      if (this.loopValue && Math.abs(this.target - this.current) > this.max / 2) {\n        this.current = this.current < this.target ? this.current + this.max : this.current - this.max;\n      }\n\n      const dstStop = this.currentSpeed * this.currentSpeed / (this.speed * this.speedMult * 4);\n      if (Math.abs(this.target - this.current) <= dstStop) {\n        this.mode = Dynamic.STOP;\n      }\n    }\n\n    // compute speed\n    let targetSpeed = this.mode === Dynamic.STOP ? 0 : this.speed * this.speedMult;\n    if (this.target < this.current) {\n      targetSpeed = -targetSpeed;\n    }\n    if (this.currentSpeed < targetSpeed) {\n      this.currentSpeed = Math.min(targetSpeed, this.currentSpeed + elapsed / 1000 * this.speed * this.speedMult * 2);\n    }\n    else if (this.currentSpeed > targetSpeed) {\n      this.currentSpeed = Math.max(targetSpeed, this.currentSpeed - elapsed / 1000 * this.speed * this.speedMult * 2);\n    }\n\n    // compute new position\n    let next = null;\n    if (this.current > this.target && this.currentSpeed) {\n      next = Math.max(this.target, this.current + this.currentSpeed * elapsed / 1000);\n    }\n    else if (this.current < this.target && this.currentSpeed) {\n      next = Math.min(this.target, this.current + this.currentSpeed * elapsed / 1000);\n    }\n\n    // apply value\n    if (next !== null) {\n      next = this.loopValue ? loop(next, this.max) : MathUtils.clamp(next, this.min, this.max);\n      if (next !== this.current) {\n        this.current = next;\n        if (this.fn) {\n          this.fn(this.current);\n        }\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n","import { each } from './misc';\n\n/**\n * @summary Wrapper for multiple {@link PSV.utils.Dynamic} evolving together\n * @memberOf PSV.utils\n */\nexport class MultiDynamic {\n\n  /**\n   * @type {Object<string, number>}\n   * @readonly\n   */\n  get current() {\n    const values = {};\n    each(this.dynamics, (dynamic, name) => {\n      values[name] = dynamic.current;\n    });\n    return values;\n  }\n\n  /**\n   * @param {Record<string, PSV.utils.Dynamic>} dynamics\n   * @param {Function} [fn] Callback function\n   */\n  constructor(dynamics, fn) {\n    /**\n     * @type {Function}\n     * @private\n     * @readonly\n     */\n    this.fn = fn;\n\n    /**\n     * @type {Record<string, PSV.utils.Dynamic>}\n     * @private\n     * @readonly\n     */\n    this.dynamics = dynamics;\n\n    if (this.fn) {\n      this.fn(this.current);\n    }\n  }\n\n  /**\n   * Changes base speed\n   * @param {number} speed\n   */\n  setSpeed(speed) {\n    each(this.dynamics, (d) => {\n      d.setSpeed(speed);\n    });\n  }\n\n  /**\n   * Defines the target positions\n   * @param {Record<string, number>} positions\n   * @param {number} [speedMult=1]\n   */\n  goto(positions, speedMult = 1) {\n    each(positions, (position, name) => {\n      this.dynamics[name].goto(position, speedMult);\n    });\n  }\n\n  /**\n   * Increase/decrease the target positions\n   * @param {Record<string, number>} steps\n   * @param {number} [speedMult=1]\n   */\n  step(steps, speedMult = 1) {\n    each(steps, (step, name) => {\n      this.dynamics[name].step(step, speedMult);\n    });\n  }\n\n  /**\n   * Starts infinite movements\n   * @param {Record<string, boolean>} rolls\n   * @param {number} [speedMult=1]\n   */\n  roll(rolls, speedMult = 1) {\n    each(rolls, (roll, name) => {\n      this.dynamics[name].roll(roll, speedMult);\n    });\n  }\n\n  /**\n   * Stops movements\n   */\n  stop() {\n    each(this.dynamics, d => d.stop());\n  }\n\n  /**\n   * Defines the current positions and immediately stops movements\n   * @param {Record<string, number>} values\n   */\n  setValue(values) {\n    let hasUpdates = false;\n    each(values, (value, name) => {\n      hasUpdates |= this.dynamics[name].setValue(value);\n    });\n\n    if (hasUpdates && this.fn) {\n      this.fn(this.current);\n    }\n\n    return hasUpdates;\n  }\n\n  /**\n   * @package\n   */\n  update(elapsed) {\n    let hasUpdates = false;\n    each(this.dynamics, (dynamic) => {\n      hasUpdates |= dynamic.update(elapsed);\n    });\n\n    if (hasUpdates && this.fn) {\n      this.fn(this.current);\n    }\n\n    return hasUpdates;\n  }\n\n}\n","import { EventEmitter } from 'uevent';\n\n/**\n * @summary Helper to make sliders elements\n * @memberOf PSV.utils\n */\nexport class Slider extends EventEmitter {\n\n  static VERTICAL = 1;\n  static HORIZONTAL = 2;\n\n  /**\n   * @type {boolean}\n   * @readonly\n   */\n  get vertical() {\n    return this.prop.direction === Slider.VERTICAL;\n  }\n\n  constructor({ psv, container, direction, onUpdate }) {\n    super();\n\n    /**\n     * @summary Reference to main controller\n     * @type {PSV.Viewer}\n     * @readonly\n     */\n    this.psv = psv;\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.container = container;\n\n    /**\n     * @summary Internal properties\n     * @member {Object}\n     * @protected\n     * @property {boolean} mousedown\n     * @property {number} mediaMinWidth\n     */\n    this.prop = {\n      onUpdate : onUpdate,\n      direction: direction,\n      mousedown: false,\n      mouseover: false,\n    };\n\n    this.container.addEventListener('click', this);\n    this.container.addEventListener('mousedown', this);\n    this.container.addEventListener('mouseenter', this);\n    this.container.addEventListener('mouseleave', this);\n    this.container.addEventListener('touchstart', this);\n    this.container.addEventListener('mousemove', this, true);\n    this.container.addEventListener('touchmove', this, true);\n    window.addEventListener('mouseup', this);\n    window.addEventListener('touchend', this);\n  }\n\n  /**\n   * @protected\n   */\n  destroy() {\n    window.removeEventListener('mouseup', this);\n    window.removeEventListener('touchend', this);\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'click':      e.stopPropagation();    break;\n      case 'mousedown':  this.__onMouseDown(e);  break;\n      case 'mouseenter': this.__onMouseEnter(e); break;\n      case 'mouseleave': this.__onMouseLeave(e); break;\n      case 'touchstart': this.__onTouchStart(e); break;\n      case 'mousemove':  this.__onMouseMove(e);  break;\n      case 'touchmove':  this.__onTouchMove(e);  break;\n      case 'mouseup':    this.__onMouseUp(e);    break;\n      case 'touchend':   this.__onTouchEnd(e);   break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @private\n   */\n  __onMouseDown(evt) {\n    this.prop.mousedown = true;\n    this.__update(evt, true);\n  }\n\n  /**\n   * @private\n   */\n  __onMouseEnter(evt) {\n    this.prop.mouseover = true;\n    this.__update(evt, true);\n  }\n\n  /**\n   * @private\n   */\n  __onTouchStart(evt) {\n    this.prop.mouseover = true;\n    this.prop.mousedown = true;\n    this.__update(evt.changedTouches[0], true);\n  }\n\n  /**\n   * @private\n   */\n  __onMouseMove(evt) {\n    if (this.prop.mousedown || this.prop.mouseover) {\n      evt.stopPropagation();\n      this.__update(evt, true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onTouchMove(evt) {\n    if (this.prop.mousedown || this.prop.mouseover) {\n      evt.stopPropagation();\n      this.__update(evt.changedTouches[0], true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onMouseUp(evt) {\n    if (this.prop.mousedown) {\n      this.prop.mousedown = false;\n      this.__update(evt, false);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onMouseLeave(evt) {\n    if (this.prop.mouseover) {\n      this.prop.mouseover = false;\n      this.__update(evt, true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onTouchEnd(evt) {\n    if (this.prop.mousedown) {\n      this.prop.mouseover = false;\n      this.prop.mousedown = false;\n      this.__update(evt.changedTouches[0], false);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __update(evt, moving) {\n    const boundingClientRect = this.container.getBoundingClientRect();\n    const cursor = evt[this.vertical ? 'clientY' : 'clientX'];\n    const pos = boundingClientRect[this.vertical ? 'bottom' : 'left'];\n    const size = boundingClientRect[this.vertical ? 'height' : 'width'];\n    const val = Math.abs((pos - cursor) / size);\n\n    this.prop.onUpdate({\n      value    : val,\n      click    : !moving,\n      mousedown: this.prop.mousedown,\n      mouseover: this.prop.mouseover,\n      cursor   : evt,\n    });\n  }\n\n}\n","/**\n * @namespace PSV.utils\n */\n\nexport * from './browser';\nexport * from './math';\nexport * from './misc';\nexport * from './psv';\n\nexport * from './Animation';\nexport * from './Dynamic';\nexport * from './MultiDynamic';\nexport * from './Slider';\n","import { MathUtils, Mesh, SphereGeometry, Texture } from 'three';\nimport { SPHERE_RADIUS } from '../../data/constants';\nimport { SYSTEM } from '../../data/system';\nimport { PSVError } from '../../PSVError';\nimport { createTexture, firstNonNull, getXMPValue, logWarn } from '../../utils';\nimport { AbstractAdapter } from '../AbstractAdapter';\n\n\n/**\n * @typedef {Object} PSV.adapters.EquirectangularAdapter.Options\n * @property {number} [resolution=64] - number of faces of the sphere geometry, higher values may decrease performances\n */\n\n\n/**\n * @summary Adapter for equirectangular panoramas\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class EquirectangularAdapter extends AbstractAdapter {\n\n  static id = 'equirectangular';\n  static supportsDownload = true;\n  static supportsOverlay = true;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.adapters.EquirectangularAdapter.Options} options\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {PSV.adapters.EquirectangularAdapter.Options}\n     * @private\n     */\n    this.config = {\n      resolution: 64,\n      ...options,\n    };\n\n    if (!MathUtils.isPowerOfTwo(this.config.resolution)) {\n      throw new PSVError('EquirectangularAdapter resolution must be power of two');\n    }\n\n    this.SPHERE_SEGMENTS = this.config.resolution;\n    this.SPHERE_HORIZONTAL_SEGMENTS = this.SPHERE_SEGMENTS / 2;\n  }\n\n  /**\n   * @override\n   */\n  supportsTransition() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  supportsPreload() {\n    return true;\n  }\n\n  /**\n   * @override\n   * @param {string} panorama\n   * @param {PSV.PanoData | PSV.PanoDataProvider} [newPanoData]\n   * @param {boolean} [useXmpPanoData]\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama, newPanoData, useXmpPanoData = this.psv.config.useXmpData) {\n    if (typeof panorama !== 'string') {\n      if (Array.isArray(panorama) || typeof panorama === 'object' && !!panorama.left) {\n        logWarn('Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters');\n      }\n      return Promise.reject(new PSVError('Invalid panorama url, are you using the right adapter?'));\n    }\n\n    return (\n      useXmpPanoData\n        ? this.__loadXMP(panorama, p => this.psv.loader.setProgress(p))\n          .then(xmpPanoData => this.psv.textureLoader.loadImage(panorama).then(img => ({ img, xmpPanoData })))\n        : this.psv.textureLoader.loadImage(panorama, p => this.psv.loader.setProgress(p))\n          .then(img => ({ img: img, xmpPanoData: null }))\n    )\n      .then(({ img, xmpPanoData }) => {\n        if (typeof newPanoData === 'function') {\n          newPanoData = newPanoData(img);\n        }\n\n        const panoData = {\n          fullWidth    : firstNonNull(newPanoData?.fullWidth, xmpPanoData?.fullWidth, img.width),\n          fullHeight   : firstNonNull(newPanoData?.fullHeight, xmpPanoData?.fullHeight, img.height),\n          croppedWidth : firstNonNull(newPanoData?.croppedWidth, xmpPanoData?.croppedWidth, img.width),\n          croppedHeight: firstNonNull(newPanoData?.croppedHeight, xmpPanoData?.croppedHeight, img.height),\n          croppedX     : firstNonNull(newPanoData?.croppedX, xmpPanoData?.croppedX, 0),\n          croppedY     : firstNonNull(newPanoData?.croppedY, xmpPanoData?.croppedY, 0),\n          poseHeading  : firstNonNull(newPanoData?.poseHeading, xmpPanoData?.poseHeading, 0),\n          posePitch    : firstNonNull(newPanoData?.posePitch, xmpPanoData?.posePitch, 0),\n          poseRoll     : firstNonNull(newPanoData?.poseRoll, xmpPanoData?.poseRoll, 0),\n        };\n\n        if (panoData.croppedWidth !== img.width || panoData.croppedHeight !== img.height) {\n          logWarn(`Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.\n    panoData: ${panoData.croppedWidth}x${panoData.croppedHeight}, image: ${img.width}x${img.height}`);\n        }\n        if ((newPanoData || xmpPanoData) && panoData.fullWidth !== panoData.fullHeight * 2) {\n          logWarn('Invalid panoData, fullWidth should be twice fullHeight');\n        }\n\n        const texture = this.__createEquirectangularTexture(img, panoData);\n\n        return { panorama, texture, panoData };\n      });\n  }\n\n  /**\n   * @summary Loads the XMP data of an image\n   * @param {string} panorama\n   * @param {function(number)} [onProgress]\n   * @returns {Promise<PSV.PanoData>}\n   * @throws {PSV.PSVError} when the image cannot be loaded\n   * @private\n   */\n  __loadXMP(panorama, onProgress) {\n    return this.psv.textureLoader.loadFile(panorama, onProgress)\n      .then(blob => this.__loadBlobAsString(blob))\n      .then((binary) => {\n        const a = binary.indexOf('<x:xmpmeta');\n        const b = binary.indexOf('</x:xmpmeta>');\n        const data = binary.substring(a, b);\n\n        if (a !== -1 && b !== -1 && data.includes('GPano:')) {\n          return {\n            fullWidth    : getXMPValue(data, 'FullPanoWidthPixels'),\n            fullHeight   : getXMPValue(data, 'FullPanoHeightPixels'),\n            croppedWidth : getXMPValue(data, 'CroppedAreaImageWidthPixels'),\n            croppedHeight: getXMPValue(data, 'CroppedAreaImageHeightPixels'),\n            croppedX     : getXMPValue(data, 'CroppedAreaLeftPixels'),\n            croppedY     : getXMPValue(data, 'CroppedAreaTopPixels'),\n            poseHeading  : getXMPValue(data, 'PoseHeadingDegrees'),\n            posePitch    : getXMPValue(data, 'PosePitchDegrees'),\n            poseRoll     : getXMPValue(data, 'PoseRollDegrees'),\n          };\n        }\n\n        return null;\n      });\n  }\n\n  /**\n   * @summmary read a Blob as string\n   * @param {Blob} blob\n   * @returns {Promise<string>}\n   * @private\n   */\n  __loadBlobAsString(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsText(blob);\n    });\n  }\n\n  /**\n   * @summary Creates the final texture from image and panorama data\n   * @param {Image} img\n   * @param {PSV.PanoData} panoData\n   * @returns {external:THREE.Texture}\n   * @private\n   */\n  __createEquirectangularTexture(img, panoData) {\n    // resize image / fill cropped parts with black\n    if (panoData.fullWidth > SYSTEM.maxTextureWidth\n      || panoData.croppedWidth !== panoData.fullWidth\n      || panoData.croppedHeight !== panoData.fullHeight\n    ) {\n      const ratio = SYSTEM.getMaxCanvasWidth() / panoData.fullWidth;\n\n      const resizedPanoData = { ...panoData };\n      if (ratio < 1) {\n        resizedPanoData.fullWidth *= ratio;\n        resizedPanoData.fullHeight *= ratio;\n        resizedPanoData.croppedWidth *= ratio;\n        resizedPanoData.croppedHeight *= ratio;\n        resizedPanoData.croppedX *= ratio;\n        resizedPanoData.croppedY *= ratio;\n      }\n\n      const buffer = document.createElement('canvas');\n      buffer.width = resizedPanoData.fullWidth;\n      buffer.height = resizedPanoData.fullHeight;\n\n      const ctx = buffer.getContext('2d');\n      ctx.drawImage(img,\n        resizedPanoData.croppedX, resizedPanoData.croppedY,\n        resizedPanoData.croppedWidth, resizedPanoData.croppedHeight);\n\n      return createTexture(buffer);\n    }\n\n    return createTexture(img);\n  }\n\n  /**\n   * @override\n   */\n  createMesh(scale = 1) {\n    // The middle of the panorama is placed at longitude=0\n    const geometry = new SphereGeometry(\n      SPHERE_RADIUS * scale,\n      this.SPHERE_SEGMENTS,\n      this.SPHERE_HORIZONTAL_SEGMENTS,\n      -Math.PI / 2\n    )\n      .scale(-1, 1, 1);\n\n    const material = AbstractAdapter.createOverlayMaterial();\n\n    return new Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.panorama, textureData.texture);\n    this.setOverlay(mesh, null);\n  }\n\n  /**\n   * @override\n   */\n  setOverlay(mesh, textureData, opacity) {\n    this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlayOpacity, opacity);\n    if (!textureData) {\n      this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlay, new Texture());\n    }\n    else {\n      this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.overlay, textureData.texture);\n    }\n  }\n\n  /**\n   * @override\n   */\n  setTextureOpacity(mesh, opacity) {\n    this.__setUniform(mesh, AbstractAdapter.OVERLAY_UNIFORMS.globalOpacity, opacity);\n    mesh.material.transparent = opacity < 1;\n  }\n\n  /**\n   * @override\n   */\n  disposeTexture(textureData) {\n    textureData.texture?.dispose();\n  }\n\n  /**\n   * @param {external:THREE.Mesh} mesh\n   * @param {string} uniform\n   * @param {*} value\n   * @private\n   */\n  __setUniform(mesh, uniform, value) {\n    if (mesh.material.uniforms[uniform].value instanceof Texture) {\n      mesh.material.uniforms[uniform].value.dispose();\n    }\n    mesh.material.uniforms[uniform].value = value;\n  }\n\n}\n","/**\n * @namespace PSV.components\n */\n\n/**\n * @summary Base component class\n * @memberof PSV.components\n * @abstract\n */\nexport class AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer | PSV.components.AbstractComponent} parent\n   * @param {string} className - CSS class added to the component's container\n   */\n  constructor(parent, className) {\n    /**\n     * @summary Reference to main controller\n     * @type {PSV.Viewer}\n     * @readonly\n     */\n    this.psv = parent.psv || parent;\n\n    /**\n     * @member {PSV.Viewer|PSV.components.AbstractComponent}\n     * @readonly\n     */\n    this.parent = parent;\n    this.parent.children.push(this);\n\n    /**\n     * @summary All child components\n     * @type {PSV.components.AbstractComponent[]}\n     * @readonly\n     * @package\n     */\n    this.children = [];\n\n    /**\n     * @summary Internal properties\n     * @member {Object}\n     * @protected\n     * @property {boolean} visible - Visibility of the component\n     */\n    this.prop = {\n      visible: true,\n    };\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.container = document.createElement('div');\n    this.container.className = className;\n    this.parent.container.appendChild(this.container);\n  }\n\n  /**\n   * @summary Destroys the component\n   * @protected\n   */\n  destroy() {\n    this.parent.container.removeChild(this.container);\n\n    const childIdx = this.parent.children.indexOf(this);\n    if (childIdx !== -1) {\n      this.parent.children.splice(childIdx, 1);\n    }\n\n    this.children.slice().forEach(child => child.destroy());\n    this.children.length = 0;\n\n    delete this.container;\n    delete this.parent;\n    delete this.psv;\n    delete this.prop;\n  }\n\n  /**\n   * @summary Refresh UI\n   * @description Must be be a very lightweight operation\n   * @package\n   */\n  refreshUi() {\n    this.children.every((child) => {\n      child.refreshUi();\n      return this.psv.prop.uiRefresh === true;\n    });\n  }\n\n  /**\n   * @summary Displays or hides the component\n   * @param {boolean} [visible] - forced state\n   */\n  toggle(visible) {\n    if (visible === false || visible === undefined && this.isVisible()) {\n      this.hide();\n    }\n    else if (visible === true || visible === undefined && !this.isVisible()) {\n      this.show();\n    }\n  }\n\n  /**\n   * @summary Hides the component\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.prop.visible = false;\n  }\n\n  /**\n   * @summary Displays the component\n   */\n  show() {\n    this.container.style.display = '';\n    this.prop.visible = true;\n  }\n\n  /**\n   * @summary Checks if the component is visible\n   * @returns {boolean}\n   */\n  isVisible() {\n    return this.prop.visible;\n  }\n\n}\n","import { AbstractComponent } from '../components/AbstractComponent';\nimport { KEY_CODES } from '../data/constants';\nimport { PSVError } from '../PSVError';\nimport { isPlainObject, toggleClass } from '../utils';\n\n/**\n * @namespace PSV.buttons\n */\n\n/**\n * @summary Base navbar button class\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.buttons\n * @abstract\n */\nexport class AbstractButton extends AbstractComponent {\n\n  /**\n   * @summary Unique identifier of the button\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static id = null;\n\n  /**\n   * @summary Identifier to declare a group of buttons\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static groupId = null;\n\n  /**\n   * @summary SVG icon name injected in the button\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static icon = null;\n\n  /**\n   * @summary SVG icon name injected in the button when it is active\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static iconActive = null;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   * @param {string} [className] - Additional CSS classes\n   * @param {boolean} [collapsable=false] - `true` if the button can be moved to menu when the navbar is too small\n   * @param {boolean} [tabbable=true] - `true` if the button is accessible with the keyboard\n   */\n  constructor(navbar, className = '', collapsable = false, tabbable = true) {\n    super(navbar, 'psv-button ' + className);\n\n    /**\n     * @override\n     * @property {string} id - Unique identifier of the button\n     * @property {boolean} enabled\n     * @property {boolean} supported\n     * @property {boolean} collapsed\n     * @property {boolean} active\n     * @property {number} width\n     */\n    this.prop = {\n      ...this.prop,\n      id         : this.constructor.id,\n      collapsable: collapsable,\n      enabled    : true,\n      supported  : true,\n      collapsed  : false,\n      active     : false,\n      width      : this.container.offsetWidth,\n    };\n\n    if (this.constructor.icon) {\n      this.__setIcon(this.constructor.icon);\n    }\n\n    if (this.prop.id && this.psv.config.lang[this.prop.id]) {\n      this.container.title = this.psv.config.lang[this.prop.id];\n    }\n\n    if (tabbable) {\n      this.container.tabIndex = 0;\n    }\n\n    this.container.addEventListener('click', (e) => {\n      if (this.prop.enabled) {\n        this.onClick();\n      }\n      e.stopPropagation();\n    });\n\n    this.container.addEventListener('keydown', (e) => {\n      if (e.key === KEY_CODES.Enter && this.prop.enabled) {\n        this.onClick();\n        e.stopPropagation();\n      }\n    });\n  }\n\n  /**\n   * @package\n   */\n  checkSupported() {\n    const supportedOrObject = this.isSupported();\n    if (isPlainObject(supportedOrObject)) {\n      if (supportedOrObject.initial === false) {\n        this.hide();\n        this.prop.supported = false;\n      }\n\n      supportedOrObject.promise.then((supported) => {\n        if (!this.prop) {\n          return; // the component has been destroyed\n        }\n        this.prop.supported = supported;\n        this.toggle(supported);\n      });\n    }\n    else {\n      this.prop.supported = supportedOrObject;\n      if (!supportedOrObject) {\n        this.hide();\n      }\n    }\n  }\n\n  /**\n   * @summary Checks if the button can be displayed\n   * @returns {boolean|{initial: boolean, promise: Promise<boolean>}}\n   */\n  isSupported() {\n    return true;\n  }\n\n  /**\n   * @summary Changes the active state of the button\n   * @param {boolean} [active] - forced state\n   */\n  toggleActive(active) {\n    this.prop.active = active !== undefined ? active : !this.prop.active;\n    toggleClass(this.container, 'psv-button--active', this.prop.active);\n\n    if (this.constructor.iconActive) {\n      this.__setIcon(this.prop.active ? this.constructor.iconActive : this.constructor.icon);\n    }\n  }\n\n  /**\n   * @override\n   */\n  show(refresh = true) {\n    if (!this.isVisible()) {\n      this.prop.visible = true;\n      if (!this.prop.collapsed) {\n        this.container.style.display = '';\n      }\n      if (refresh) {\n        this.psv.refreshUi(`show button ${this.prop.id}`);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  hide(refresh = true) {\n    if (this.isVisible()) {\n      this.prop.visible = false;\n      this.container.style.display = 'none';\n      if (refresh) {\n        this.psv.refreshUi(`hide button ${this.prop.id}`);\n      }\n    }\n  }\n\n  /**\n   * @summary Disables the button\n   */\n  disable() {\n    this.container.classList.add('psv-button--disabled');\n    this.prop.enabled = false;\n  }\n\n  /**\n   * @summary Enables the button\n   */\n  enable() {\n    this.container.classList.remove('psv-button--disabled');\n    this.prop.enabled = true;\n  }\n\n  /**\n   * @summary Collapses the button in the navbar menu\n   */\n  collapse() {\n    this.prop.collapsed = true;\n    this.container.style.display = 'none';\n  }\n\n  /**\n   * @summary Uncollapses the button from the navbar menu\n   */\n  uncollapse() {\n    this.prop.collapsed = false;\n    if (this.prop.visible) {\n      this.container.style.display = '';\n    }\n  }\n\n  /**\n   * @summary Set the button icon\n   * @param {string} icon SVG\n   * @param {HTMLElement} [container] - default is the main button container\n   * @private\n   */\n  __setIcon(icon, container = this.container) {\n    if (icon) {\n      container.innerHTML = icon;\n      // className is read-only on SVGElement\n      container.querySelector('svg').classList.add('psv-button-svg');\n    }\n    else {\n      container.innerHTML = '';\n    }\n  }\n\n  /**\n   * @summary Action when the button is clicked\n   * @private\n   * @abstract\n   */\n  onClick() {\n    throw new PSVError(`onClick not implemented for button \"${this.prop.id}\".`);\n  }\n\n}\n","import { EVENTS } from '../data/constants';\nimport playActive from '../icons/play-active.svg';\nimport play from '../icons/play.svg';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar autorotate button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class AutorotateButton extends AbstractButton {\n\n  static id = 'autorotate';\n  static icon = play;\n  static iconActive = playActive;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-autorotate-button', true);\n\n    this.psv.on(EVENTS.AUTOROTATE, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.AUTOROTATE, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case EVENTS.AUTOROTATE: this.toggleActive(e.args[0]); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @description Toggles autorotate\n   */\n  onClick() {\n    if (this.psv.isAutorotateEnabled()) {\n      this.psv.config.autorotateIdle = false;\n      this.psv.resetIdleTimer();\n    }\n    this.psv.toggleAutorotate();\n  }\n\n}\n","import { addClasses } from '../utils';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar custom button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class CustomButton extends AbstractButton {\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   * @param {PSV.NavbarCustomButton} config\n   */\n  constructor(navbar, config) {\n    super(navbar, 'psv-custom-button', config.collapsable !== false, config.tabbable !== false);\n\n    /**\n     * @member {Object}\n     * @readonly\n     * @private\n     */\n    this.config = config;\n\n    if (this.config.id) {\n      this.prop.id = this.config.id;\n    }\n    else {\n      this.prop.id = 'psvButton-' + Math.random().toString(36).substr(2, 9);\n    }\n\n    if (this.config.className) {\n      addClasses(this.container, this.config.className);\n    }\n\n    if (this.config.title) {\n      this.container.title = this.config.title;\n    }\n\n    if (this.config.content) {\n      this.container.innerHTML = this.config.content;\n    }\n\n    this.prop.width = this.container.offsetWidth;\n\n    if (this.config.enabled === false) {\n      this.disable();\n    }\n\n    if (this.config.visible === false) {\n      this.hide();\n    }\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.config;\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   * @description Calls user method\n   */\n  onClick() {\n    if (this.config.onClick) {\n      this.config.onClick.call(this.psv, this.psv);\n    }\n  }\n\n}\n","import { EVENTS, IDS } from '../data/constants';\nimport info from '../icons/info.svg';\nimport { AbstractButton } from './AbstractButton';\n\nconst MODE_NOTIF = 1;\nconst MODE_PANEL = 2;\n\n/**\n * @summary Navigation bar description button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class DescriptionButton extends AbstractButton {\n\n  static id = 'description';\n  static icon = info;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-description-button');\n\n    /**\n     * @override\n     * @property {string} mode - notification or panel\n     */\n    this.prop = {\n      ...this.prop,\n      mode: null,\n    };\n\n    this.psv.on(EVENTS.HIDE_NOTIFICATION, this);\n    this.psv.on(EVENTS.SHOW_NOTIFICATION, this);\n    this.psv.on(EVENTS.CLOSE_PANEL, this);\n    this.psv.on(EVENTS.OPEN_PANEL, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.HIDE_NOTIFICATION, this);\n    this.psv.off(EVENTS.SHOW_NOTIFICATION, this);\n    this.psv.off(EVENTS.CLOSE_PANEL, this);\n    this.psv.off(EVENTS.OPEN_PANEL, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    if (!this.prop.mode) {\n      return;\n    }\n\n    let closed = false;\n    switch (e.type) {\n      case EVENTS.HIDE_NOTIFICATION:\n        closed = this.prop.mode === MODE_NOTIF;\n        break;\n\n      case EVENTS.SHOW_NOTIFICATION:\n        closed = this.prop.mode === MODE_NOTIF && e.args[0] !== IDS.DESCRIPTION;\n        break;\n\n      case EVENTS.CLOSE_PANEL:\n        closed = this.prop.mode === MODE_PANEL;\n        break;\n\n      case EVENTS.OPEN_PANEL:\n        closed = this.prop.mode === MODE_PANEL && e.args[0] !== IDS.DESCRIPTION;\n        break;\n\n      default:\n    }\n\n    if (closed) {\n      this.toggleActive(false);\n      this.prop.mode = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  hide(refresh) {\n    super.hide(refresh);\n\n    if (this.prop.mode) {\n      this.__close();\n    }\n  }\n\n  /**\n   * This button can only be refresh from NavbarCaption\n   * @override\n   */\n  refreshUi(refresh = false) {\n    if (refresh) {\n      const caption = this.psv.navbar.getButton('caption', false);\n      const captionHidden = caption && !caption.isVisible();\n      const hasDescription = !!this.psv.config.description;\n\n      if (captionHidden || hasDescription) {\n        this.show(false);\n      }\n      else {\n        this.hide(false);\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @description Toggles caption\n   */\n  onClick() {\n    if (this.prop.mode) {\n      this.__close();\n    }\n    else {\n      this.__open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  __close() {\n    switch (this.prop.mode) {\n      case MODE_NOTIF:\n        this.psv.notification.hide(IDS.DESCRIPTION);\n        break;\n      case MODE_PANEL:\n        this.psv.panel.hide(IDS.DESCRIPTION);\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @private\n   */\n  __open() {\n    this.toggleActive(true);\n\n    if (this.psv.config.description) {\n      this.prop.mode = MODE_PANEL;\n      this.psv.panel.show({\n        id     : IDS.DESCRIPTION,\n        content: `${this.psv.config.caption ? `<p>${this.psv.config.caption}</p>` : ''}${this.psv.config.description}`,\n      });\n    }\n    else {\n      this.prop.mode = MODE_NOTIF;\n      this.psv.notification.show({\n        id     : IDS.DESCRIPTION,\n        content: this.psv.config.caption,\n      });\n    }\n  }\n\n}\n","import download from '../icons/download.svg';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar download button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class DownloadButton extends AbstractButton {\n\n  static id = 'download';\n  static icon = download;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-download-button', true);\n  }\n\n  /**\n   * @override\n   * @description Asks the browser to download the panorama source file\n   */\n  onClick() {\n    const link = document.createElement('a');\n    link.href = this.psv.config.downloadUrl || this.psv.config.panorama;\n    link.download = link.href.split('/').pop();\n    this.psv.container.appendChild(link);\n    link.click();\n\n    setTimeout(() => {\n      this.psv.container.removeChild(link);\n    }, 100);\n  }\n\n  /**\n   * @override\n   */\n  refreshUi() {\n    const supported = this.psv.adapter.constructor.supportsDownload || this.psv.config.downloadUrl;\n    if (supported && !this.prop.visible) {\n      this.show();\n    }\n    else if (!supported && this.prop.visible) {\n      this.hide();\n    }\n  }\n\n}\n","import { EVENTS } from '../data/constants';\nimport fullscreenIn from '../icons/fullscreen-in.svg';\nimport fullscreenOut from '../icons/fullscreen-out.svg';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar fullscreen button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class FullscreenButton extends AbstractButton {\n\n  static id = 'fullscreen';\n  static icon = fullscreenIn;\n  static iconActive = fullscreenOut;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-fullscreen-button');\n\n    this.psv.on(EVENTS.FULLSCREEN_UPDATED, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.FULLSCREEN_UPDATED, this);\n\n    super.destroy();\n  }\n\n  /**\n   * Handle events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case EVENTS.FULLSCREEN_UPDATED: this.toggleActive(e.args[0]); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @description Toggles fullscreen\n   */\n  onClick() {\n    this.psv.toggleFullscreen();\n  }\n\n}\n","import { EVENTS, IDS } from '../data/constants';\nimport menuIcon from '../icons/menu.svg';\nimport { dasherize, getClosest } from '../utils';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar menu button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class MenuButton extends AbstractButton {\n\n  static id = 'menu';\n  static icon = menuIcon;\n\n  /**\n   * @summary Property name added to buttons list\n   * @type {string}\n   * @constant\n   */\n  static BUTTON_DATA = 'psvButton';\n\n  /**\n   * @summary Menu template\n   * @param {AbstractButton[]} buttons\n   * @param {PSV.Viewer} psv\n   * @param {string} dataKey\n   * @returns {string}\n   */\n  static MENU_TEMPLATE = (buttons, psv, dataKey) => `\n<div class=\"psv-panel-menu psv-panel-menu--stripped\">\n  <h1 class=\"psv-panel-menu-title\">${menuIcon} ${psv.config.lang.menu}</h1>\n  <ul class=\"psv-panel-menu-list\">\n    ${buttons.map(button => `\n    <li data-${dataKey}=\"${button.prop.id}\" class=\"psv-panel-menu-item\" tabindex=\"0\">\n      <span class=\"psv-panel-menu-item-icon\">${button.container.innerHTML}</span>\n      <span class=\"psv-panel-menu-item-label\">${button.container.title}</span>\n    </li>\n    `).join('')}\n  </ul>\n</div>\n`;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-menu-button');\n\n    this.psv.on(EVENTS.OPEN_PANEL, this);\n    this.psv.on(EVENTS.CLOSE_PANEL, this);\n\n    super.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.OPEN_PANEL, this);\n    this.psv.off(EVENTS.CLOSE_PANEL, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case EVENTS.OPEN_PANEL:  this.toggleActive(e.args[0] === IDS.MENU); break;\n      case EVENTS.CLOSE_PANEL: this.toggleActive(false); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   */\n  hide(refresh) {\n    super.hide(refresh);\n    this.__hideMenu();\n  }\n\n  /**\n   * @override\n   */\n  show(refresh) {\n    super.show(refresh);\n\n    if (this.prop.active) {\n      this.__showMenu();\n    }\n  }\n\n  /**\n   * @override\n   * @description Toggles menu\n   */\n  onClick() {\n    if (this.prop.active) {\n      this.__hideMenu();\n    }\n    else {\n      this.__showMenu();\n    }\n  }\n\n  __showMenu() {\n    this.psv.panel.show({\n      id          : IDS.MENU,\n      content     : MenuButton.MENU_TEMPLATE(this.parent.collapsed, this.psv, dasherize(MenuButton.BUTTON_DATA)),\n      noMargin    : true,\n      clickHandler: (e) => {\n        const li = e.target ? getClosest(e.target, 'li') : undefined;\n        const buttonId = li ? li.dataset[MenuButton.BUTTON_DATA] : undefined;\n\n        if (buttonId) {\n          this.parent.getButton(buttonId).onClick();\n          this.__hideMenu();\n        }\n      },\n    });\n  }\n\n  __hideMenu() {\n    this.psv.panel.hide(IDS.MENU);\n  }\n\n}\n","/**\n * @summary Helper for pressable things (buttons, keyboard)\n * @description When the pressed thing goes up and was not pressed long enough, wait a bit more before execution\n * @private\n */\nexport class PressHandler {\n\n  constructor(delay = 200) {\n    this.delay = delay;\n    this.time = 0;\n    this.timeout = null;\n  }\n\n  down() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n\n    this.time = new Date().getTime();\n  }\n\n  up(cb) {\n    if (!this.time) {\n      return;\n    }\n\n    const elapsed = new Date().getTime() - this.time;\n    if (elapsed < this.delay) {\n      this.timeout = setTimeout(() => {\n        cb();\n        this.timeout = null;\n        this.time = 0;\n      }, this.delay);\n    }\n    else {\n      cb();\n      this.time = 0;\n    }\n  }\n\n}\n","import { KEY_CODES } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport arrow from '../icons/arrow.svg';\nimport { PressHandler } from '../utils/PressHandler';\nimport { AbstractButton } from './AbstractButton';\n\nexport function getOrientedArrow(direction) {\n  let angle = 0;\n  switch (direction) {\n    // @formatter:off\n    case 'up': angle = 90; break;\n    case 'right': angle = 180; break;\n    case 'down': angle = -90; break;\n    default: angle = 0; break;\n    // @formatter:on\n  }\n\n  return arrow.replace('rotate(0', `rotate(${angle}`);\n}\n\n/**\n * @summary Navigation bar move button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class AbstractMoveButton extends AbstractButton {\n\n  static groupId = 'move';\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   * @param {number} value\n   */\n  constructor(navbar, value) {\n    super(navbar, 'psv-button--hover-scale psv-move-button');\n\n    this.container.title = this.psv.config.lang.move;\n\n    /**\n     * @override\n     * @property {{longitude: boolean, latitude: boolean}} value\n     * @property {PressHandler} handler\n     */\n    this.prop = {\n      ...this.prop,\n      value  : value,\n      handler: new PressHandler(),\n    };\n\n    this.container.addEventListener('mousedown', this);\n    this.container.addEventListener('keydown', this);\n    this.container.addEventListener('keyup', this);\n    this.psv.container.addEventListener('mouseup', this);\n    this.psv.container.addEventListener('touchend', this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.__onMouseUp();\n\n    this.psv.container.removeEventListener('mouseup', this);\n    this.psv.container.removeEventListener('touchend', this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'mousedown': this.__onMouseDown(); break;\n      case 'mouseup':   this.__onMouseUp(); break;\n      case 'touchend':  this.__onMouseUp(); break;\n      case 'keydown':   e.key === KEY_CODES.Enter && this.__onMouseDown(); break;\n      case 'keyup':     e.key === KEY_CODES.Enter && this.__onMouseUp(); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return {\n      initial: !SYSTEM.isTouchEnabled.initial,\n      promise: SYSTEM.isTouchEnabled.promise.then(enabled => !enabled),\n    };\n  }\n\n  /**\n   * @override\n   */\n  onClick() {\n    // nothing\n  }\n\n  /**\n   * @private\n   */\n  __onMouseDown() {\n    if (!this.prop.enabled) {\n      return;\n    }\n\n    this.psv.__stopAll();\n    this.psv.dynamics.position.roll(this.prop.value);\n    this.prop.handler.down();\n  }\n\n  /**\n   * @private\n   */\n  __onMouseUp() {\n    if (!this.prop.enabled) {\n      return;\n    }\n\n    this.prop.handler.up(() => {\n      this.psv.dynamics.position.stop();\n      this.psv.resetIdleTimer();\n    });\n  }\n\n}\n","import { AbstractMoveButton, getOrientedArrow } from './AbstractMoveButton';\n\n/**\n * @summary Navigation bar move down button class\n * @extends PSV.buttons.AbstractMoveButton\n * @memberof PSV.buttons\n */\nexport class MoveDownButton extends AbstractMoveButton {\n\n  static id = 'moveDown';\n  static icon = getOrientedArrow('down');\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, { latitude: true });\n  }\n\n}\n","import { AbstractMoveButton, getOrientedArrow } from './AbstractMoveButton';\n\n/**\n * @summary Navigation bar move left button class\n * @extends PSV.buttons.AbstractMoveButton\n * @memberof PSV.buttons\n */\nexport class MoveLeftButton extends AbstractMoveButton {\n\n  static id = 'moveLeft';\n  static icon = getOrientedArrow('left');\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, { longitude: true });\n  }\n\n}\n","import { AbstractMoveButton, getOrientedArrow } from './AbstractMoveButton';\n\n/**\n * @summary Navigation bar move right button class\n * @extends PSV.buttons.AbstractMoveButton\n * @memberof PSV.buttons\n */\nexport class MoveRightButton extends AbstractMoveButton {\n\n  static id = 'moveRight';\n  static icon = getOrientedArrow('right');\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, { longitude: false });\n  }\n\n}\n","import { AbstractMoveButton, getOrientedArrow } from './AbstractMoveButton';\n\n/**\n * @summary Navigation bar move up button class\n * @extends PSV.buttons.AbstractMoveButton\n * @memberof PSV.buttons\n */\nexport class MoveUpButton extends AbstractMoveButton {\n\n  static id = 'moveUp';\n  static icon = getOrientedArrow('up');\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, { latitude: false });\n  }\n\n}\n","import { KEY_CODES } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport { PressHandler } from '../utils/PressHandler';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar zoom button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class AbstractZoomButton extends AbstractButton {\n\n  static groupId = 'zoom';\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   * @param {number} value\n   */\n  constructor(navbar, value) {\n    super(navbar, 'psv-button--hover-scale psv-zoom-button');\n\n    /**\n     * @override\n     * @property {boolean} value\n     * @property {PressHandler} handler\n     */\n    this.prop = {\n      ...this.prop,\n      value  : value,\n      handler: new PressHandler(),\n    };\n\n    this.container.addEventListener('mousedown', this);\n    this.container.addEventListener('keydown', this);\n    this.container.addEventListener('keyup', this);\n    this.psv.container.addEventListener('mouseup', this);\n    this.psv.container.addEventListener('touchend', this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.__onMouseUp();\n\n    this.psv.container.removeEventListener('mouseup', this);\n    this.psv.container.removeEventListener('touchend', this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'mousedown': this.__onMouseDown(); break;\n      case 'mouseup':   this.__onMouseUp(); break;\n      case 'touchend':  this.__onMouseUp(); break;\n      case 'keydown':   e.key === KEY_CODES.Enter && this.__onMouseDown(); break;\n      case 'keyup':     e.key === KEY_CODES.Enter && this.__onMouseUp(); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return {\n      initial: !SYSTEM.isTouchEnabled.initial,\n      promise: SYSTEM.isTouchEnabled.promise.then(enabled => !enabled),\n    };\n  }\n\n  /**\n   * @override\n   */\n  onClick() {\n    // nothing\n  }\n\n  /**\n   * @private\n   */\n  __onMouseDown() {\n    if (!this.prop.enabled) {\n      return;\n    }\n\n    this.psv.dynamics.zoom.roll(this.prop.value);\n    this.prop.handler.down();\n  }\n\n  /**\n   * @private\n   */\n  __onMouseUp() {\n    if (!this.prop.enabled) {\n      return;\n    }\n\n    this.prop.handler.up(() => this.psv.dynamics.zoom.stop());\n  }\n\n}\n","import { AbstractZoomButton } from './AbstractZoomButton';\nimport zoomIn from '../icons/zoom-in.svg';\n\n/**\n * @summary Navigation bar zoom-in button class\n * @extends PSV.buttons.AbstractZoomButton\n * @memberof PSV.buttons\n */\nexport class ZoomInButton extends AbstractZoomButton {\n\n  static id = 'zoomIn';\n  static icon = zoomIn;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, false);\n  }\n\n}\n","import { AbstractZoomButton } from './AbstractZoomButton';\nimport zoomOut from '../icons/zoom-out.svg';\n\n/**\n * @summary Navigation bar zoom-out button class\n * @extends PSV.buttons.AbstractZoomButton\n * @memberof PSV.buttons\n */\nexport class ZoomOutButton extends AbstractZoomButton {\n\n  static id = 'zoomOut';\n  static icon = zoomOut;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, true);\n  }\n\n}\n","import { EVENTS } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport { getStyle, Slider } from '../utils';\nimport { AbstractButton } from './AbstractButton';\n\n/**\n * @summary Navigation bar zoom button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class ZoomRangeButton extends AbstractButton {\n\n  static id = 'zoomRange';\n  static groupId = 'zoom';\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-zoom-range', false, false);\n\n    /**\n     * @override\n     * @property {number} mediaMinWidth\n     */\n    this.prop = {\n      ...this.prop,\n      mediaMinWidth: 0,\n    };\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.zoomRange = document.createElement('div');\n    this.zoomRange.className = 'psv-zoom-range-line';\n    this.container.appendChild(this.zoomRange);\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.zoomValue = document.createElement('div');\n    this.zoomValue.className = 'psv-zoom-range-handle';\n    this.zoomRange.appendChild(this.zoomValue);\n\n    /**\n     * @member {PSV.Slider}\n     * @readonly\n     * @private\n     */\n    this.slider = new Slider({\n      container: this.container,\n      direction: Slider.HORIZONTAL,\n      onUpdate : e => this.__onSliderUpdate(e),\n    });\n\n    this.prop.mediaMinWidth = parseInt(getStyle(this.container, 'maxWidth'), 10);\n\n    this.psv.on(EVENTS.ZOOM_UPDATED, this);\n    if (this.psv.prop.ready) {\n      this.__moveZoomValue(this.psv.getZoomLevel());\n    }\n    else {\n      this.psv.once(EVENTS.READY, this);\n    }\n\n    this.refreshUi();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.slider.destroy();\n\n    delete this.zoomRange;\n    delete this.zoomValue;\n\n    this.psv.off(EVENTS.ZOOM_UPDATED, this);\n    this.psv.off(EVENTS.READY, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case EVENTS.ZOOM_UPDATED: this.__moveZoomValue(e.args[0]); break;\n      case EVENTS.READY:        this.__moveZoomValue(this.psv.getZoomLevel()); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return {\n      initial: !SYSTEM.isTouchEnabled.initial,\n      promise: SYSTEM.isTouchEnabled.promise.then(enabled => !enabled),\n    };\n  }\n\n  /**\n   * @override\n   */\n  refreshUi() {\n    if (this.prop.supported) {\n      if (this.psv.prop.size.width <= this.prop.mediaMinWidth && this.prop.visible) {\n        this.hide();\n      }\n      else if (this.psv.prop.size.width > this.prop.mediaMinWidth && !this.prop.visible) {\n        this.show();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  onClick() {\n    // nothing\n  }\n\n  /**\n   * @summary Moves the zoom cursor\n   * @param {number} level\n   * @private\n   */\n  __moveZoomValue(level) {\n    this.zoomValue.style.left = (level / 100 * this.zoomRange.offsetWidth - this.zoomValue.offsetWidth / 2) + 'px';\n  }\n\n\n  /**\n   * @summary Zoom change\n   * @private\n   */\n  __onSliderUpdate(e) {\n    if (e.mousedown) {\n      this.psv.zoom(e.value * 100);\n    }\n  }\n\n}\n","import { EventEmitter } from 'uevent';\n\n/**\n * @namespace PSV.plugins\n */\n\n/**\n * @summary Base plugins class\n * @memberof PSV.plugins\n * @abstract\n */\nexport class AbstractPlugin extends EventEmitter {\n\n  /**\n   * @summary Unique identifier of the plugin\n   * @member {string}\n   * @readonly\n   * @static\n   */\n  static id = null;\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super();\n\n    /**\n     * @summary Reference to main controller\n     * @type {PSV.Viewer}\n     * @readonly\n     */\n    this.psv = psv;\n  }\n\n  /**\n   * @summary Initializes the plugin\n   * @package\n   */\n  init() {\n  }\n\n  /**\n   * @summary Destroys the plugin\n   * @package\n   */\n  destroy() {\n    delete this.psv;\n  }\n\n}\n","import { MathUtils } from 'three';\nimport { AbstractAdapter } from '../adapters/AbstractAdapter';\nimport { EquirectangularAdapter } from '../adapters/equirectangular';\nimport { AbstractPlugin } from '../plugins/AbstractPlugin';\nimport { PSVError } from '../PSVError';\nimport { clone, deepmerge, each, isNil, logWarn, parseAngle, parseSpeed, pluginInterop } from '../utils';\nimport { ACTIONS, KEY_CODES } from './constants';\n\n/**\n * @summary Default options\n * @type {PSV.Options}\n * @memberOf PSV\n * @constant\n */\nexport const DEFAULTS = {\n  panorama           : null,\n  overlay            : null,\n  overlayOpacity     : 1,\n  container          : null,\n  adapter            : null,\n  plugins            : [],\n  caption            : null,\n  description        : null,\n  downloadUrl        : null,\n  loadingImg         : null,\n  loadingTxt         : 'Loading...',\n  size               : null,\n  fisheye            : false,\n  minFov             : 30,\n  maxFov             : 90,\n  defaultZoomLvl     : 50,\n  defaultLong        : 0,\n  defaultLat         : 0,\n  sphereCorrection   : null,\n  moveSpeed          : 1,\n  zoomSpeed          : 1,\n  autorotateDelay    : null,\n  autorotateIdle     : false,\n  autorotateSpeed    : '2rpm',\n  autorotateLat      : null,\n  autorotateZoomLvl  : null,\n  moveInertia        : true,\n  mousewheel         : true,\n  mousemove          : true,\n  mousewheelCtrlKey  : false,\n  touchmoveTwoFingers: false,\n  useXmpData         : true,\n  panoData           : null,\n  requestHeaders     : null,\n  canvasBackground   : '#000',\n  withCredentials    : false,\n  navbar             : [\n    'autorotate',\n    'zoom',\n    'move',\n    'download',\n    'description',\n    'caption',\n    'fullscreen',\n  ],\n  lang               : {\n    autorotate: 'Automatic rotation',\n    zoom      : 'Zoom',\n    zoomOut   : 'Zoom out',\n    zoomIn    : 'Zoom in',\n    move      : 'Move',\n    download  : 'Download',\n    fullscreen: 'Fullscreen',\n    menu      : 'Menu',\n    twoFingers: 'Use two fingers to navigate',\n    ctrlZoom  : 'Use ctrl + scroll to zoom the image',\n    loadError : 'The panorama can\\'t be loaded',\n  },\n  keyboard           : {\n    [KEY_CODES.ArrowUp]   : ACTIONS.ROTATE_LAT_UP,\n    [KEY_CODES.ArrowDown] : ACTIONS.ROTATE_LAT_DOWN,\n    [KEY_CODES.ArrowRight]: ACTIONS.ROTATE_LONG_RIGHT,\n    [KEY_CODES.ArrowLeft] : ACTIONS.ROTATE_LONG_LEFT,\n    [KEY_CODES.PageUp]    : ACTIONS.ZOOM_IN,\n    [KEY_CODES.PageDown]  : ACTIONS.ZOOM_OUT,\n    [KEY_CODES.Plus]      : ACTIONS.ZOOM_IN,\n    [KEY_CODES.Minus]     : ACTIONS.ZOOM_OUT,\n    [KEY_CODES.Space]     : ACTIONS.TOGGLE_AUTOROTATE,\n  },\n};\n\n/**\n * @summary List of unmodifiable options and their error messages\n * @private\n */\nexport const READONLY_OPTIONS = {\n  panorama : 'Use setPanorama method to change the panorama',\n  panoData : 'Use setPanorama method to change the panorama',\n  container: 'Cannot change viewer container',\n  adapter  : 'Cannot change adapter',\n  plugins  : 'Cannot change plugins',\n};\n\n/**\n * @summary List of deprecated options and their warning messages\n * @private\n */\nexport const DEPRECATED_OPTIONS = {\n  captureCursor: 'captureCursor is deprecated',\n};\n\n/**\n * @summary Parsers/validators for each option\n * @private\n */\nexport const CONFIG_PARSERS = {\n  container        : (container) => {\n    if (!container) {\n      throw new PSVError('No value given for container.');\n    }\n    return container;\n  },\n  adapter          : (adapter) => {\n    if (!adapter) {\n      adapter = [EquirectangularAdapter];\n    }\n    else if (Array.isArray(adapter)) {\n      adapter = [pluginInterop(adapter[0], AbstractAdapter), adapter[1]];\n    }\n    else {\n      adapter = [pluginInterop(adapter, AbstractAdapter)];\n    }\n    if (!adapter[0]) {\n      throw new PSVError('Un undefined value with given for adapter.');\n    }\n    return adapter;\n  },\n  overlayOpacity   : (overlayOpacity) => {\n    return MathUtils.clamp(overlayOpacity, 0, 1);\n  },\n  defaultLong      : (defaultLong) => {\n    // defaultLat is between 0 and PI\n    return parseAngle(defaultLong);\n  },\n  defaultLat       : (defaultLat) => {\n    // defaultLat is between -PI/2 and PI/2\n    return parseAngle(defaultLat, true);\n  },\n  defaultZoomLvl   : (defaultZoomLvl) => {\n    return MathUtils.clamp(defaultZoomLvl, 0, 100);\n  },\n  minFov           : (minFov, config) => {\n    // minFov and maxFov must be ordered\n    if (config.maxFov < minFov) {\n      logWarn('maxFov cannot be lower than minFov');\n      minFov = config.maxFov;\n    }\n    // minFov between 1 and 179\n    return MathUtils.clamp(minFov, 1, 179);\n  },\n  maxFov           : (maxFov, config) => {\n    // minFov and maxFov must be ordered\n    if (maxFov < config.minFov) {\n      maxFov = config.minFov;\n    }\n    // maxFov between 1 and 179\n    return MathUtils.clamp(maxFov, 1, 179);\n  },\n  lang             : (lang) => {\n    if (Array.isArray(lang.twoFingers)) {\n      logWarn('lang.twoFingers must not be an array');\n      lang.twoFingers = lang.twoFingers[0];\n    }\n    return {\n      ...DEFAULTS.lang,\n      ...lang,\n    };\n  },\n  keyboard         : (keyboard) => {\n    // keyboard=true becomes the default map\n    if (keyboard === true) {\n      return clone(DEFAULTS.keyboard);\n    }\n    return keyboard;\n  },\n  autorotateLat    : (autorotateLat, config) => {\n    // default autorotateLat is defaultLat\n    if (autorotateLat === null) {\n      return parseAngle(config.defaultLat, true);\n    }\n    // autorotateLat is between -PI/2 and PI/2\n    else {\n      return parseAngle(autorotateLat, true);\n    }\n  },\n  autorotateZoomLvl: (autorotateZoomLvl) => {\n    if (isNil(autorotateZoomLvl)) {\n      return null;\n    }\n    else {\n      return MathUtils.clamp(autorotateZoomLvl, 0, 100);\n    }\n  },\n  autorotateSpeed  : (autorotateSpeed) => {\n    return parseSpeed(autorotateSpeed);\n  },\n  autorotateIdle   : (autorotateIdle, config) => {\n    if (autorotateIdle && isNil(config.autorotateDelay)) {\n      logWarn('autorotateIdle requires a non null autorotateDelay');\n      return false;\n    }\n    return autorotateIdle;\n  },\n  fisheye          : (fisheye) => {\n    // translate boolean fisheye to amount\n    if (fisheye === true) {\n      return 1;\n    }\n    else if (fisheye === false) {\n      return 0;\n    }\n    return fisheye;\n  },\n  plugins          : (plugins) => {\n    return plugins\n      .map((plugin) => {\n        if (Array.isArray(plugin)) {\n          plugin = [pluginInterop(plugin[0], AbstractPlugin), plugin[1]];\n        }\n        else {\n          plugin = [pluginInterop(plugin, AbstractPlugin)];\n        }\n        if (!plugin[0]) {\n          throw new PSVError('Un undefined value was given for plugins.');\n        }\n        return plugin;\n      });\n  },\n};\n\n/**\n * @summary Merge user config with default config and performs validation\n * @param {PSV.Options} options\n * @returns {PSV.Options}\n * @memberOf PSV\n * @private\n */\nexport function getConfig(options) {\n  const tempConfig = clone(DEFAULTS);\n  deepmerge(tempConfig, options);\n\n  const config = {};\n\n  each(tempConfig, (value, key) => {\n    if (DEPRECATED_OPTIONS[key]) {\n      logWarn(DEPRECATED_OPTIONS[key]);\n      return;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(DEFAULTS, key)) {\n      throw new PSVError(`Unknown option ${key}`);\n    }\n\n    if (CONFIG_PARSERS[key]) {\n      config[key] = CONFIG_PARSERS[key](value, tempConfig);\n    }\n    else {\n      config[key] = value;\n    }\n  });\n\n  return config;\n}\n","import { DescriptionButton } from '../buttons/DescriptionButton';\nimport { AbstractComponent } from './AbstractComponent';\n\n/**\n * @summary Navbar caption class\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class NavbarCaption extends AbstractComponent {\n\n  static id = 'caption';\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   * @param {string} caption\n   */\n  constructor(navbar, caption) {\n    super(navbar, 'psv-caption');\n\n    /**\n     * @override\n     * @property {string} id\n     * @property {boolean} collapsable\n     * @property {number} width\n     * @property {number} contentWidth - width of the caption content\n     */\n    this.prop = {\n      ...this.prop,\n      id          : this.constructor.id,\n      collapsable : false,\n      width       : 0,\n      contentWidth: 0,\n    };\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = document.createElement('div');\n    this.content.className = 'psv-caption-content';\n    this.container.appendChild(this.content);\n\n    this.setCaption(caption);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.content;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Sets the bar caption\n   * @param {string} html\n   */\n  setCaption(html) {\n    this.show();\n    this.content.innerHTML = html;\n    this.prop.contentWidth = html ? this.content.offsetWidth : 0;\n    this.refreshUi();\n  }\n\n  /**\n   * @summary Toggles content and icon depending on available space\n   * @private\n   */\n  refreshUi() {\n    this.toggle(this.container.offsetWidth >= this.prop.contentWidth);\n    this.__refreshButton();\n  }\n\n  /**\n   * @override\n   */\n  hide() {\n    this.content.style.display = 'none';\n    this.prop.visible = false;\n  }\n\n  /**\n   * @override\n   */\n  show() {\n    this.content.style.display = '';\n    this.prop.visible = true;\n  }\n\n  /**\n   * @private\n   */\n  __refreshButton() {\n    this.psv.navbar.getButton(DescriptionButton.id, false)?.refreshUi(true);\n  }\n\n}\n","import { AutorotateButton } from '../buttons/AutorotateButton';\nimport { CustomButton } from '../buttons/CustomButton';\nimport { DescriptionButton } from '../buttons/DescriptionButton';\nimport { DownloadButton } from '../buttons/DownloadButton';\nimport { FullscreenButton } from '../buttons/FullscreenButton';\nimport { MenuButton } from '../buttons/MenuButton';\nimport { MoveDownButton } from '../buttons/MoveDownButton';\nimport { MoveLeftButton } from '../buttons/MoveLeftButton';\nimport { MoveRightButton } from '../buttons/MoveRightButton';\nimport { MoveUpButton } from '../buttons/MoveUpButton';\nimport { ZoomInButton } from '../buttons/ZoomInButton';\nimport { ZoomOutButton } from '../buttons/ZoomOutButton';\nimport { ZoomRangeButton } from '../buttons/ZoomRangeButton';\nimport { DEFAULTS } from '../data/config';\nimport { PSVError } from '../PSVError';\nimport { clone, logWarn } from '../utils';\nimport { AbstractComponent } from './AbstractComponent';\nimport { NavbarCaption } from './NavbarCaption';\n\n/**\n * @summary List of available buttons\n * @type {Object<string, Class<PSV.buttons.AbstractButton>>}\n * @private\n */\nconst AVAILABLE_BUTTONS = {};\n\n/**\n * @summary List of available buttons\n * @type {Object<string, Array<Class<PSV.buttons.AbstractButton>>>}\n * @private\n */\nconst AVAILABLE_GROUPS = {};\n\n/**\n * @summary Register a new button available for all viewers\n * @param {Class<PSV.buttons.AbstractButton>} button\n * @param {'start' | 'end' | '[id]:left' | '[id]:right'} [defaultPosition]\n *    If provided the default configuration of the navbar will be modified.\n * @memberOf PSV\n */\nexport function registerButton(button, defaultPosition) {\n  if (!button.id) {\n    throw new PSVError('Button ID is required');\n  }\n\n  AVAILABLE_BUTTONS[button.id] = button;\n\n  if (button.groupId) {\n    AVAILABLE_GROUPS[button.groupId] = AVAILABLE_GROUPS[button.groupId] || [];\n    AVAILABLE_GROUPS[button.groupId].push(button);\n  }\n\n  if (typeof defaultPosition === 'string') {\n    switch (defaultPosition) {\n      case 'start':\n        DEFAULTS.navbar.unshift(button.id);\n        break;\n      case 'end':\n        DEFAULTS.navbar.push(button.id);\n        break;\n      default:\n        const [id, pos] = defaultPosition.split(':');\n        DEFAULTS.navbar.splice(DEFAULTS.navbar.indexOf(id) + (pos === 'right' ? 1 : 0), 0, button.id);\n    }\n  }\n}\n\n[\n  AutorotateButton,\n  ZoomOutButton,\n  ZoomRangeButton,\n  ZoomInButton,\n  DescriptionButton,\n  DownloadButton,\n  FullscreenButton,\n  MoveLeftButton,\n  MoveRightButton,\n  MoveUpButton,\n  MoveDownButton,\n].forEach(registerButton);\n\n/**\n * @summary Navigation bar component\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Navbar extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv, 'psv-navbar psv--capture-event');\n\n    /**\n     * @summary List of buttons of the navbar\n     * @member {PSV.buttons.AbstractButton[]}\n     * @override\n     */\n    this.children = [];\n\n    /**\n     * @summary List of collapsed buttons\n     * @member {PSV.buttons.AbstractButton[]}\n     * @private\n     */\n    this.collapsed = [];\n  }\n\n  /**\n   * @summary Change the buttons visible on the navbar\n   * @param {string|Array<string|PSV.NavbarCustomButton>} buttons\n   * @throws {PSV.PSVError} when a button is unknown\n   */\n  setButtons(buttons) {\n    this.children.slice().forEach(item => item.destroy());\n    this.children.length = 0;\n\n    const cleanedButtons = this.__cleanButtons(buttons);\n\n    // force description button if caption is present (used on narrow screens)\n    if (cleanedButtons.indexOf(NavbarCaption.id) !== -1 && cleanedButtons.indexOf(DescriptionButton.id) === -1) {\n      cleanedButtons.splice(cleanedButtons.indexOf(NavbarCaption.id), 0, DescriptionButton.id);\n    }\n\n    /* eslint-disable no-new */\n    cleanedButtons.forEach((button) => {\n      if (typeof button === 'object') {\n        new CustomButton(this, button);\n      }\n      else if (AVAILABLE_BUTTONS[button]) {\n        new AVAILABLE_BUTTONS[button](this);\n      }\n      else if (AVAILABLE_GROUPS[button]) {\n        AVAILABLE_GROUPS[button].forEach(buttonCtor => new buttonCtor(this)); // eslint-disable-line new-cap\n      }\n      else if (button === NavbarCaption.id) {\n        new NavbarCaption(this, this.psv.config.caption);\n      }\n      else {\n        throw new PSVError('Unknown button ' + button);\n      }\n    });\n\n    new MenuButton(this);\n    /* eslint-enable no-new */\n\n    this.children.forEach((item) => {\n      if (typeof item.checkSupported === 'function') {\n        item.checkSupported();\n      }\n    });\n  }\n\n  /**\n   * @summary Sets the bar caption\n   * @param {string} html\n   */\n  setCaption(html) {\n    const caption = this.getButton(NavbarCaption.id, false);\n    caption?.setCaption(html);\n  }\n\n  /**\n   * @summary Returns a button by its identifier\n   * @param {string} id\n   * @param {boolean} [warnNotFound=true]\n   * @returns {PSV.buttons.AbstractButton}\n   */\n  getButton(id, warnNotFound = true) {\n    let button = null;\n\n    this.children.some((item) => {\n      if (item.prop.id === id) {\n        button = item;\n        return true;\n      }\n      else {\n        return false;\n      }\n    });\n\n    if (!button && warnNotFound) {\n      logWarn(`button \"${id}\" not found in the navbar`);\n    }\n\n    return button;\n  }\n\n  /**\n   * @summary Shows the navbar\n   */\n  show() {\n    this.container.classList.add('psv-navbar--open');\n    this.prop.visible = true;\n  }\n\n  /**\n   * @summary Hides the navbar\n   */\n  hide() {\n    this.container.classList.remove('psv-navbar--open');\n    this.prop.visible = false;\n  }\n\n  /**\n   * @override\n   */\n  refreshUi() {\n    super.refreshUi();\n\n    if (this.psv.prop.uiRefresh === true) {\n      const availableWidth = this.container.offsetWidth;\n\n      let totalWidth = 0;\n      const visibleButtons = [];\n      const collapsableButtons = [];\n\n      this.children.forEach((item) => {\n        if (item.prop.visible) {\n          totalWidth += item.prop.width;\n          visibleButtons.push(item);\n          if (item.prop.collapsable) {\n            collapsableButtons.push(item);\n          }\n        }\n      });\n\n      if (!visibleButtons.length) {\n        return;\n      }\n\n      if (availableWidth < totalWidth && collapsableButtons.length > 0) {\n        collapsableButtons.forEach(item => item.collapse());\n        this.collapsed = collapsableButtons;\n\n        this.getButton(MenuButton.id).show(false);\n      }\n      else if (availableWidth >= totalWidth && this.collapsed.length > 0) {\n        this.collapsed.forEach(item => item.uncollapse());\n        this.collapsed = [];\n\n        this.getButton(MenuButton.id).hide(false);\n      }\n\n      const caption = this.getButton(NavbarCaption.id, false);\n      if (caption) {\n        caption.refreshUi();\n      }\n    }\n  }\n\n  /**\n   * @summary Ensure the buttons configuration is correct\n   * @private\n   */\n  __cleanButtons(buttons) {\n    // true becomes the default array\n    if (buttons === true) {\n      return clone(DEFAULTS.navbar);\n    }\n    // can be a space or coma separated list\n    else if (typeof buttons === 'string') {\n      return buttons.split(/[ ,]/);\n    }\n    else {\n      return buttons || [];\n    }\n  }\n\n}\n","import { MathUtils } from 'three';\nimport { EVENTS } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport { getStyle } from '../utils';\nimport { AbstractComponent } from './AbstractComponent';\n\n/**\n * @summary Loader component\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Loader extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv, 'psv-loader-container');\n\n    /**\n     * @summary Inner container for vertical center\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.loader = document.createElement('div');\n    this.loader.className = 'psv-loader';\n    this.container.appendChild(this.loader);\n\n    /**\n     * @summary Animation canvas\n     * @member {HTMLCanvasElement}\n     * @readonly\n     * @private\n     */\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'psv-loader-canvas';\n\n    this.canvas.width = this.loader.clientWidth * SYSTEM.pixelRatio;\n    this.canvas.height = this.loader.clientWidth * SYSTEM.pixelRatio;\n    this.loader.appendChild(this.canvas);\n\n    /**\n     * @override\n     * @property {number} thickness\n     * @property {string} current\n     */\n    this.prop = {\n      ...this.prop,\n      tickness: (this.loader.offsetWidth - this.loader.clientWidth) / 2 * SYSTEM.pixelRatio,\n      current : null,\n    };\n\n    this.refreshUi();\n    this.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.loader;\n    delete this.canvas;\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   */\n  refreshUi() {\n    if (this.prop.current !== (this.psv.config.loadingImg || this.psv.config.loadingTxt)) {\n      if (this.prop.current) {\n        this.loader.removeChild(this.loader.lastChild);\n      }\n\n      let inner;\n      if (this.psv.config.loadingImg) {\n        inner = document.createElement('img');\n        inner.className = 'psv-loader-image';\n        inner.src = this.psv.config.loadingImg;\n      }\n      else if (this.psv.config.loadingTxt) {\n        inner = document.createElement('div');\n        inner.className = 'psv-loader-text';\n        inner.innerHTML = this.psv.config.loadingTxt;\n      }\n      if (inner) {\n        const size = Math.round(Math.sqrt(2 * Math.pow((this.canvas.width / 2 - this.prop.tickness / 2) / SYSTEM.pixelRatio, 2)));\n        inner.style.maxWidth = size + 'px';\n        inner.style.maxHeight = size + 'px';\n        this.loader.appendChild(inner);\n      }\n\n      this.prop.current = this.psv.config.loadingImg || this.psv.config.loadingTxt;\n    }\n  }\n\n  /**\n   * @summary Sets the loader progression\n   * @param {number} value - from 0 to 100\n   */\n  setProgress(value) {\n    const context = this.canvas.getContext('2d');\n\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    context.lineWidth = this.prop.tickness;\n    context.strokeStyle = getStyle(this.loader, 'color');\n\n    context.beginPath();\n    context.arc(\n      this.canvas.width / 2, this.canvas.height / 2,\n      this.canvas.width / 2 - this.prop.tickness / 2,\n      -Math.PI / 2, MathUtils.clamp(value, 0, 100) / 100 * 2 * Math.PI - Math.PI / 2\n    );\n    context.stroke();\n\n    this.psv.trigger(EVENTS.LOAD_PROGRESS, Math.round(value));\n  }\n\n}\n","import { EVENTS } from '../data/constants';\nimport { PSVError } from '../PSVError';\nimport { AbstractComponent } from './AbstractComponent';\n\n/**\n * @summary Notification component\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Notification extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv, 'psv-notification');\n\n    /**\n     * @override\n     * @property {*} timeout\n     */\n    this.prop = {\n      ...this.prop,\n      visible  : false,\n      contentId: undefined,\n      timeout  : null,\n    };\n\n    /**\n     * Notification content\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = document.createElement('div');\n    this.content.className = 'psv-notification-content';\n    this.container.appendChild(this.content);\n\n    this.content.addEventListener('click', () => this.hide());\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.content;\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   * @param {string} [id]\n   */\n  isVisible(id) {\n    return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n  }\n\n  /**\n   * @override\n   * @summary This method is not supported\n   * @throws {PSV.PSVError} always\n   */\n  toggle() {\n    throw new PSVError('Notification cannot be toggled');\n  }\n\n  /**\n   * @summary Displays a notification on the viewer\n   * @param {Object|string} config\n   * @param {string} [config.id] - unique identifier to use with \"hide\"\n   * @param {string} config.content\n   * @param {number} [config.timeout]\n   * @fires PSV.show-notification\n   *\n   * @example\n   * viewer.showNotification({ content: 'Hello world', timeout: 5000 })\n   * @example\n   * viewer.showNotification('Hello world')\n   */\n  show(config) {\n    if (this.prop.timeout) {\n      clearTimeout(this.prop.timeout);\n      this.prop.timeout = null;\n    }\n\n    if (typeof config === 'string') {\n      config = { content: config };\n    }\n\n    this.prop.contentId = config.id;\n    this.content.innerHTML = config.content;\n\n    this.container.classList.add('psv-notification--visible');\n    this.prop.visible = true;\n\n    this.psv.trigger(EVENTS.SHOW_NOTIFICATION, config.id);\n\n    if (config.timeout) {\n      this.prop.timeout = setTimeout(() => this.hide(config.id), config.timeout);\n    }\n  }\n\n  /**\n   * @summary Hides the notification\n   * @param {string} [id]\n   * @fires PSV.hide-notification\n   */\n  hide(id) {\n    if (this.isVisible(id)) {\n      const contentId = this.prop.contentId;\n\n      this.container.classList.remove('psv-notification--visible');\n      this.prop.visible = false;\n\n      this.prop.contentId = undefined;\n\n      this.psv.trigger(EVENTS.HIDE_NOTIFICATION, contentId);\n    }\n  }\n\n}\n","import { EVENTS, KEY_CODES } from '../data/constants';\nimport { PSVError } from '../PSVError';\nimport { AbstractComponent } from './AbstractComponent';\n\n/**\n * @summary Overlay component\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Overlay extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv, 'psv-overlay');\n\n    /**\n     * @override\n     * @property {string} contentId\n     * @property {boolean} dissmisable\n     */\n    this.prop = {\n      ...this.prop,\n      contentId  : undefined,\n      dissmisable: true,\n    };\n\n    /**\n     * Image container\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.image = document.createElement('div');\n    this.image.className = 'psv-overlay-image';\n    this.container.appendChild(this.image);\n\n    /**\n     * Text container\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.text = document.createElement('div');\n    this.text.className = 'psv-overlay-text';\n    this.container.appendChild(this.text);\n\n    /**\n     * Subtext container\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.subtext = document.createElement('div');\n    this.subtext.className = 'psv-overlay-subtext';\n    this.container.appendChild(this.subtext);\n\n    this.psv.on(EVENTS.CLICK, this);\n    this.psv.on(EVENTS.KEY_PRESS, this);\n\n    super.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.CLICK, this);\n    this.psv.off(EVENTS.KEY_PRESS, this);\n\n    delete this.image;\n    delete this.text;\n    delete this.subtext;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case EVENTS.CLICK:\n        if (this.isVisible() && this.prop.dissmisable) {\n          this.hide();\n          e.stopPropagation();\n        }\n        break;\n      case EVENTS.KEY_PRESS:\n        if (this.isVisible() && this.prop.dissmisable && e.args[0] === KEY_CODES.Escape) {\n          this.hide();\n          e.preventDefault();\n        }\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @param {string} [id]\n   */\n  isVisible(id) {\n    return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n  }\n\n  /**\n   * @override\n   * @summary This method is not supported\n   * @throws {PSV.PSVError} always\n   */\n  toggle() {\n    throw new PSVError('Overlay cannot be toggled');\n  }\n\n  /**\n   * @summary Displays an overlay on the viewer\n   * @param {Object|string} config\n   * @param {string} [config.id] - unique identifier to use with \"hide\"\n   * @param {string} config.image - SVG image/icon displayed above the text\n   * @param {string} config.text - main message\n   * @param {string} [config.subtext] - secondary message\n   * @param {boolean} [config.dissmisable=true] - if the user can hide the overlay by clicking\n   * @fires PSV.show-overlay\n   */\n  show(config) {\n    if (typeof config === 'string') {\n      config = { text: config };\n    }\n\n    this.prop.contentId = config.id;\n    this.prop.dissmisable = config.dissmisable !== false;\n    this.image.innerHTML = config.image || '';\n    this.text.innerHTML = config.text || '';\n    this.subtext.innerHTML = config.subtext || '';\n\n    super.show();\n\n    this.psv.trigger(EVENTS.SHOW_OVERLAY, config.id);\n  }\n\n  /**\n   * @summary Hides the overlay\n   * @param {string} [id]\n   * @fires PSV.hide-overlay\n   */\n  hide(id) {\n    if (this.isVisible(id)) {\n      const contentId = this.prop.contentId;\n\n      super.hide();\n\n      this.prop.contentId = undefined;\n\n      this.psv.trigger(EVENTS.HIDE_OVERLAY, contentId);\n    }\n  }\n\n}\n","import { EVENTS, KEY_CODES } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport { PSVError } from '../PSVError';\nimport { toggleClass } from '../utils';\nimport { AbstractComponent } from './AbstractComponent';\n\n/**\n * @summary Minimum width of the panel\n * @type {number}\n * @constant\n * @private\n */\nconst PANEL_MIN_WIDTH = 200;\n\n/**\n * @summary Panel component\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Panel extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv, 'psv-panel psv--capture-event');\n\n    /**\n     * @override\n     * @property {string} contentId\n     * @property {number} mouseX\n     * @property {number} mouseY\n     * @property {boolean} mousedown\n     * @property {function} clickHandler\n     * @property {function} keyHandler\n     */\n    this.prop = {\n      ...this.prop,\n      visible     : false,\n      contentId   : undefined,\n      mouseX      : 0,\n      mouseY      : 0,\n      mousedown   : false,\n      clickHandler: null,\n      keyHandler  : null,\n      width       : {},\n    };\n\n    const resizer = document.createElement('div');\n    resizer.className = 'psv-panel-resizer';\n    this.container.appendChild(resizer);\n\n    const closeBtn = document.createElement('div');\n    closeBtn.className = 'psv-panel-close-button';\n    this.container.appendChild(closeBtn);\n\n    /**\n     * @summary Content container\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = document.createElement('div');\n    this.content.className = 'psv-panel-content';\n    this.container.appendChild(this.content);\n\n    // Stop wheel event bubbling from panel\n    this.container.addEventListener(SYSTEM.mouseWheelEvent, e => e.stopPropagation());\n\n    closeBtn.addEventListener('click', () => this.hide());\n\n    // Event for panel resizing + stop bubling\n    resizer.addEventListener('mousedown', this);\n    resizer.addEventListener('touchstart', this);\n    this.psv.container.addEventListener('mouseup', this);\n    this.psv.container.addEventListener('touchend', this);\n    this.psv.container.addEventListener('mousemove', this);\n    this.psv.container.addEventListener('touchmove', this);\n\n    this.psv.on(EVENTS.KEY_PRESS, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(EVENTS.KEY_PRESS, this);\n\n    this.psv.container.removeEventListener('mousemove', this);\n    this.psv.container.removeEventListener('touchmove', this);\n    this.psv.container.removeEventListener('mouseup', this);\n    this.psv.container.removeEventListener('touchend', this);\n\n    delete this.prop;\n    delete this.content;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'mousedown':  this.__onMouseDown(e);  break;\n      case 'touchstart': this.__onTouchStart(e); break;\n      case 'mousemove':  this.__onMouseMove(e);  break;\n      case 'touchmove':  this.__onTouchMove(e);  break;\n      case 'mouseup':    this.__onMouseUp(e);    break;\n      case 'touchend':   this.__onMouseUp(e);    break;\n      case EVENTS.KEY_PRESS:\n        if (this.isVisible() && e.args[0] === KEY_CODES.Escape) {\n          this.hide();\n          e.preventDefault();\n        }\n        break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @param {string} [id]\n   */\n  isVisible(id) {\n    return this.prop.visible && (!id || !this.prop.contentId || this.prop.contentId === id);\n  }\n\n  /**\n   * @override\n   * @summary This method is not supported\n   * @throws {PSV.PSVError} always\n   */\n  toggle() {\n    throw new PSVError('Panel cannot be toggled');\n  }\n\n  /**\n   * @summary Shows the panel\n   * @param {string|Object} config\n   * @param {string} [config.id] - unique identifier to use with \"hide\" and to store the user desired width\n   * @param {string} config.content - HTML content of the panel\n   * @param {boolean} [config.noMargin=false] - remove the default margins\n   * @param {string} [config.width] - initial width\n   * @param {Function} [config.clickHandler] - called when the user clicks inside the panel or presses the Enter key while an element focused\n   * @fires PSV.open-panel\n   */\n  show(config) {\n    const wasVisible = this.isVisible(config.id);\n\n    if (typeof config === 'string') {\n      config = { content: config };\n    }\n\n    this.prop.contentId = config.id;\n    this.prop.visible = true;\n\n    if (this.prop.clickHandler) {\n      this.content.removeEventListener('click', this.prop.clickHandler);\n      this.content.removeEventListener('keydown', this.prop.keyHandler);\n      this.prop.clickHandler = null;\n      this.prop.keyHandler = null;\n    }\n\n    if (config.id && this.prop.width[config.id]) {\n      this.container.style.width = this.prop.width[config.id];\n    }\n    else if (config.width) {\n      this.container.style.width = config.width;\n    }\n    else {\n      this.container.style.width = null;\n    }\n\n    this.content.innerHTML = config.content;\n    this.content.scrollTop = 0;\n    this.container.classList.add('psv-panel--open');\n\n    toggleClass(this.content, 'psv-panel-content--no-margin', config.noMargin === true);\n\n    if (config.clickHandler) {\n      this.prop.clickHandler = config.clickHandler;\n      this.prop.keyHandler = (e) => {\n        if (e.key === KEY_CODES.Enter) {\n          config.clickHandler(e);\n        }\n      };\n      this.content.addEventListener('click', this.prop.clickHandler);\n      this.content.addEventListener('keydown', this.prop.keyHandler);\n\n      // focus the first element if possible, after animation ends\n      if (!wasVisible) {\n        setTimeout(() => {\n          this.content.querySelector('a,button,[tabindex]')?.focus();\n        }, 300);\n      }\n    }\n\n    this.psv.trigger(EVENTS.OPEN_PANEL, config.id);\n  }\n\n  /**\n   * @summary Hides the panel\n   * @param {string} [id]\n   * @fires PSV.close-panel\n   */\n  hide(id) {\n    if (this.isVisible(id)) {\n      const contentId = this.prop.contentId;\n\n      this.prop.visible = false;\n      this.prop.contentId = undefined;\n\n      this.content.innerHTML = null;\n      this.container.classList.remove('psv-panel--open');\n\n      if (this.prop.clickHandler) {\n        this.content.removeEventListener('click', this.prop.clickHandler);\n        this.prop.clickHandler = null;\n      }\n\n      this.psv.trigger(EVENTS.CLOSE_PANEL, contentId);\n    }\n  }\n\n  /**\n   * @summary Handles mouse down events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseDown(evt) {\n    evt.stopPropagation();\n    this.__startResize(evt);\n  }\n\n  /**\n   * @summary Handles touch events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __onTouchStart(evt) {\n    evt.stopPropagation();\n    this.__startResize(evt.changedTouches[0]);\n  }\n\n  /**\n   * @summary Handles mouse up events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseUp(evt) {\n    if (this.prop.mousedown) {\n      evt.stopPropagation();\n      this.prop.mousedown = false;\n      this.content.classList.remove('psv-panel-content--no-interaction');\n    }\n  }\n\n  /**\n   * @summary Handles mouse move events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseMove(evt) {\n    if (this.prop.mousedown) {\n      evt.stopPropagation();\n      this.__resize(evt);\n    }\n  }\n\n  /**\n   * @summary Handles touch move events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __onTouchMove(evt) {\n    if (this.prop.mousedown) {\n      this.__resize(evt.touches[0]);\n    }\n  }\n\n  /**\n   * @summary Initializes the panel resize\n   * @param {MouseEvent|Touch} evt\n   * @private\n   */\n  __startResize(evt) {\n    this.prop.mouseX = evt.clientX;\n    this.prop.mouseY = evt.clientY;\n    this.prop.mousedown = true;\n    this.content.classList.add('psv-panel-content--no-interaction');\n  }\n\n  /**\n   * @summary Resizes the panel\n   * @param {MouseEvent|Touch} evt\n   * @private\n   */\n  __resize(evt) {\n    const x = evt.clientX;\n    const y = evt.clientY;\n    const width = Math.max(PANEL_MIN_WIDTH, this.container.offsetWidth - (x - this.prop.mouseX)) + 'px';\n\n    if (this.prop.contentId) {\n      this.prop.width[this.prop.contentId] = width;\n    }\n\n    this.container.style.width = width;\n\n    this.prop.mouseX = x;\n    this.prop.mouseY = y;\n  }\n\n}\n","/**\n * @namespace PSV.services\n */\n\n/**\n * @summary Base services class\n * @memberof PSV.services\n * @abstract\n */\nexport class AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    /**\n     * @summary Reference to main controller\n     * @type {PSV.Viewer}\n     * @readonly\n     */\n    this.psv = psv;\n\n    /**\n     * @summary Configuration holder\n     * @type {PSV.Options}\n     * @readonly\n     */\n    this.config = psv.config;\n\n    /**\n     * @summary Properties holder\n     * @type {Object}\n     * @readonly\n     */\n    this.prop = psv.prop;\n  }\n\n  /**\n   * @summary Destroys the service\n   */\n  destroy() {\n    delete this.psv;\n    delete this.config;\n    delete this.prop;\n  }\n\n}\n","import { Euler, MathUtils, Vector2, Vector3 } from 'three';\nimport { MESH_USER_DATA, SPHERE_RADIUS } from '../data/constants';\nimport { PSVError } from '../PSVError';\nimport { applyEulerInverse, parseAngle, parseSpeed } from '../utils';\nimport { AbstractService } from './AbstractService';\n\nconst vector2 = new Vector2();\nconst vector3 = new Vector3();\nconst eulerZero = new Euler(0, 0, 0, 'ZXY');\n\n/**\n * @summary Collections of data converters for the current viewer\n * @extends PSV.services.AbstractService\n * @memberof PSV.services\n */\nexport class DataHelper extends AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n  }\n\n  /**\n   * @summary Converts vertical FOV to zoom level\n   * @param {number} fov\n   * @returns {number}\n   */\n  fovToZoomLevel(fov) {\n    const temp = Math.round((fov - this.config.minFov) / (this.config.maxFov - this.config.minFov) * 100);\n    return temp - 2 * (temp - 50);\n  }\n\n  /**\n   * @summary Converts zoom level to vertical FOV\n   * @param {number} level\n   * @returns {number}\n   */\n  zoomLevelToFov(level) {\n    return this.config.maxFov + (level / 100) * (this.config.minFov - this.config.maxFov);\n  }\n\n  /**\n   * @summary Convert vertical FOV to horizontal FOV\n   * @param {number} vFov\n   * @returns {number}\n   */\n  vFovToHFov(vFov) {\n    return MathUtils.radToDeg(2 * Math.atan(Math.tan(MathUtils.degToRad(vFov) / 2) * this.prop.aspect));\n  }\n\n  /**\n   * @summary Converts a speed into a duration from current position to a new position\n   * @param {string|number} value\n   * @param {number} angle\n   * @returns {number}\n   */\n  speedToDuration(value, angle) {\n    if (!value || typeof value !== 'number') {\n      // desired radial speed\n      const speed = value ? parseSpeed(value) : this.config.autorotateSpeed;\n      // compute duration\n      return angle / Math.abs(speed) * 1000;\n    }\n    else {\n      return Math.abs(value);\n    }\n  }\n\n  /**\n   * @summary Converts pixel texture coordinates to spherical radians coordinates\n   * @param {PSV.Point} point\n   * @returns {PSV.Position}\n   * @throws {PSV.PSVError} when the current adapter does not support texture coordinates\n   */\n  textureCoordsToSphericalCoords(point) {\n    const panoData = this.prop.panoData;\n    if (!panoData) {\n      throw new PSVError('Current adapter does not support texture coordinates.');\n    }\n\n    const relativeX = (point.x + panoData.croppedX) / panoData.fullWidth * Math.PI * 2;\n    const relativeY = (point.y + panoData.croppedY) / panoData.fullHeight * Math.PI;\n\n    const result = {\n      longitude: relativeX >= Math.PI ? relativeX - Math.PI : relativeX + Math.PI,\n      latitude : Math.PI / 2 - relativeY,\n    };\n\n    // Apply panoData pose and sphereCorrection\n    if (!eulerZero.equals(this.psv.renderer.mesh.rotation) || !eulerZero.equals(this.psv.renderer.meshContainer.rotation)) {\n      this.sphericalCoordsToVector3(result, vector3);\n      vector3.applyEuler(this.psv.renderer.mesh.rotation);\n      vector3.applyEuler(this.psv.renderer.meshContainer.rotation);\n      return this.vector3ToSphericalCoords(vector3);\n    }\n    else {\n      return result;\n    }\n  }\n\n  /**\n   * @summary Converts spherical radians coordinates to pixel texture coordinates\n   * @param {PSV.Position} position\n   * @returns {PSV.Point}\n   * @throws {PSV.PSVError} when the current adapter does not support texture coordinates\n   */\n  sphericalCoordsToTextureCoords(position) {\n    const panoData = this.prop.panoData;\n    if (!panoData) {\n      throw new PSVError('Current adapter does not support texture coordinates.');\n    }\n\n    // Apply panoData pose and sphereCorrection\n    if (!eulerZero.equals(this.psv.renderer.mesh.rotation) || !eulerZero.equals(this.psv.renderer.meshContainer.rotation)) {\n      this.sphericalCoordsToVector3(position, vector3);\n      applyEulerInverse(vector3, this.psv.renderer.meshContainer.rotation);\n      applyEulerInverse(vector3, this.psv.renderer.mesh.rotation);\n      position = this.vector3ToSphericalCoords(vector3);\n    }\n\n    const relativeLong = position.longitude / Math.PI / 2 * panoData.fullWidth;\n    const relativeLat = position.latitude / Math.PI * panoData.fullHeight;\n\n    return {\n      x: Math.round(position.longitude < Math.PI ? relativeLong + panoData.fullWidth / 2 : relativeLong - panoData.fullWidth / 2) - panoData.croppedX,\n      y: Math.round(panoData.fullHeight / 2 - relativeLat) - panoData.croppedY,\n    };\n  }\n\n  /**\n   * @summary Converts spherical radians coordinates to a THREE.Vector3\n   * @param {PSV.Position} position\n   * @param {external:THREE.Vector3} [vector]\n   * @returns {external:THREE.Vector3}\n   */\n  sphericalCoordsToVector3(position, vector) {\n    if (!vector) {\n      vector = new Vector3();\n    }\n    vector.x = SPHERE_RADIUS * -Math.cos(position.latitude) * Math.sin(position.longitude);\n    vector.y = SPHERE_RADIUS * Math.sin(position.latitude);\n    vector.z = SPHERE_RADIUS * Math.cos(position.latitude) * Math.cos(position.longitude);\n    return vector;\n  }\n\n  /**\n   * @summary Converts a THREE.Vector3 to spherical radians coordinates\n   * @param {external:THREE.Vector3} vector\n   * @returns {PSV.Position}\n   */\n  vector3ToSphericalCoords(vector) {\n    const phi = Math.acos(vector.y / Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z));\n    const theta = Math.atan2(vector.x, vector.z);\n\n    return {\n      longitude: theta < 0 ? -theta : Math.PI * 2 - theta,\n      latitude : Math.PI / 2 - phi,\n    };\n  }\n\n  /**\n   * @summary Converts position on the viewer to a THREE.Vector3\n   * @param {PSV.Point} viewerPoint\n   * @returns {external:THREE.Vector3}\n   */\n  viewerCoordsToVector3(viewerPoint) {\n    const sphereIntersect = this.getIntersections(viewerPoint).filter(i => i.object.userData[MESH_USER_DATA]);\n\n    if (sphereIntersect.length) {\n      return sphereIntersect[0].point;\n    }\n    else {\n      return null;\n    }\n  }\n\n  /**\n   * @summary Converts a THREE.Vector3 to position on the viewer\n   * @param {external:THREE.Vector3} vector\n   * @returns {PSV.Point}\n   */\n  vector3ToViewerCoords(vector) {\n    const vectorClone = vector.clone();\n    vectorClone.project(this.psv.renderer.camera);\n\n    return {\n      x: Math.round((vectorClone.x + 1) / 2 * this.prop.size.width),\n      y: Math.round((1 - vectorClone.y) / 2 * this.prop.size.height),\n    };\n  }\n\n  /**\n   * @summary Converts spherical radians coordinates to position on the viewer\n   * @param {PSV.Position} position\n   * @returns {PSV.Point}\n   */\n  sphericalCoordsToViewerCoords(position) {\n    return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(position, vector3));\n  }\n\n  /**\n   * @summary Returns intersections with objects in the scene\n   * @param {PSV.Point} viewerPoint\n   * @return {external:THREE.Intersection[]}\n   */\n  getIntersections(viewerPoint) {\n    vector2.x = 2 * viewerPoint.x / this.prop.size.width - 1;\n    vector2.y = -2 * viewerPoint.y / this.prop.size.height + 1;\n\n    this.psv.renderer.raycaster.setFromCamera(vector2, this.psv.renderer.camera);\n\n    return this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children, true)\n      .filter(i => !!i.object.userData);\n  }\n\n  /**\n   * @summary Converts x/y to latitude/longitude if present and ensure boundaries\n   * @param {PSV.ExtendedPosition} position\n   * @returns {PSV.Position}\n   */\n  cleanPosition(position) {\n    if (position.x !== undefined && position.y !== undefined) {\n      return this.textureCoordsToSphericalCoords(position);\n    }\n    else {\n      return {\n        longitude: parseAngle(position.longitude),\n        latitude : parseAngle(position.latitude, !this.prop.littlePlanet),\n      };\n    }\n  }\n\n  /**\n   * @summary Ensure a SphereCorrection object is valid\n   * @param {PSV.SphereCorrection} sphereCorrection\n   * @returns {PSV.SphereCorrection}\n   */\n  cleanSphereCorrection(sphereCorrection) {\n    return {\n      pan : parseAngle(sphereCorrection?.pan || 0),\n      tilt: parseAngle(sphereCorrection?.tilt || 0, true),\n      roll: parseAngle(sphereCorrection?.roll || 0, true, false),\n    };\n  }\n\n  /**\n   * @summary Parse the pose angles of the pano data\n   * @param {PSV.PanoData} panoData\n   * @returns {PSV.SphereCorrection}\n   */\n  cleanPanoramaPose(panoData) {\n    return {\n      pan : MathUtils.degToRad(panoData?.poseHeading || 0),\n      tilt: MathUtils.degToRad(panoData?.posePitch || 0),\n      roll: MathUtils.degToRad(panoData?.poseRoll || 0),\n    };\n  }\n\n}\n","import { MathUtils, SplineCurve, Vector2 } from 'three';\nimport {\n  ACTIONS,\n  CTRLZOOM_TIMEOUT,\n  DBLCLICK_DELAY,\n  EVENTS,\n  IDS,\n  INERTIA_WINDOW,\n  KEY_CODES,\n  LONGTOUCH_DELAY,\n  MESH_USER_DATA,\n  MOVE_THRESHOLD,\n  OBJECT_EVENTS,\n  TWOFINGERSOVERLAY_DELAY\n} from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport gestureIcon from '../icons/gesture.svg';\nimport mousewheelIcon from '../icons/mousewheel.svg';\nimport {\n  clone,\n  distance,\n  each,\n  getClosest,\n  getPosition,\n  hasParent,\n  isEmpty,\n  isFullscreenEnabled,\n  normalizeWheel,\n  throttle\n} from '../utils';\nimport { Animation } from '../utils/Animation';\nimport { PressHandler } from '../utils/PressHandler';\nimport { AbstractService } from './AbstractService';\n\nconst IDLE = 0;\nconst MOVING = 1;\nconst INERTIA = 2;\n\n/**\n * @summary Events handler\n * @extends PSV.services.AbstractService\n * @memberof PSV.services\n */\nexport class EventsHandler extends AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    /**\n     * @summary Internal properties\n     * @member {Object}\n     * @property {number} moveThreshold - computed threshold based on device pixel ratio\n     * @property {number} step\n     * @property {boolean} mousedown - before moving past the threshold\n     * @property {number} startMouseX - start x position of the click/touch\n     * @property {number} startMouseY - start y position of the click/touch\n     * @property {number} mouseX - current x position of the cursor\n     * @property {number} mouseY - current y position of the cursor\n     * @property {number[][]} mouseHistory - list of latest positions of the cursor, [time, x, y]\n     * @property {number} pinchDist - distance between fingers when zooming\n     * @property {PressHandler} keyHandler\n     * @property {boolean} ctrlKeyDown - when the Ctrl key is pressed\n     * @property {PSV.ClickData} dblclickData - temporary storage of click data between two clicks\n     * @property {number} dblclickTimeout - timeout id for double click\n     * @property {number} twofingersTimeout - timeout id for \"two fingers\" overlay\n     * @property {number} ctrlZoomTimeout - timeout id for \"ctrol zoom\" overlay\n     * @protected\n     */\n    this.state = {\n      moveThreshold    : MOVE_THRESHOLD * SYSTEM.pixelRatio,\n      keyboardEnabled  : false,\n      step             : IDLE,\n      mousedown        : false,\n      startMouseX      : 0,\n      startMouseY      : 0,\n      mouseX           : 0,\n      mouseY           : 0,\n      mouseHistory     : [],\n      pinchDist        : 0,\n      keyHandler       : new PressHandler(),\n      ctrlKeyDown      : false,\n      dblclickData     : null,\n      dblclickTimeout  : null,\n      longtouchTimeout : null,\n      twofingersTimeout: null,\n      ctrlZoomTimeout  : null,\n    };\n\n    /**\n     * @summary Throttled wrapper of {@link PSV.Viewer#autoSize}\n     * @type {Function}\n     * @private\n     */\n    this.__onResize = throttle(() => this.psv.autoSize(), 50);\n  }\n\n  /**\n   * @summary Initializes event handlers\n   * @protected\n   */\n  init() {\n    window.addEventListener('resize', this);\n    window.addEventListener('keydown', this, { passive: false });\n    window.addEventListener('keyup', this);\n    this.psv.container.addEventListener('mousedown', this);\n    window.addEventListener('mousemove', this, { passive: false });\n    window.addEventListener('mouseup', this);\n    this.psv.container.addEventListener('touchstart', this, { passive: false });\n    window.addEventListener('touchmove', this, { passive: false });\n    window.addEventListener('touchend', this, { passive: false });\n    this.psv.container.addEventListener(SYSTEM.mouseWheelEvent, this, { passive: false });\n\n    if (SYSTEM.fullscreenEvent) {\n      document.addEventListener(SYSTEM.fullscreenEvent, this);\n    }\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    window.removeEventListener('resize', this);\n    window.removeEventListener('keydown', this);\n    window.removeEventListener('keyup', this);\n    this.psv.container.removeEventListener('mousedown', this);\n    window.removeEventListener('mousemove', this);\n    window.removeEventListener('mouseup', this);\n    this.psv.container.removeEventListener('touchstart', this);\n    window.removeEventListener('touchmove', this);\n    window.removeEventListener('touchend', this);\n    this.psv.container.removeEventListener(SYSTEM.mouseWheelEvent, this);\n\n    if (SYSTEM.fullscreenEvent) {\n      document.removeEventListener(SYSTEM.fullscreenEvent, this);\n    }\n\n    clearTimeout(this.state.dblclickTimeout);\n    clearTimeout(this.state.longtouchTimeout);\n    clearTimeout(this.state.twofingersTimeout);\n    clearTimeout(this.state.ctrlZoomTimeout);\n\n    delete this.state;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} evt\n   * @private\n   */\n  handleEvent(evt) {\n    /* eslint-disable */\n    switch (evt.type) {\n      // @formatter:off\n      case 'resize':    this.__onResize(); break;\n      case 'keydown':   this.__onKeyDown(evt); break;\n      case 'keyup':     this.__onKeyUp(); break;\n      case 'mousemove': this.__onMouseMove(evt); break;\n      case 'mouseup':   this.__onMouseUp(evt); break;\n      case 'touchmove': this.__onTouchMove(evt); break;\n      case 'touchend':  this.__onTouchEnd(evt); break;\n      case SYSTEM.fullscreenEvent: this.__fullscreenToggled(); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n\n    if (!getClosest(evt.target, '.psv--capture-event')) {\n      /* eslint-disable */\n      switch (evt.type) {\n        // @formatter:off\n        case 'mousedown':  this.__onMouseDown(evt); break;\n        case 'touchstart': this.__onTouchStart(evt); break;\n        case SYSTEM.mouseWheelEvent: this.__onMouseWheel(evt); break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n    }\n  }\n\n  /**\n   * @summary Enables the keyboard controls\n   * @protected\n   */\n  enableKeyboard() {\n    this.state.keyboardEnabled = true;\n  }\n\n  /**\n   * @summary Disables the keyboard controls\n   * @protected\n   */\n  disableKeyboard() {\n    this.state.keyboardEnabled = false;\n  }\n\n  /**\n   * @summary Handles keyboard events\n   * @param {KeyboardEvent} e\n   * @private\n   */\n  __onKeyDown(e) {\n    if (this.config.mousewheelCtrlKey) {\n      this.state.ctrlKeyDown = e.key === KEY_CODES.Control;\n\n      if (this.state.ctrlKeyDown) {\n        clearTimeout(this.state.ctrlZoomTimeout);\n        this.psv.overlay.hide(IDS.CTRL_ZOOM);\n      }\n    }\n\n    const e2 = this.psv.trigger(EVENTS.KEY_PRESS, e.key);\n    if (e2.isDefaultPrevented()) {\n      return;\n    }\n\n    if (!this.state.keyboardEnabled) {\n      return;\n    }\n\n    const action = this.config.keyboard[e.key];\n    if (action === ACTIONS.TOGGLE_AUTOROTATE) {\n      this.psv.toggleAutorotate();\n      e.preventDefault();\n    }\n    else if (action && !this.state.keyHandler.time) {\n      if (action !== ACTIONS.ZOOM_IN && action !== ACTIONS.ZOOM_OUT) {\n        this.psv.__stopAll();\n      }\n\n      /* eslint-disable */\n      switch (action) {\n        // @formatter:off\n        case ACTIONS.ROTATE_LAT_UP: this.psv.dynamics.position.roll({latitude: false}); break;\n        case ACTIONS.ROTATE_LAT_DOWN: this.psv.dynamics.position.roll({latitude: true});  break;\n        case ACTIONS.ROTATE_LONG_RIGHT: this.psv.dynamics.position.roll({longitude: false}); break;\n        case ACTIONS.ROTATE_LONG_LEFT: this.psv.dynamics.position.roll({longitude: true}); break;\n        case ACTIONS.ZOOM_IN: this.psv.dynamics.zoom.roll(false); break;\n        case ACTIONS.ZOOM_OUT: this.psv.dynamics.zoom.roll(true); break;\n        // @formatter:on\n      }\n      /* eslint-enable */\n\n      this.state.keyHandler.down();\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * @summary Handles keyboard events\n   * @private\n   */\n  __onKeyUp() {\n    this.state.ctrlKeyDown = false;\n\n    if (!this.state.keyboardEnabled) {\n      return;\n    }\n\n    this.state.keyHandler.up(() => {\n      this.psv.dynamics.position.stop();\n      this.psv.dynamics.zoom.stop();\n      this.psv.resetIdleTimer();\n    });\n  }\n\n  /**\n   * @summary Handles mouse down events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseDown(evt) {\n    this.state.mousedown = true;\n    this.state.startMouseX = evt.clientX;\n    this.state.startMouseY = evt.clientY;\n  }\n\n  /**\n   * @summary Handles mouse up events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseUp(evt) {\n    if (this.state.mousedown || this.state.step === MOVING) {\n      this.__stopMove(evt.clientX, evt.clientY, evt.target, evt.button === 2);\n    }\n  }\n\n  /**\n   * @summary Handles mouse move events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  __onMouseMove(evt) {\n    if (this.config.mousemove && (this.state.mousedown || this.state.step === MOVING)) {\n      evt.preventDefault();\n      this.__move(evt.clientX, evt.clientY);\n    }\n\n    if (!isEmpty(this.prop.objectsObservers) && hasParent(evt.target, this.psv.container)) {\n      const viewerPos = getPosition(this.psv.container);\n\n      const viewerPoint = {\n        x: evt.clientX - viewerPos.left,\n        y: evt.clientY - viewerPos.top,\n      };\n\n      const intersections = this.psv.dataHelper.getIntersections(viewerPoint);\n\n      const emit = (observer, key, type) => {\n        observer.listener.handleEvent(new CustomEvent(type, {\n          detail: {\n            originalEvent: evt,\n            object       : observer.object,\n            data         : observer.object.userData[key],\n            viewerPoint  : viewerPoint,\n          },\n        }));\n      };\n\n      each(this.prop.objectsObservers, (observer, key) => {\n        const intersection = intersections.find(i => i.object.userData[key]);\n\n        if (intersection) {\n          if (observer.object && intersection.object !== observer.object) {\n            emit(observer, key, OBJECT_EVENTS.LEAVE_OBJECT);\n            delete observer.object;\n          }\n\n          if (!observer.object) {\n            observer.object = intersection.object;\n            emit(observer, key, OBJECT_EVENTS.ENTER_OBJECT);\n          }\n          else {\n            emit(observer, key, OBJECT_EVENTS.HOVER_OBJECT);\n          }\n        }\n        else if (observer.object) {\n          emit(observer, key, OBJECT_EVENTS.LEAVE_OBJECT);\n          delete observer.object;\n        }\n      });\n    }\n  }\n\n  /**\n   * @summary Handles touch events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __onTouchStart(evt) {\n    if (evt.touches.length === 1) {\n      this.state.mousedown = true;\n      this.state.startMouseX = evt.touches[0].clientX;\n      this.state.startMouseY = evt.touches[0].clientY;\n\n      if (!this.prop.longtouchTimeout) {\n        this.prop.longtouchTimeout = setTimeout(() => {\n          const touch = evt.touches[0];\n          this.__stopMove(touch.clientX, touch.clientY, touch.target, true);\n          this.prop.longtouchTimeout = null;\n        }, LONGTOUCH_DELAY);\n      }\n    }\n    else if (evt.touches.length === 2) {\n      this.state.mousedown = false;\n      this.__cancelLongTouch();\n\n      if (this.config.mousemove) {\n        this.__cancelTwoFingersOverlay();\n        this.__startMoveZoom(evt);\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @summary Handles touch events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __onTouchEnd(evt) {\n    this.__cancelLongTouch();\n\n    if (this.state.mousedown || this.state.step === MOVING) {\n      evt.preventDefault();\n      this.__cancelTwoFingersOverlay();\n\n      if (evt.touches.length === 1) {\n        this.__stopMove(this.state.mouseX, this.state.mouseY);\n      }\n      else if (evt.touches.length === 0) {\n        const touch = evt.changedTouches[0];\n        this.__stopMove(touch.clientX, touch.clientY, touch.target);\n      }\n    }\n  }\n\n  /**\n   * @summary Handles touch move events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __onTouchMove(evt) {\n    this.__cancelLongTouch();\n\n    if (!this.config.mousemove) {\n      return;\n    }\n\n    if (evt.touches.length === 1) {\n      if (this.config.touchmoveTwoFingers) {\n        if (this.state.mousedown && !this.prop.twofingersTimeout) {\n          this.prop.twofingersTimeout = setTimeout(() => {\n            this.psv.overlay.show({\n              id   : IDS.TWO_FINGERS,\n              image: gestureIcon,\n              text : this.config.lang.twoFingers,\n            });\n          }, TWOFINGERSOVERLAY_DELAY);\n        }\n      }\n      else if (this.state.mousedown || this.state.step === MOVING) {\n        evt.preventDefault();\n        const touch = evt.touches[0];\n        this.__move(touch.clientX, touch.clientY);\n      }\n    }\n    else {\n      this.__moveZoom(evt);\n      this.__cancelTwoFingersOverlay();\n    }\n  }\n\n  /**\n   * @summary Cancel the long touch timer if any\n   * @private\n   */\n  __cancelLongTouch() {\n    if (this.prop.longtouchTimeout) {\n      clearTimeout(this.prop.longtouchTimeout);\n      this.prop.longtouchTimeout = null;\n    }\n  }\n\n  /**\n   * @summary Cancel the two fingers overlay timer if any\n   * @private\n   */\n  __cancelTwoFingersOverlay() {\n    if (this.config.touchmoveTwoFingers) {\n      if (this.prop.twofingersTimeout) {\n        clearTimeout(this.prop.twofingersTimeout);\n        this.prop.twofingersTimeout = null;\n      }\n      this.psv.overlay.hide(IDS.TWO_FINGERS);\n    }\n  }\n\n  /**\n   * @summary Handles mouse wheel events\n   * @param {WheelEvent} evt\n   * @private\n   */\n  __onMouseWheel(evt) {\n    if (!this.config.mousewheel) {\n      return;\n    }\n\n    if (this.config.mousewheelCtrlKey && !this.state.ctrlKeyDown) {\n      this.psv.overlay.show({\n        id   : IDS.CTRL_ZOOM,\n        image: mousewheelIcon,\n        text : this.config.lang.ctrlZoom,\n      });\n\n      clearTimeout(this.state.ctrlZoomTimeout);\n      this.state.ctrlZoomTimeout = setTimeout(() => this.psv.overlay.hide(IDS.CTRL_ZOOM), CTRLZOOM_TIMEOUT);\n\n      return;\n    }\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const delta = normalizeWheel(evt).spinY * 5 * this.config.zoomSpeed;\n    if (delta !== 0) {\n      this.psv.dynamics.zoom.step(-delta, 5);\n    }\n  }\n\n  /**\n   * @summary Handles fullscreen events\n   * @param {boolean} [force] force state\n   * @fires PSV.fullscreen-updated\n   * @package\n   */\n  __fullscreenToggled(force) {\n    this.prop.fullscreen = force !== undefined ? force : isFullscreenEnabled(this.psv.container);\n\n    if (this.config.keyboard) {\n      if (this.prop.fullscreen) {\n        this.psv.startKeyboardControl();\n      }\n      else {\n        this.psv.stopKeyboardControl();\n      }\n    }\n\n    this.psv.trigger(EVENTS.FULLSCREEN_UPDATED, this.prop.fullscreen);\n  }\n\n  /**\n   * @summary Resets all state variables\n   * @private\n   */\n  __resetMove() {\n    this.state.step = IDLE;\n    this.state.mousedown = false;\n    this.state.mouseX = 0;\n    this.state.mouseY = 0;\n    this.state.startMouseX = 0;\n    this.state.startMouseY = 0;\n    this.state.mouseHistory.length = 0;\n  }\n\n  /**\n   * @summary Initializes the combines move and zoom\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __startMoveZoom(evt) {\n    this.psv.__stopAll();\n    this.__resetMove();\n\n    const p1 = { x: evt.touches[0].clientX, y: evt.touches[0].clientY };\n    const p2 = { x: evt.touches[1].clientX, y: evt.touches[1].clientY };\n\n    this.state.step = MOVING;\n    this.state.pinchDist = distance(p1, p2);\n    this.state.mouseX = (p1.x + p2.x) / 2;\n    this.state.mouseY = (p1.y + p2.y) / 2;\n    this.__logMouseMove(this.state.mouseX, this.state.mouseY);\n  }\n\n  /**\n   * @summary Stops the movement\n   * @description If the move threshold was not reached a click event is triggered, otherwise an animation is launched to simulate inertia\n   * @param {int} clientX\n   * @param {int} clientY\n   * @param {EventTarget} [target]\n   * @param {boolean} [rightclick=false]\n   * @private\n   */\n  __stopMove(clientX, clientY, target = null, rightclick = false) {\n    if (this.state.step === MOVING) {\n      if (this.config.moveInertia) {\n        this.__logMouseMove(clientX, clientY);\n        this.__stopMoveInertia(clientX, clientY);\n      }\n      else {\n        this.__resetMove();\n        this.psv.resetIdleTimer();\n      }\n    }\n    else if (this.state.mousedown) {\n      this.psv.stopAnimation();\n      this.__click(clientX, clientY, target, rightclick);\n      this.__resetMove();\n      this.psv.resetIdleTimer();\n    }\n  }\n\n  /**\n   * @summary Performs an animation to simulate inertia when the movement stops\n   * @param {int} clientX\n   * @param {int} clientY\n   * @private\n   */\n  __stopMoveInertia(clientX, clientY) {\n    // get direction at end of movement\n    const curve = new SplineCurve(this.state.mouseHistory.map(([, x, y]) => new Vector2(x, y)));\n    const direction = curve.getTangent(1);\n\n    // average speed\n    const speed = this.state.mouseHistory.slice(1).reduce(({ total, prev }, curr) => {\n      return {\n        total: total + distance({ x: prev[1], y: prev[2] }, { x: curr[1], y: curr[2] }) / (curr[0] - prev[0]),\n        prev : curr,\n      };\n    }, {\n      total: 0,\n      prev : this.state.mouseHistory[0],\n    }).total / this.state.mouseHistory.length;\n\n    if (!speed) {\n      this.__resetMove();\n      this.psv.resetIdleTimer();\n      return;\n    }\n\n    this.state.step = INERTIA;\n\n    let currentClientX = clientX;\n    let currentClientY = clientY;\n\n    this.prop.animationPromise = new Animation({\n      properties: {\n        speed: { start: speed, end: 0 },\n      },\n      duration  : 1000,\n      easing    : 'outQuad',\n      onTick    : (properties) => {\n        // 3 is a magic number\n        currentClientX += properties.speed * direction.x * 3 * SYSTEM.pixelRatio;\n        currentClientY += properties.speed * direction.y * 3 * SYSTEM.pixelRatio;\n        this.__applyMove(currentClientX, currentClientY);\n      },\n    });\n\n    this.prop.animationPromise\n      .then((done) => {\n        this.prop.animationPromise = null;\n        if (done) {\n          this.__resetMove();\n          this.psv.resetIdleTimer();\n        }\n      });\n  }\n\n  /**\n   * @summary Triggers an event with all coordinates when a simple click is performed\n   * @param {int} clientX\n   * @param {int} clientY\n   * @param {EventTarget} target\n   * @param {boolean} [rightclick=false]\n   * @fires PSV.click\n   * @fires PSV.dblclick\n   * @private\n   */\n  __click(clientX, clientY, target, rightclick = false) {\n    const boundingRect = this.psv.container.getBoundingClientRect();\n\n    /**\n     * @type {PSV.ClickData}\n     */\n    const data = {\n      rightclick: rightclick,\n      target    : target,\n      clientX   : clientX,\n      clientY   : clientY,\n      viewerX   : clientX - boundingRect.left,\n      viewerY   : clientY - boundingRect.top,\n    };\n\n    const intersections = this.psv.dataHelper.getIntersections({\n      x: data.viewerX,\n      y: data.viewerY,\n    });\n\n    const sphereIntersection = intersections.find(i => i.object.userData[MESH_USER_DATA]);\n\n    if (sphereIntersection) {\n      const sphericalCoords = this.psv.dataHelper.vector3ToSphericalCoords(sphereIntersection.point);\n      data.longitude = sphericalCoords.longitude;\n      data.latitude = sphericalCoords.latitude;\n\n      data.objects = intersections.map(i => i.object).filter(o => !o.userData[MESH_USER_DATA]);\n\n      try {\n        const textureCoords = this.psv.dataHelper.sphericalCoordsToTextureCoords(data);\n        data.textureX = textureCoords.x;\n        data.textureY = textureCoords.y;\n      }\n      catch (e) {\n        data.textureX = NaN;\n        data.textureY = NaN;\n      }\n\n      if (!this.state.dblclickTimeout) {\n        this.psv.trigger(EVENTS.CLICK, data);\n\n        this.state.dblclickData = clone(data);\n        this.state.dblclickTimeout = setTimeout(() => {\n          this.state.dblclickTimeout = null;\n          this.state.dblclickData = null;\n        }, DBLCLICK_DELAY);\n      }\n      else {\n        if (Math.abs(this.state.dblclickData.clientX - data.clientX) < this.state.moveThreshold\n          && Math.abs(this.state.dblclickData.clientY - data.clientY) < this.state.moveThreshold) {\n          this.psv.trigger(EVENTS.DOUBLE_CLICK, this.state.dblclickData);\n        }\n\n        clearTimeout(this.state.dblclickTimeout);\n        this.state.dblclickTimeout = null;\n        this.state.dblclickData = null;\n      }\n    }\n  }\n\n  /**\n   * @summary Starts moving when crossing moveThreshold and performs movement\n   * @param {int} clientX\n   * @param {int} clientY\n   * @private\n   */\n  __move(clientX, clientY) {\n    if (this.state.mousedown\n      && (Math.abs(clientX - this.state.startMouseX) >= this.state.moveThreshold\n        || Math.abs(clientY - this.state.startMouseY) >= this.state.moveThreshold)) {\n      this.psv.__stopAll();\n      this.__resetMove();\n      this.state.step = MOVING;\n      this.state.mouseX = clientX;\n      this.state.mouseY = clientY;\n      this.__logMouseMove(clientX, clientY);\n    }\n    else if (this.state.step === MOVING) {\n      this.__applyMove(clientX, clientY);\n      this.__logMouseMove(clientX, clientY);\n    }\n  }\n\n  /**\n   * @summary Raw method for movement, called from mouse event and move inertia\n   * @param {int} clientX\n   * @param {int} clientY\n   * @private\n   */\n  __applyMove(clientX, clientY) {\n    const rotation = {\n      longitude: (clientX - this.state.mouseX) / this.prop.size.width * this.config.moveSpeed\n        * MathUtils.degToRad(this.prop.littlePlanet ? 90 : this.prop.hFov),\n      latitude : (clientY - this.state.mouseY) / this.prop.size.height * this.config.moveSpeed\n        * MathUtils.degToRad(this.prop.littlePlanet ? 90 : this.prop.vFov),\n    };\n\n    const currentPosition = this.psv.getPosition();\n    this.psv.rotate({\n      longitude: currentPosition.longitude - rotation.longitude,\n      latitude : currentPosition.latitude + rotation.latitude,\n    });\n\n    this.state.mouseX = clientX;\n    this.state.mouseY = clientY;\n  }\n\n  /**\n   * @summary Perfoms combined move and zoom\n   * @param {TouchEvent} evt\n   * @private\n   */\n  __moveZoom(evt) {\n    if (this.state.step === MOVING) {\n      evt.preventDefault();\n\n      const p1 = { x: evt.touches[0].clientX, y: evt.touches[0].clientY };\n      const p2 = { x: evt.touches[1].clientX, y: evt.touches[1].clientY };\n\n      const p = distance(p1, p2);\n      const delta = (p - this.state.pinchDist) / SYSTEM.pixelRatio * this.config.zoomSpeed;\n\n      this.psv.zoom(this.psv.getZoomLevel() + delta);\n\n      this.__move((p1.x + p2.x) / 2, (p1.y + p2.y) / 2);\n\n      this.state.pinchDist = p;\n    }\n  }\n\n  /**\n   * @summary Stores each mouse position during a mouse move\n   * @description Positions older than \"INERTIA_WINDOW\" are removed<br>\n   *     Positions before a pause of \"INERTIA_WINDOW\" / 10 are removed\n   * @param {int} clientX\n   * @param {int} clientY\n   * @private\n   */\n  __logMouseMove(clientX, clientY) {\n    const now = Date.now();\n\n    const last = this.state.mouseHistory.length ? this.state.mouseHistory[this.state.mouseHistory.length - 1] : [0, -1, -1];\n\n    // avoid duplicates\n    if (last[1] === clientX && last[2] === clientY) {\n      last[0] = now;\n    }\n    else if (now === last[0]) {\n      last[1] = clientX;\n      last[2] = clientY;\n    }\n    else {\n      this.state.mouseHistory.push([now, clientX, clientY]);\n    }\n\n    let previous = null;\n\n    for (let i = 0; i < this.state.mouseHistory.length;) {\n      if (this.state.mouseHistory[i][0] < now - INERTIA_WINDOW) {\n        this.state.mouseHistory.splice(i, 1);\n      }\n      else if (previous && this.state.mouseHistory[i][0] - previous > INERTIA_WINDOW / 10) {\n        this.state.mouseHistory.splice(0, i);\n        i = 0;\n        previous = this.state.mouseHistory[i][0];\n      }\n      else {\n        previous = this.state.mouseHistory[i][0];\n        i++;\n      }\n    }\n  }\n\n}\n","import { Group, PerspectiveCamera, Raycaster, Scene, Vector3, WebGLRenderer } from 'three';\nimport { EVENTS, MESH_USER_DATA, SPHERE_RADIUS } from '../data/constants';\nimport { SYSTEM } from '../data/system';\nimport { Animation, each, isExtendedPosition } from '../utils';\nimport { AbstractService } from './AbstractService';\n\n/**\n * @summary Viewer and renderer\n * @extends PSV.services.AbstractService\n * @memberof PSV.services\n */\nexport class Renderer extends AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    /**\n     * @member {external:THREE.WebGLRenderer}\n     * @readonly\n     * @protected\n     */\n    this.renderer = new WebGLRenderer({ alpha: true, antialias: true });\n    this.renderer.setPixelRatio(SYSTEM.pixelRatio);\n    this.renderer.domElement.className = 'psv-canvas';\n\n    /**\n     * @member {external:THREE.Scene}\n     * @readonly\n     * @protected\n     */\n    this.scene = new Scene();\n\n    /**\n     * @member {external:THREE.PerspectiveCamera}\n     * @readonly\n     * @protected\n     */\n    this.camera = new PerspectiveCamera(50, 16 / 9, 0.1, 2 * SPHERE_RADIUS);\n\n    /**\n     * @member {external:THREE.Mesh}\n     * @readonly\n     * @protected\n     */\n    this.mesh = this.psv.adapter.createMesh();\n    this.mesh.userData = { [MESH_USER_DATA]: true };\n\n    /**\n     * @member {external:THREE.Group}\n     * @readonly\n     * @private\n     */\n    this.meshContainer = new Group();\n    this.meshContainer.add(this.mesh);\n    this.scene.add(this.meshContainer);\n\n    /**\n     * @member {external:THREE.Raycaster}\n     * @readonly\n     * @protected\n     */\n    this.raycaster = new Raycaster();\n\n    /**\n     * @member {number}\n     * @private\n     */\n    this.timestamp = null;\n\n    /**\n     * @member {boolean}\n     * @private\n     */\n    this.ready = false;\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     * @package\n     */\n    this.canvasContainer = document.createElement('div');\n    this.canvasContainer.className = 'psv-canvas-container';\n    this.canvasContainer.style.background = this.psv.config.canvasBackground;\n    this.canvasContainer.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\n    this.canvasContainer.appendChild(this.renderer.domElement);\n    this.psv.container.appendChild(this.canvasContainer);\n\n    psv.on(EVENTS.SIZE_UPDATED, this);\n    psv.on(EVENTS.ZOOM_UPDATED, this);\n    psv.on(EVENTS.POSITION_UPDATED, this);\n    psv.on(EVENTS.CONFIG_CHANGED, this);\n\n    this.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    // cancel render loop\n    this.renderer.setAnimationLoop(null);\n\n    // destroy ThreeJS view\n    this.__cleanTHREEScene(this.scene);\n\n    // remove container\n    this.psv.container.removeChild(this.canvasContainer);\n\n    delete this.canvasContainer;\n    delete this.renderer;\n    delete this.scene;\n    delete this.camera;\n    delete this.mesh;\n    delete this.meshContainer;\n    delete this.raycaster;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} evt\n   * @private\n   */\n  handleEvent(evt) {\n    /* eslint-disable */\n    switch (evt.type) {\n      // @formatter:off\n      case EVENTS.SIZE_UPDATED:     this.__onSizeUpdated(); break;\n      case EVENTS.ZOOM_UPDATED:     this.__onZoomUpdated(); break;\n      case EVENTS.POSITION_UPDATED: this.__onPositionUpdated(); break;\n      case EVENTS.CONFIG_CHANGED:\n        if (evt.args[0].includes('fisheye')) {\n          this.__onPositionUpdated();\n        }\n        if (evt.args[0].includes('mousemove')) {\n          this.canvasContainer.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\n        }\n        break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @summary Hides the viewer\n   */\n  hide() {\n    this.canvasContainer.style.opacity = 0;\n  }\n\n  /**\n   * @summary Shows the viewer\n   */\n  show() {\n    this.canvasContainer.style.opacity = 1;\n  }\n\n  /**\n   * @summary Updates the size of the renderer and the aspect of the camera\n   * @private\n   */\n  __onSizeUpdated() {\n    this.renderer.setSize(this.prop.size.width, this.prop.size.height);\n    this.camera.aspect = this.prop.aspect;\n    this.camera.updateProjectionMatrix();\n    this.prop.needsUpdate = true;\n  }\n\n  /**\n   * @summary Updates the fov of the camera\n   * @private\n   */\n  __onZoomUpdated() {\n    this.camera.fov = this.prop.vFov;\n    this.camera.updateProjectionMatrix();\n    this.prop.needsUpdate = true;\n  }\n\n  /**\n   * @summary Updates the position of the camera\n   * @private\n   */\n  __onPositionUpdated() {\n    this.camera.position.set(0, 0, 0);\n    this.camera.lookAt(this.prop.direction);\n    if (this.config.fisheye) {\n      this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye / 2).negate();\n    }\n    this.prop.needsUpdate = true;\n  }\n\n  /**\n   * @summary Main event loop, calls {@link render} if `prop.needsUpdate` is true\n   * @param {number} timestamp\n   * @fires PSV.before-render\n   * @private\n   */\n  __renderLoop(timestamp) {\n    const elapsed = this.timestamp !== null ? timestamp - this.timestamp : 0;\n    this.timestamp = timestamp;\n\n    this.psv.trigger(EVENTS.BEFORE_RENDER, timestamp, elapsed);\n    each(this.psv.dynamics, d => d.update(elapsed));\n\n    if (this.prop.idleTime > 0 && timestamp - this.prop.idleTime > this.config.autorotateDelay) {\n      this.psv.startAutorotate();\n    }\n\n    if (this.prop.needsUpdate) {\n      this.render();\n      this.prop.needsUpdate = false;\n    }\n  }\n\n  /**\n   * @summary Performs a render\n   * @description Do not call this method directly, instead call\n   * {@link PSV.Viewer#needsUpdate} on {@link PSV.event:before-render}.\n   * @fires PSV.render\n   */\n  render() {\n    this.renderer.render(this.scene, this.camera);\n    this.psv.trigger(EVENTS.RENDER);\n  }\n\n  /**\n   * @summary Applies the texture to the scene, creates the scene if needed\n   * @param {PSV.TextureData} textureData\n   * @fires PSV.panorama-loaded\n   * @package\n   */\n  setTexture(textureData) {\n    this.prop.panoData = textureData.panoData;\n\n    this.psv.adapter.setTexture(this.mesh, textureData);\n\n    if (!this.ready) {\n      this.renderer.setAnimationLoop(t => this.__renderLoop(t));\n      this.ready = true;\n    }\n\n    this.psv.needsUpdate();\n\n    this.psv.trigger(EVENTS.PANORAMA_LOADED, textureData);\n  }\n\n  /**\n   * @summary Applies the overlay to the mesh\n   * @param {PSV.TextureData} textureData\n   * @param {number} opacity\n   * @package\n   */\n  setOverlay(textureData, opacity) {\n    this.psv.adapter.setOverlay(this.mesh, textureData, opacity);\n    this.psv.needsUpdate();\n  }\n\n  /**\n   * @summary Apply a panorama data pose to a Mesh\n   * @param {PSV.PanoData} [panoData]\n   * @param {external:THREE.Mesh} [mesh=this.mesh]\n   * @package\n   */\n  setPanoramaPose(panoData, mesh = this.mesh) {\n    // By Google documentation the angles are applied on the camera in order : heading, pitch, roll\n    // here we apply the reverse transformation on the sphere\n    const cleanCorrection = this.psv.dataHelper.cleanPanoramaPose(panoData);\n\n    mesh.rotation.set(\n      -cleanCorrection.tilt,\n      -cleanCorrection.pan,\n      -cleanCorrection.roll,\n      'ZXY'\n    );\n  }\n\n  /**\n   * @summary Apply a SphereCorrection to a Mesh\n   * @param {PSV.SphereCorrection} [sphereCorrection]\n   * @param {external:THREE.Mesh} [mesh=this.meshContainer]\n   * @package\n   */\n  setSphereCorrection(sphereCorrection, mesh = this.meshContainer) {\n    const cleanCorrection = this.psv.dataHelper.cleanSphereCorrection(sphereCorrection);\n\n    mesh.rotation.set(\n      cleanCorrection.tilt,\n      cleanCorrection.pan,\n      cleanCorrection.roll,\n      'ZXY'\n    );\n  }\n\n  /**\n   * @summary Performs transition between the current and a new texture\n   * @param {PSV.TextureData} textureData\n   * @param {PSV.PanoramaOptions} options\n   * @returns {PSV.utils.Animation}\n   * @package\n   */\n  transition(textureData, options) {\n    const positionProvided = isExtendedPosition(options);\n    const zoomProvided = 'zoom' in options;\n\n    // create temp group and new mesh, half size to be in \"front\" of the first one\n    const group = new Group();\n    const mesh = this.psv.adapter.createMesh(0.5);\n    this.psv.adapter.setTexture(mesh, textureData, true);\n    this.psv.adapter.setTextureOpacity(mesh, 0);\n    this.setPanoramaPose(textureData.panoData, mesh);\n    this.setSphereCorrection(options.sphereCorrection, group);\n\n    // rotate the new sphere to make the target position face the camera\n    if (positionProvided) {\n      const cleanPosition = this.psv.dataHelper.cleanPosition(options);\n      const currentPosition = this.psv.getPosition();\n\n      // Longitude rotation along the vertical axis\n      const verticalAxis = new Vector3(0, 1, 0);\n      group.rotateOnWorldAxis(verticalAxis, cleanPosition.longitude - currentPosition.longitude);\n\n      // Latitude rotation along the camera horizontal axis\n      const horizontalAxis = new Vector3(0, 1, 0).cross(this.camera.getWorldDirection(new Vector3())).normalize();\n      group.rotateOnWorldAxis(horizontalAxis, cleanPosition.latitude - currentPosition.latitude);\n    }\n\n    group.add(mesh);\n    this.scene.add(group);\n\n    const animation = new Animation({\n      properties: {\n        opacity: { start: 0.0, end: 1.0 },\n        zoom   : zoomProvided ? { start: this.psv.getZoomLevel(), end: options.zoom } : undefined,\n      },\n      duration  : options.transition,\n      easing    : 'outCubic',\n      onTick    : (properties) => {\n        this.psv.adapter.setTextureOpacity(mesh, properties.opacity);\n        this.psv.adapter.setTextureOpacity(this.mesh, 1 - properties.opacity);\n\n        if (zoomProvided) {\n          this.psv.zoom(properties.zoom);\n        }\n\n        this.psv.needsUpdate();\n      },\n    });\n\n    animation\n      .then((completed) => {\n        if (completed) {\n          // remove temp sphere and transfer the texture to the main mesh\n          this.setTexture(textureData);\n          this.psv.adapter.setTextureOpacity(this.mesh, 1);\n          this.setPanoramaPose(textureData.panoData);\n          this.setSphereCorrection(options.sphereCorrection);\n\n          // actually rotate the camera\n          if (positionProvided) {\n            this.psv.rotate(options);\n          }\n        }\n        else {\n          this.psv.adapter.disposeTexture(textureData);\n        }\n\n        this.scene.remove(group);\n        mesh.geometry.dispose();\n        mesh.geometry = null;\n      });\n\n    return animation;\n  }\n\n  /**\n   * @summary Calls `dispose` on all objects and textures\n   * @param {external:THREE.Object3D} object\n   * @private\n   */\n  __cleanTHREEScene(object) {\n    object.traverse((item) => {\n      if (item.geometry) {\n        item.geometry.dispose();\n      }\n\n      if (item.material) {\n        if (Array.isArray(item.material)) {\n          item.material.forEach((material) => {\n            if (material.map) {\n              material.map.dispose();\n            }\n\n            material.dispose();\n          });\n        }\n        else {\n          if (item.material.map) {\n            item.material.map.dispose();\n          }\n\n          item.material.dispose();\n        }\n      }\n\n      if (item.dispose && !(item instanceof Scene)) {\n        item.dispose();\n      }\n\n      if (item !== object) {\n        this.__cleanTHREEScene(item);\n      }\n    });\n  }\n\n}\n","import { FileLoader } from 'three';\nimport { AbstractService } from './AbstractService';\n\n/**\n * @summary Texture loader\n * @extends PSV.services.AbstractService\n * @memberof PSV.services\n */\nexport class TextureLoader extends AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    /**\n     * @summary THREE file loader\n     * @type {external:THREE:FileLoader}\n     * @private\n     */\n    this.loader = new FileLoader();\n    this.loader.setResponseType('blob');\n    if (this.config.withCredentials) {\n      this.loader.setWithCredentials(true);\n    }\n    if (this.config.requestHeaders && typeof this.config.requestHeaders === 'object') {\n      this.loader.setRequestHeader(this.config.requestHeaders);\n    }\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.abortLoading();\n    super.destroy();\n  }\n\n  /**\n   * @summary Cancels current HTTP requests\n   * @package\n   */\n  abortLoading() {\n    // noop implementation waiting for https://github.com/mrdoob/three.js/pull/23070\n  }\n\n  /**\n   * @summary Loads a Blob with FileLoader\n   * @param {string} url\n   * @param {function(number)} [onProgress]\n   * @returns {Promise<Blob>}\n   */\n  loadFile(url, onProgress) {\n    if (this.config.requestHeaders && typeof this.config.requestHeaders === 'function') {\n      this.loader.setRequestHeader(this.config.requestHeaders(url));\n    }\n\n    return new Promise((resolve, reject) => {\n      let progress = 0;\n      onProgress?.(progress);\n\n      this.loader.load(\n        url,\n        (result) => {\n          progress = 100;\n          onProgress?.(progress);\n          resolve(result);\n        },\n        (e) => {\n          if (e.lengthComputable) {\n            const newProgress = e.loaded / e.total * 100;\n            if (newProgress > progress) {\n              progress = newProgress;\n              onProgress?.(progress);\n            }\n          }\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  }\n\n  /**\n   * @summary Loads an Image using FileLoader to have progress events\n   * @param {string} url\n   * @param {function(number)} [onProgress]\n   * @returns {Promise<HTMLImageElement>}\n   */\n  loadImage(url, onProgress) {\n    return this.loadFile(url, onProgress)\n      .then(result => new Promise((resolve, reject) => {\n        const img = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n        img.onload = () => {\n          URL.revokeObjectURL(img.src);\n          resolve(img);\n        };\n        img.onerror = reject;\n        img.src = URL.createObjectURL(result);\n      }));\n  }\n\n  /**\n   * @summary Preload a panorama file without displaying it\n   * @param {*} panorama\n   * @returns {Promise}\n   */\n  preloadPanorama(panorama) {\n    if (this.psv.adapter.supportsPreload(panorama)) {\n      return this.psv.adapter.loadTexture(panorama);\n    }\n    else {\n      return Promise.resolve();\n    }\n  }\n\n}\n","import { EVENTS } from '../data/constants';\nimport { PSVError } from '../PSVError';\nimport { addClasses, cleanPosition, positionIsOrdered } from '../utils';\nimport { AbstractComponent } from './AbstractComponent';\n\nconst STATE = { NONE: 0, SHOWING: 1, HIDING: 2, READY: 3 };\n\n/**\n * @typedef {Object} PSV.components.Tooltip.Position\n * @summary Object defining the tooltip position\n * @property {number} top - Position of the tip of the arrow of the tooltip, in pixels\n * @property {number} left - Position of the tip of the arrow of the tooltip, in pixels\n * @property {string|string[]} [position='top center'] - Tooltip position toward it's arrow tip.\n *           Accepted values are combinations of `top`, `center`, `bottom` and `left`, `center`, `right`\n * @property {Object} [box] - Used when displaying a tooltip on a marker\n * @property {number} [box.width=0]\n * @property {number} [box.height=0]\n */\n\n/**\n * @typedef {PSV.components.Tooltip.Position} PSV.components.Tooltip.Config\n * @summary Object defining the tooltip configuration\n * @property {string} content - HTML content of the tooltip\n * @property {string} [className] - Additional CSS class added to the tooltip\n * @property {*} [data] - Userdata associated to the tooltip\n */\n\n/**\n * @summary Tooltip component\n * @description Never instanciate tooltips directly use {@link PSV.services.TooltipRenderer} instead\n * @extends PSV.components.AbstractComponent\n * @memberof PSV.components\n */\nexport class Tooltip extends AbstractComponent {\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {{arrow: number, border: number}} size\n   */\n  constructor(psv, size) {\n    super(psv, 'psv-tooltip');\n\n    /**\n     * @override\n     * @property {number} arrow\n     * @property {number} border\n     * @property {number} width\n     * @property {number} height\n     * @property {string} pos\n     * @property {string} state\n     * @property {*} data\n     */\n    this.prop = {\n      ...this.prop,\n      ...size,\n      state : STATE.NONE,\n      width : 0,\n      height: 0,\n      pos   : '',\n      config: null,\n      data  : null,\n    };\n\n    /**\n     * Tooltip content\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = document.createElement('div');\n    this.content.className = 'psv-tooltip-content';\n    this.container.appendChild(this.content);\n\n    /**\n     * Tooltip arrow\n     * @member {HTMLElement}\n     * @readonly\n     * @package\n     */\n    this.arrow = document.createElement('div');\n    this.arrow.className = 'psv-tooltip-arrow';\n    this.container.appendChild(this.arrow);\n\n    this.container.addEventListener('transitionend', this);\n\n    this.container.style.top = '-1000px';\n    this.container.style.left = '-1000px';\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.arrow;\n    delete this.content;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'transitionend': this.__onTransitionEnd(e); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @summary This method is not supported\n   * @throws {PSV.PSVError} always\n   */\n  toggle() {\n    throw new PSVError('Tooltip cannot be toggled');\n  }\n\n  /**\n   * @summary Displays the tooltip on the viewer\n   * Do not call this method directly, use {@link PSV.services.TooltipRenderer} instead.\n   * @param {PSV.components.Tooltip.Config} config\n   *\n   * @fires PSV.show-tooltip\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   *\n   * @package\n   */\n  show(config) {\n    if (this.prop.state !== STATE.NONE) {\n      throw new PSVError('Initialized tooltip cannot be re-initialized');\n    }\n\n    if (config.className) {\n      addClasses(this.container, config.className);\n    }\n\n    this.content.innerHTML = config.content;\n\n    const rect = this.container.getBoundingClientRect();\n    this.prop.width = rect.right - rect.left;\n    this.prop.height = rect.bottom - rect.top;\n\n    this.prop.state = STATE.READY;\n\n    this.move(config);\n\n    this.prop.data = config.data;\n    this.prop.state = STATE.SHOWING;\n\n    this.psv.trigger(EVENTS.SHOW_TOOLTIP, this.prop.data, this);\n\n    this.__waitImages();\n  }\n\n  /**\n   * @summary Moves the tooltip to a new position\n   * @param {PSV.components.Tooltip.Position} config\n   *\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  move(config) {\n    if (this.prop.state !== STATE.SHOWING && this.prop.state !== STATE.READY) {\n      throw new PSVError('Uninitialized tooltip cannot be moved');\n    }\n\n    if (!config.box) {\n      config.box = {\n        width : 0,\n        height: 0,\n      };\n    }\n\n    this.config = config;\n\n    const t = this.container;\n    const a = this.arrow;\n\n    // compute size\n    const style = {\n      posClass : cleanPosition(config.position, { allowCenter: false, cssOrder: false }) || ['top', 'center'],\n      width    : this.prop.width,\n      height   : this.prop.height,\n      top      : 0,\n      left     : 0,\n      arrowTop : 0,\n      arrowLeft: 0,\n    };\n\n    // set initial position\n    this.__computeTooltipPosition(style, config);\n\n    // correct position if overflow\n    let swapY = null;\n    let swapX = null;\n    if (style.top < 0) {\n      swapY = 'bottom';\n    }\n    else if (style.top + style.height > this.psv.prop.size.height) {\n      swapY = 'top';\n    }\n    if (style.left < 0) {\n      swapX = 'right';\n    }\n    else if (style.left + style.width > this.psv.prop.size.width) {\n      swapX = 'left';\n    }\n    if (swapX || swapY) {\n      const ordered = positionIsOrdered(style.posClass);\n      if (swapY) {\n        style.posClass[ordered ? 0 : 1] = swapY;\n      }\n      if (swapX) {\n        style.posClass[ordered ? 1 : 0] = swapX;\n      }\n      this.__computeTooltipPosition(style, config);\n    }\n\n    // apply position\n    t.style.top = style.top + 'px';\n    t.style.left = style.left + 'px';\n\n    a.style.top = style.arrowTop + 'px';\n    a.style.left = style.arrowLeft + 'px';\n\n    const newPos = style.posClass.join('-');\n    if (newPos !== this.prop.pos) {\n      t.classList.remove(`psv-tooltip--${this.prop.pos}`);\n\n      this.prop.pos = newPos;\n      t.classList.add(`psv-tooltip--${this.prop.pos}`);\n    }\n  }\n\n  /**\n   * @summary Hides the tooltip\n   * @fires PSV.hide-tooltip\n   */\n  hide() {\n    this.container.classList.remove('psv-tooltip--visible');\n    this.prop.state = STATE.HIDING;\n\n    this.psv.trigger(EVENTS.HIDE_TOOLTIP, this.prop.data);\n  }\n\n  /**\n   * @summary Finalize transition\n   * @param {TransitionEvent} e\n   * @private\n   */\n  __onTransitionEnd(e) {\n    if (e.propertyName === 'transform') {\n      switch (this.prop.state) {\n        case STATE.SHOWING:\n          this.container.classList.add('psv-tooltip--visible');\n          this.prop.state = STATE.READY;\n          break;\n\n        case STATE.HIDING:\n          this.prop.state = STATE.NONE;\n          this.destroy();\n          break;\n\n        default:\n        // nothing\n      }\n    }\n  }\n\n  /**\n   * @summary Computes the position of the tooltip and its arrow\n   * @param {Object} style\n   * @param {Object} config\n   * @private\n   */\n  __computeTooltipPosition(style, config) {\n    const arrow = this.prop.arrow;\n    const top = config.top;\n    const height = style.height;\n    const left = config.left;\n    const width = style.width;\n    const offsetSide = arrow + this.prop.border;\n    const offsetX = config.box.width / 2 + arrow * 2;\n    const offsetY = config.box.height / 2 + arrow * 2;\n\n    switch (style.posClass.join('-')) {\n      case 'top-left':\n        style.top = top - offsetY - height;\n        style.left = left + offsetSide - width;\n        style.arrowTop = height;\n        style.arrowLeft = width - offsetSide - arrow;\n        break;\n      case 'top-center':\n        style.top = top - offsetY - height;\n        style.left = left - width / 2;\n        style.arrowTop = height;\n        style.arrowLeft = width / 2 - arrow;\n        break;\n      case 'top-right':\n        style.top = top - offsetY - height;\n        style.left = left - offsetSide;\n        style.arrowTop = height;\n        style.arrowLeft = arrow;\n        break;\n      case 'bottom-left':\n        style.top = top + offsetY;\n        style.left = left + offsetSide - width;\n        style.arrowTop = -arrow * 2;\n        style.arrowLeft = width - offsetSide - arrow;\n        break;\n      case 'bottom-center':\n        style.top = top + offsetY;\n        style.left = left - width / 2;\n        style.arrowTop = -arrow * 2;\n        style.arrowLeft = width / 2 - arrow;\n        break;\n      case 'bottom-right':\n        style.top = top + offsetY;\n        style.left = left - offsetSide;\n        style.arrowTop = -arrow * 2;\n        style.arrowLeft = arrow;\n        break;\n      case 'left-top':\n        style.top = top + offsetSide - height;\n        style.left = left - offsetX - width;\n        style.arrowTop = height - offsetSide - arrow;\n        style.arrowLeft = width;\n        break;\n      case 'center-left':\n        style.top = top - height / 2;\n        style.left = left - offsetX - width;\n        style.arrowTop = height / 2 - arrow;\n        style.arrowLeft = width;\n        break;\n      case 'left-bottom':\n        style.top = top - offsetSide;\n        style.left = left - offsetX - width;\n        style.arrowTop = arrow;\n        style.arrowLeft = width;\n        break;\n      case 'right-top':\n        style.top = top + offsetSide - height;\n        style.left = left + offsetX;\n        style.arrowTop = height - offsetSide - arrow;\n        style.arrowLeft = -arrow * 2;\n        break;\n      case 'center-right':\n        style.top = top - height / 2;\n        style.left = left + offsetX;\n        style.arrowTop = height / 2 - arrow;\n        style.arrowLeft = -arrow * 2;\n        break;\n      case 'right-bottom':\n        style.top = top - offsetSide;\n        style.left = left + offsetX;\n        style.arrowTop = arrow;\n        style.arrowLeft = -arrow * 2;\n        break;\n\n      // no default\n    }\n  }\n\n  /**\n   * @summary If the tooltip contains images, recompute its size once they are loaded\n   * @private\n   */\n  __waitImages() {\n    const images = this.content.querySelectorAll('img');\n\n    if (images.length > 0) {\n      const promises = [];\n\n      images.forEach((image) => {\n        promises.push(new Promise((resolve) => {\n          image.onload = resolve;\n          image.onerror = resolve;\n        }));\n      });\n\n      Promise.all(promises)\n        .then(() => {\n          if (this.prop.state === STATE.SHOWING || this.prop.state === STATE.READY) {\n            const rect = this.container.getBoundingClientRect();\n            this.prop.width = rect.right - rect.left;\n            this.prop.height = rect.bottom - rect.top;\n            this.move(this.config);\n          }\n        });\n    }\n  }\n\n}\n","import { Tooltip } from '../components/Tooltip';\nimport { getStyle } from '../utils';\nimport { AbstractService } from './AbstractService';\n\n/**\n * @summary Tooltip renderer\n * @extends PSV.services.AbstractService\n * @memberof PSV.services\n */\nexport class TooltipRenderer extends AbstractService {\n\n  /**\n   * @param {PSV.Viewer} psv\n   */\n  constructor(psv) {\n    super(psv);\n\n    const testTooltip = new Tooltip(this.psv, { arrow: 0, border: 0 });\n\n    /**\n     * @summary Computed static sizes\n     * @member {Object}\n     * @package\n     * @property {number} arrow\n     * @property {number} border\n     */\n    this.size = {\n      arrow : parseInt(getStyle(testTooltip.arrow, 'borderTopWidth'), 10),\n      border: parseInt(getStyle(testTooltip.container, 'borderTopLeftRadius'), 10),\n    };\n\n    testTooltip.destroy();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    delete this.size;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Displays a tooltip on the viewer\n   * @param {PSV.components.Tooltip.Config} config\n   * @returns {PSV.components.Tooltip}\n   *\n   * @fires PSV.show-tooltip\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   *\n   * @example\n   * viewer.tooltip.create({ content: 'Hello world', top: 200, left: 450, position: 'center bottom'})\n   */\n  create(config) {\n    const tooltip = new Tooltip(this.psv, this.size);\n    tooltip.show(config);\n\n    return tooltip;\n  }\n\n}\n","import { Cache, MathUtils, Vector3 } from 'three';\nimport { EventEmitter } from 'uevent';\nimport { Loader } from './components/Loader';\nimport { Navbar } from './components/Navbar';\nimport { Notification } from './components/Notification';\nimport { Overlay } from './components/Overlay';\nimport { Panel } from './components/Panel';\nimport { CONFIG_PARSERS, DEFAULTS, DEPRECATED_OPTIONS, getConfig, READONLY_OPTIONS } from './data/config';\nimport {\n  ANIMATION_MIN_DURATION,\n  CHANGE_EVENTS,\n  DEFAULT_TRANSITION,\n  EVENTS,\n  IDS,\n  SPHERE_RADIUS,\n  VIEWER_DATA\n} from './data/constants';\nimport { SYSTEM } from './data/system';\nimport errorIcon from './icons/error.svg';\nimport { AbstractPlugin } from './plugins/AbstractPlugin';\nimport { PSVError } from './PSVError';\nimport { DataHelper } from './services/DataHelper';\nimport { EventsHandler } from './services/EventsHandler';\nimport { Renderer } from './services/Renderer';\nimport { TextureLoader } from './services/TextureLoader';\nimport { TooltipRenderer } from './services/TooltipRenderer';\nimport {\n  Animation,\n  Dynamic,\n  each,\n  exitFullscreen,\n  getAbortError,\n  getAngle,\n  getShortestArc,\n  isAbortError,\n  isExtendedPosition,\n  isFullscreenEnabled,\n  isNil,\n  logWarn,\n  MultiDynamic,\n  pluginInterop,\n  requestFullscreen,\n  throttle,\n  toggleClass\n} from './utils';\n\nCache.enabled = true;\n\n/**\n * @summary Main class\n * @memberOf PSV\n * @extends {external:uEvent.EventEmitter}\n */\nexport class Viewer extends EventEmitter {\n\n  /**\n   * @param {PSV.Options} options\n   * @fires PSV.ready\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  constructor(options) {\n    super();\n\n    SYSTEM.load();\n\n    // must support WebGL\n    if (!SYSTEM.isWebGLSupported) {\n      throw new PSVError('WebGL is not supported.');\n    }\n\n    if (SYSTEM.maxTextureWidth === 0) {\n      throw new PSVError('Unable to detect system capabilities');\n    }\n\n    /**\n     * @summary Internal properties\n     * @member {Object}\n     * @protected\n     * @property {boolean} ready - when all components are loaded\n     * @property {boolean} uiRefresh - if the UI needs to be renderer\n     * @property {boolean} needsUpdate - if the view needs to be renderer\n     * @property {boolean} fullscreen - if the viewer is currently fullscreen\n     * @property {external:THREE.Vector3} direction - direction of the camera\n     * @property {number} vFov - vertical FOV\n     * @property {number} hFov - horizontal FOV\n     * @property {number} aspect - viewer aspect ratio\n     * @property {boolean} autorotateEnabled - automatic rotation is enabled\n     * @property {PSV.utils.Animation} animationPromise - promise of the current animation\n     * @property {Promise} loadingPromise - promise of the setPanorama method\n     * @property {boolean} littlePlanet - special tweaks for LittlePlanetAdapter\n     * @property {number} idleTime - time of the last user action\n     * @property {object} objectsObservers\n     * @property {PSV.Size} size - size of the container\n     * @property {PSV.PanoData} panoData - panorama metadata, if supported\n     */\n    this.prop = {\n      ready            : false,\n      uiRefresh        : false,\n      needsUpdate      : false,\n      fullscreen       : false,\n      direction        : new Vector3(0, 0, SPHERE_RADIUS),\n      vFov             : null,\n      hFov             : null,\n      aspect           : null,\n      autorotateEnabled: false,\n      animationPromise : null,\n      loadingPromise   : null,\n      littlePlanet     : false,\n      idleTime         : -1,\n      objectsObservers : {},\n      size             : {\n        width : 0,\n        height: 0,\n      },\n      panoData         : {\n        fullWidth    : 0,\n        fullHeight   : 0,\n        croppedWidth : 0,\n        croppedHeight: 0,\n        croppedX     : 0,\n        croppedY     : 0,\n        poseHeading  : 0,\n        posePitch    : 0,\n        poseRoll     : 0,\n      },\n    };\n\n    /**\n     * @summary Configuration holder\n     * @type {PSV.Options}\n     * @readonly\n     */\n    this.config = getConfig(options);\n\n    /**\n     * @summary Top most parent\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.parent = (typeof options.container === 'string') ? document.getElementById(options.container) : options.container;\n    this.parent[VIEWER_DATA] = this;\n\n    /**\n     * @summary Main container\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.container = document.createElement('div');\n    this.container.classList.add('psv-container');\n    this.parent.appendChild(this.container);\n\n    /**\n     * @summary Render adapter\n     * @type {PSV.adapters.AbstractAdapter}\n     * @readonly\n     * @package\n     */\n    this.adapter = new this.config.adapter[0](this, this.config.adapter[1]); // eslint-disable-line new-cap\n\n    /**\n     * @summary All child components\n     * @type {PSV.components.AbstractComponent[]}\n     * @readonly\n     * @package\n     */\n    this.children = [];\n\n    /**\n     * @summary All plugins\n     * @type {Object<string, PSV.plugins.AbstractPlugin>}\n     * @readonly\n     * @package\n     */\n    this.plugins = {};\n\n    /**\n     * @type {PSV.services.Renderer}\n     * @readonly\n     */\n    this.renderer = new Renderer(this);\n\n    /**\n     * @type {PSV.services.TextureLoader}\n     * @readonly\n     */\n    this.textureLoader = new TextureLoader(this);\n\n    /**\n     * @type {PSV.services.EventsHandler}\n     * @readonly\n     */\n    this.eventsHandler = new EventsHandler(this);\n\n    /**\n     * @type {PSV.services.DataHelper}\n     * @readonly\n     */\n    this.dataHelper = new DataHelper(this);\n\n    /**\n     * @member {PSV.components.Loader}\n     * @readonly\n     */\n    this.loader = new Loader(this);\n\n    /**\n     * @member {PSV.components.Navbar}\n     * @readonly\n     */\n    this.navbar = new Navbar(this);\n\n    /**\n     * @member {PSV.components.Panel}\n     * @readonly\n     */\n    this.panel = new Panel(this);\n\n    /**\n     * @member {PSV.services.TooltipRenderer}\n     * @readonly\n     */\n    this.tooltip = new TooltipRenderer(this);\n\n    /**\n     * @member {PSV.components.Notification}\n     * @readonly\n     */\n    this.notification = new Notification(this);\n\n    /**\n     * @member {PSV.components.Overlay}\n     * @readonly\n     */\n    this.overlay = new Overlay(this);\n\n    /**\n     * @member {Record<string, PSV.utils.Dynamic>}\n     * @package\n     */\n    this.dynamics = {\n      zoom: new Dynamic((value) => {\n        this.prop.vFov = this.dataHelper.zoomLevelToFov(value);\n        this.prop.hFov = this.dataHelper.vFovToHFov(this.prop.vFov);\n        this.trigger(EVENTS.ZOOM_UPDATED, value);\n      }, this.config.defaultZoomLvl, 0, 100),\n\n      position: new MultiDynamic({\n        longitude: new Dynamic(null, this.config.defaultLong, 0, 2 * Math.PI, true),\n        latitude : this.prop.littlePlanet\n          ? new Dynamic(null, this.config.defaultLat, 0, Math.PI * 2, true)\n          : new Dynamic(null, this.config.defaultLat, -Math.PI / 2, Math.PI / 2),\n      }, (position) => {\n        this.dataHelper.sphericalCoordsToVector3(position, this.prop.direction);\n        this.trigger(EVENTS.POSITION_UPDATED, position);\n      }),\n    };\n\n    this.__updateSpeeds();\n\n    this.eventsHandler.init();\n\n    this.__resizeRefresh = throttle(() => this.refreshUi('resize'), 500);\n\n    // apply container size\n    this.resize(this.config.size);\n\n    // init plugins\n    this.config.plugins.forEach(([plugin, opts]) => {\n      this.plugins[plugin.id] = new plugin(this, opts); // eslint-disable-line new-cap\n    });\n    each(this.plugins, plugin => plugin.init?.());\n\n    // init buttons\n    this.navbar.setButtons(this.config.navbar);\n\n    // load panorama\n    if (this.config.panorama) {\n      this.setPanorama(this.config.panorama);\n    }\n\n    toggleClass(this.container, 'psv--is-touch', SYSTEM.isTouchEnabled.initial);\n    SYSTEM.isTouchEnabled.promise.then(enabled => toggleClass(this.container, 'psv--is-touch', enabled));\n\n    // enable GUI after first render\n    this.once(EVENTS.RENDER, () => {\n      if (this.config.navbar) {\n        this.container.classList.add('psv--has-navbar');\n        this.navbar.show();\n      }\n\n      // Queue autorotate\n      if (!isNil(this.config.autorotateDelay)) {\n        this.prop.idleTime = performance.now();\n      }\n\n      this.prop.ready = true;\n\n      setTimeout(() => {\n        this.refreshUi('init');\n\n        this.trigger(EVENTS.READY);\n      }, 0);\n    });\n  }\n\n  /**\n   * @summary Destroys the viewer\n   * @description The memory used by the ThreeJS context is not totally cleared. This will be fixed as soon as possible.\n   */\n  destroy() {\n    this.__stopAll();\n    this.stopKeyboardControl();\n    this.exitFullscreen();\n\n    each(this.plugins, plugin => plugin.destroy());\n    delete this.plugins;\n\n    this.children.slice().forEach(child => child.destroy());\n    this.children.length = 0;\n\n    this.eventsHandler.destroy();\n    this.renderer.destroy();\n    this.textureLoader.destroy();\n    this.dataHelper.destroy();\n    this.adapter.destroy();\n\n    this.parent.removeChild(this.container);\n    delete this.parent[VIEWER_DATA];\n\n    delete this.parent;\n    delete this.container;\n\n    delete this.loader;\n    delete this.navbar;\n    delete this.panel;\n    delete this.tooltip;\n    delete this.notification;\n    delete this.overlay;\n    delete this.dynamics;\n\n    delete this.config;\n  }\n\n  /**\n   * @summary Refresh UI\n   * @package\n   */\n  refreshUi(reason) {\n    if (!this.prop.ready) {\n      return;\n    }\n\n    if (!this.prop.uiRefresh) {\n      // console.log(`PhotoSphereViewer: UI Refresh, ${reason}`);\n\n      this.prop.uiRefresh = true;\n\n      this.children.every((child) => {\n        child.refreshUi();\n        return this.prop.uiRefresh === true;\n      });\n\n      this.prop.uiRefresh = false;\n    }\n    else if (this.prop.uiRefresh !== 'new') {\n      this.prop.uiRefresh = 'new';\n\n      // wait for current refresh to cancel\n      setTimeout(() => {\n        this.prop.uiRefresh = false;\n        this.refreshUi(reason);\n      });\n    }\n  }\n\n  /**\n   * @summary Returns the instance of a plugin if it exists\n   * @param {Class<PSV.plugins.AbstractPlugin>|string} pluginId\n   * @returns {PSV.plugins.AbstractPlugin}\n   */\n  getPlugin(pluginId) {\n    if (typeof pluginId === 'string') {\n      return this.plugins[pluginId];\n    }\n    else {\n      const pluginCtor = pluginInterop(pluginId, AbstractPlugin);\n      return pluginCtor ? this.plugins[pluginCtor.id] : undefined;\n    }\n  }\n\n  /**\n   * @summary Returns the current position of the camera\n   * @returns {PSV.Position}\n   */\n  getPosition() {\n    return this.dataHelper.cleanPosition(this.dynamics.position.current);\n  }\n\n  /**\n   * @summary Returns the current zoom level\n   * @returns {number}\n   */\n  getZoomLevel() {\n    return this.dynamics.zoom.current;\n  }\n\n  /**\n   * @summary Returns the current viewer size\n   * @returns {PSV.Size}\n   */\n  getSize() {\n    return { ...this.prop.size };\n  }\n\n  /**\n   * @summary Checks if the automatic rotation is enabled\n   * @returns {boolean}\n   */\n  isAutorotateEnabled() {\n    return this.prop.autorotateEnabled;\n  }\n\n  /**\n   * @summary Checks if the viewer is in fullscreen\n   * @returns {boolean}\n   */\n  isFullscreenEnabled() {\n    if (SYSTEM.fullscreenEvent) {\n      return isFullscreenEnabled(this.container);\n    }\n    else {\n      return this.prop.fullscreen;\n    }\n  }\n\n  /**\n   * @summary Flags the view has changed for the next render\n   */\n  needsUpdate() {\n    this.prop.needsUpdate = true;\n  }\n\n  /**\n   * @summary Resizes the canvas when the window is resized\n   * @fires PSV.size-updated\n   */\n  autoSize() {\n    if (this.container.clientWidth !== this.prop.size.width || this.container.clientHeight !== this.prop.size.height) {\n      this.prop.size.width = Math.round(this.container.clientWidth);\n      this.prop.size.height = Math.round(this.container.clientHeight);\n      this.prop.aspect = this.prop.size.width / this.prop.size.height;\n      this.prop.hFov = this.dataHelper.vFovToHFov(this.prop.vFov);\n\n      this.trigger(EVENTS.SIZE_UPDATED, this.getSize());\n      this.__resizeRefresh();\n    }\n  }\n\n  /**\n   * @summary Loads a new panorama file\n   * @description Loads a new panorama file, optionally changing the camera position/zoom and activating the transition animation.<br>\n   * If the \"options\" parameter is not defined, the camera will not move and the ongoing animation will continue.<br>\n   * If another loading is already in progress it will be aborted.\n   * @param {*} path - URL of the new panorama file\n   * @param {PSV.PanoramaOptions} [options]\n   * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n   */\n  setPanorama(path, options = {}) {\n    this.textureLoader.abortLoading();\n    this.prop.transitionAnimation?.cancel();\n\n    // apply default parameters on first load\n    if (!this.prop.ready) {\n      ['sphereCorrection', 'panoData', 'overlay', 'overlayOpacity'].forEach((opt) => {\n        if (!(opt in options)) {\n          options[opt] = this.config[opt];\n        }\n      });\n    }\n\n    if (options.transition === undefined || options.transition === true) {\n      options.transition = DEFAULT_TRANSITION;\n    }\n    if (options.showLoader === undefined) {\n      options.showLoader = true;\n    }\n    if (options.caption === undefined) {\n      options.caption = this.config.caption;\n    }\n    if (options.description === undefined) {\n      options.description = this.config.description;\n    }\n    if (!options.panoData && typeof this.config.panoData === 'function') {\n      options.panoData = this.config.panoData;\n    }\n\n    const positionProvided = isExtendedPosition(options);\n    const zoomProvided = 'zoom' in options;\n\n    if (positionProvided || zoomProvided) {\n      this.__stopAll();\n    }\n\n    this.hideError();\n\n    this.config.panorama = path;\n    this.config.caption = options.caption;\n    this.config.description = options.description;\n\n    const done = (err) => {\n      this.loader.hide();\n\n      this.prop.loadingPromise = null;\n\n      if (isAbortError(err)) {\n        return false;\n      }\n      else if (err) {\n        this.navbar.setCaption('');\n        this.showError(this.config.lang.loadError);\n        console.error(err);\n        throw err;\n      }\n      else {\n        this.resetIdleTimer();\n        this.setOverlay(options.overlay, options.overlayOpacity);\n        this.navbar.setCaption(this.config.caption);\n        return true;\n      }\n    };\n\n    this.navbar.setCaption(`<em>${this.config.loadingTxt || ''}</em>`);\n    if (options.showLoader || !this.prop.ready) {\n      this.loader.show();\n    }\n\n    const loadingPromise = this.adapter.loadTexture(this.config.panorama, options.panoData)\n      .then((textureData) => {\n        // check if another panorama was requested\n        if (textureData.panorama !== this.config.panorama) {\n          this.adapter.disposeTexture(textureData);\n          throw getAbortError();\n        }\n        return textureData;\n      });\n\n    if (!options.transition || !this.prop.ready || !this.adapter.supportsTransition(this.config.panorama)) {\n      this.prop.loadingPromise = loadingPromise\n        .then((textureData) => {\n          this.renderer.show();\n          this.renderer.setTexture(textureData);\n          this.renderer.setPanoramaPose(textureData.panoData);\n          this.renderer.setSphereCorrection(options.sphereCorrection);\n\n          if (zoomProvided) {\n            this.zoom(options.zoom);\n          }\n          if (positionProvided) {\n            this.rotate(options);\n          }\n        })\n        .then(done, done);\n    }\n    else {\n      this.prop.loadingPromise = loadingPromise\n        .then((textureData) => {\n          this.loader.hide();\n\n          this.prop.transitionAnimation = this.renderer.transition(textureData, options);\n          return this.prop.transitionAnimation;\n        })\n        .then((completed) => {\n          this.prop.transitionAnimation = null;\n          if (!completed) {\n            throw getAbortError();\n          }\n        })\n        .then(done, done);\n    }\n\n    return this.prop.loadingPromise;\n  }\n\n  /**\n   * @summary Loads a new overlay\n   * @param {*} path - URL of the new overlay file\n   * @param {number} [opacity=1]\n   * @returns {Promise}\n   */\n  setOverlay(path, opacity = 1) {\n    if (!path) {\n      if (this.adapter.constructor.supportsOverlay) {\n        this.renderer.setOverlay(null, 0);\n      }\n\n      return Promise.resolve();\n    }\n    else {\n      if (!this.adapter.constructor.supportsOverlay) {\n        return Promise.reject(new PSVError(`${this.adapter.constructor.id} adapter does not supports overlay`));\n      }\n\n      return this.adapter.loadTexture(path, (image) => {\n        const p = this.prop.panoData;\n        const r = image.width / p.croppedWidth;\n        return {\n          fullWidth    : r * p.fullWidth,\n          fullHeight   : r * p.fullHeight,\n          croppedWidth : r * p.croppedWidth,\n          croppedHeight: r * p.croppedHeight,\n          croppedX     : r * p.croppedX,\n          croppedY     : r * p.croppedY,\n        };\n      }, false)\n        .then((textureData) => {\n          this.renderer.setOverlay(textureData, opacity);\n        });\n    }\n  }\n\n  /**\n   * @summary Update options\n   * @param {PSV.Options} options\n   * @fires PSV.config-changed\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  setOptions(options) {\n    const rawConfig = {\n      ...this.config,\n      ...options,\n    };\n\n    each(options, (value, key) => {\n      if (DEPRECATED_OPTIONS[key]) {\n        logWarn(DEPRECATED_OPTIONS[key]);\n        return;\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(DEFAULTS, key)) {\n        throw new PSVError(`Unknown option ${key}`);\n      }\n\n      if (READONLY_OPTIONS[key]) {\n        throw new PSVError(READONLY_OPTIONS[key]);\n      }\n\n      if (CONFIG_PARSERS[key]) {\n        this.config[key] = CONFIG_PARSERS[key](value, rawConfig);\n      }\n      else {\n        this.config[key] = value;\n      }\n\n      switch (key) {\n        case 'overlay':\n        case 'overlayOpacity':\n          this.setOverlay(this.config.overlay, this.config.overlayOpacity);\n          break;\n\n        case 'caption':\n        case 'description':\n          this.navbar.setCaption(this.config.caption);\n          break;\n\n        case 'size':\n          this.resize(value);\n          break;\n\n        case 'sphereCorrection':\n          this.renderer.setSphereCorrection(value);\n          break;\n\n        case 'navbar':\n        case 'lang':\n          this.navbar.setButtons(this.config.navbar);\n          break;\n\n        case 'moveSpeed':\n        case 'zoomSpeed':\n          this.__updateSpeeds();\n          break;\n\n        case 'minFov':\n        case 'maxFov':\n          this.dynamics.zoom.setValue(this.dataHelper.fovToZoomLevel(this.prop.vFov));\n          this.trigger(EVENTS.ZOOM_UPDATED, this.getZoomLevel());\n          break;\n\n        case 'canvasBackground':\n          this.renderer.canvasContainer.style.background = this.config.canvasBackground;\n          break;\n\n        case 'autorotateIdle':\n          this.resetIdleTimer();\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    this.needsUpdate();\n    this.refreshUi('set options');\n\n    this.trigger(EVENTS.CONFIG_CHANGED, Object.keys(options));\n  }\n\n  /**\n   * @summary Update options\n   * @param {string} option\n   * @param {any} value\n   * @fires PSV.config-changed\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  setOption(option, value) {\n    this.setOptions({ [option]: value });\n  }\n\n  /**\n   * @summary Restarts the idle timer (if `autorotateIdle=true`)\n   * @package\n   */\n  resetIdleTimer() {\n    this.prop.idleTime = this.config.autorotateIdle ? performance.now() : -1;\n  }\n\n  /**\n   * @summary Stops the idle timer\n   * @package\n   */\n  disableIdleTimer() {\n    this.prop.idleTime = -1;\n  }\n\n  /**\n   * @summary Starts the automatic rotation\n   * @fires PSV.autorotate\n   */\n  startAutorotate(refresh = false) {\n    if (refresh && !this.isAutorotateEnabled()) {\n      return;\n    }\n    if (!refresh && this.isAutorotateEnabled()) {\n      return;\n    }\n\n    if (!refresh) {\n      this.__stopAll();\n    }\n\n    this.dynamics.position.roll({\n      longitude: this.config.autorotateSpeed < 0,\n    }, Math.abs(this.config.autorotateSpeed / this.config.moveSpeed));\n\n    this.dynamics.position.goto({\n      latitude: this.config.autorotateLat,\n    }, Math.abs(this.config.autorotateSpeed / this.config.moveSpeed));\n\n    if (this.config.autorotateZoomLvl !== null) {\n      this.dynamics.zoom.goto(this.config.autorotateZoomLvl);\n    }\n\n    this.prop.autorotateEnabled = true;\n\n    if (!refresh) {\n      this.trigger(EVENTS.AUTOROTATE, true);\n    }\n  }\n\n  /**\n   * @summary Stops the automatic rotation\n   * @fires PSV.autorotate\n   */\n  stopAutorotate() {\n    if (this.isAutorotateEnabled()) {\n      this.dynamics.position.stop();\n      this.dynamics.zoom.stop();\n\n      this.prop.autorotateEnabled = false;\n\n      this.trigger(EVENTS.AUTOROTATE, false);\n    }\n  }\n\n  /**\n   * @summary Starts or stops the automatic rotation\n   * @fires PSV.autorotate\n   */\n  toggleAutorotate() {\n    if (this.isAutorotateEnabled()) {\n      this.stopAutorotate();\n    }\n    else {\n      this.startAutorotate();\n    }\n  }\n\n  /**\n   * @summary Displays an error message over the viewer\n   * @param {string} message\n   */\n  showError(message) {\n    this.overlay.show({\n      id         : IDS.ERROR,\n      image      : errorIcon,\n      text       : message,\n      dissmisable: false,\n    });\n  }\n\n  /**\n   * @summary Hides the error message\n   */\n  hideError() {\n    this.overlay.hide(IDS.ERROR);\n  }\n\n  /**\n   * @summary Rotates the view to specific longitude and latitude\n   * @param {PSV.ExtendedPosition} position\n   * @fires PSV.before-rotate\n   * @fires PSV.position-updated\n   */\n  rotate(position) {\n    const e = this.trigger(EVENTS.BEFORE_ROTATE, position);\n    if (e.isDefaultPrevented()) {\n      return;\n    }\n\n    const cleanPosition = this.change(CHANGE_EVENTS.GET_ROTATE_POSITION, this.dataHelper.cleanPosition(position));\n    this.dynamics.position.setValue(cleanPosition);\n  }\n\n  /**\n   * @summary Rotates and zooms the view with a smooth animation\n   * @param {PSV.AnimateOptions} options - position and/or zoom level\n   * @returns {PSV.utils.Animation}\n   */\n  animate(options) {\n    this.__stopAll();\n\n    const positionProvided = isExtendedPosition(options);\n    const zoomProvided = options.zoom !== undefined;\n\n    const animProperties = {};\n    let duration;\n\n    // clean/filter position and compute duration\n    if (positionProvided) {\n      const cleanPosition = this.change(CHANGE_EVENTS.GET_ANIMATE_POSITION, this.dataHelper.cleanPosition(options));\n      const currentPosition = this.getPosition();\n\n      // longitude offset for shortest arc\n      const tOffset = getShortestArc(currentPosition.longitude, cleanPosition.longitude);\n\n      animProperties.longitude = { start: currentPosition.longitude, end: currentPosition.longitude + tOffset };\n      animProperties.latitude = { start: currentPosition.latitude, end: cleanPosition.latitude };\n\n      duration = this.dataHelper.speedToDuration(options.speed, getAngle(currentPosition, cleanPosition));\n    }\n\n    // clean/filter zoom and compute duration\n    if (zoomProvided) {\n      const dZoom = Math.abs(options.zoom - this.getZoomLevel());\n\n      animProperties.zoom = { start: this.getZoomLevel(), end: options.zoom };\n\n      if (!duration) {\n        // if animating zoom only and a speed is given, use an arbitrary PI/4 to compute the duration\n        duration = this.dataHelper.speedToDuration(options.speed, Math.PI / 4 * dZoom / 100);\n      }\n    }\n\n    // if no animation needed\n    if (!duration) {\n      if (positionProvided) {\n        this.rotate(options);\n      }\n      if (zoomProvided) {\n        this.zoom(options.zoom);\n      }\n\n      return new Animation();\n    }\n\n    this.prop.animationPromise = new Animation({\n      properties: animProperties,\n      duration  : Math.max(ANIMATION_MIN_DURATION, duration),\n      easing    : 'inOutSine',\n      onTick    : (properties) => {\n        if (positionProvided) {\n          this.rotate(properties);\n        }\n        if (zoomProvided) {\n          this.zoom(properties.zoom);\n        }\n      },\n    });\n\n    this.prop.animationPromise.then(() => {\n      this.prop.animationPromise = null;\n      this.resetIdleTimer();\n    });\n\n    return this.prop.animationPromise;\n  }\n\n  /**\n   * @summary Stops the ongoing animation\n   * @description The return value is a Promise because the is no guaranty the animation can be stopped synchronously.\n   * @returns {Promise} Resolved when the animation has ben cancelled\n   */\n  stopAnimation() {\n    if (this.prop.animationPromise) {\n      this.prop.animationPromise.cancel();\n      return this.prop.animationPromise;\n    }\n    else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * @summary Zooms to a specific level between `max_fov` and `min_fov`\n   * @param {number} level - new zoom level from 0 to 100\n   * @fires PSV.zoom-updated\n   */\n  zoom(level) {\n    this.dynamics.zoom.setValue(level);\n  }\n\n  /**\n   * @summary Increases the zoom level\n   * @param {number} [step=1]\n   */\n  zoomIn(step = 1) {\n    this.dynamics.zoom.step(step);\n  }\n\n  /**\n   * @summary Decreases the zoom level\n   * @param {number} [step=1]\n   */\n  zoomOut(step = 1) {\n    this.dynamics.zoom.step(-step);\n  }\n\n  /**\n   * @summary Resizes the viewer\n   * @param {PSV.CssSize} size\n   */\n  resize(size) {\n    ['width', 'height'].forEach((dim) => {\n      if (size && size[dim]) {\n        if (/^[0-9.]+$/.test(size[dim])) {\n          size[dim] += 'px';\n        }\n        this.parent.style[dim] = size[dim];\n      }\n    });\n\n    this.autoSize();\n  }\n\n  /**\n   * @summary Enters the fullscreen mode\n   * @fires PSV.fullscreen-updated\n   */\n  enterFullscreen() {\n    if (SYSTEM.fullscreenEvent) {\n      requestFullscreen(this.container);\n    }\n    else {\n      this.container.classList.add('psv-container--fullscreen');\n      this.autoSize();\n      this.eventsHandler.__fullscreenToggled(true);\n    }\n  }\n\n  /**\n   * @summary Exits the fullscreen mode\n   * @fires PSV.fullscreen-updated\n   */\n  exitFullscreen() {\n    if (this.isFullscreenEnabled()) {\n      if (SYSTEM.fullscreenEvent) {\n        exitFullscreen();\n      }\n      else {\n        this.container.classList.remove('psv-container--fullscreen');\n        this.autoSize();\n        this.eventsHandler.__fullscreenToggled(false);\n      }\n    }\n  }\n\n  /**\n   * @summary Enters or exits the fullscreen mode\n   * @fires PSV.fullscreen-updated\n   */\n  toggleFullscreen() {\n    if (!this.isFullscreenEnabled()) {\n      this.enterFullscreen();\n    }\n    else {\n      this.exitFullscreen();\n    }\n  }\n\n  /**\n   * @summary Enables the keyboard controls (done automatically when entering fullscreen)\n   */\n  startKeyboardControl() {\n    this.eventsHandler.enableKeyboard();\n  }\n\n  /**\n   * @summary Disables the keyboard controls (done automatically when exiting fullscreen)\n   */\n  stopKeyboardControl() {\n    this.eventsHandler.disableKeyboard();\n  }\n\n  /**\n   * @summary Subscribes to events on objects in the scene\n   * @param {string} userDataKey - only objects with the following `userData` will be emitted\n   * @param {EventListener} listener - must implement `handleEvent`\n   * @return {function} call to stop the subscription\n   * @package\n   */\n  observeObjects(userDataKey, listener) {\n    this.prop.objectsObservers[userDataKey] = { listener };\n\n    return () => {\n      delete this.prop.objectsObservers[userDataKey];\n    };\n  }\n\n  /**\n   * @summary Stops all current animations\n   * @returns {Promise}\n   * @package\n   */\n  __stopAll() {\n    this.trigger(EVENTS.STOP_ALL);\n\n    this.disableIdleTimer();\n    this.stopAutorotate();\n    return this.stopAnimation();\n  }\n\n  /**\n   * @summary Recomputes dynamics speeds\n   * @private\n   */\n  __updateSpeeds() {\n    this.dynamics.zoom.setSpeed(this.config.zoomSpeed * 50);\n    this.dynamics.position.setSpeed(MathUtils.degToRad(this.config.moveSpeed * 50));\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}